# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_pyctp')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_pyctp')
    _pyctp = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_pyctp', [dirname(__file__)])
        except ImportError:
            import _pyctp
            return _pyctp
        try:
            _mod = imp.load_module('_pyctp', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _pyctp = swig_import_helper()
    del swig_import_helper
else:
    import _pyctp
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except __builtin__.Exception:
    class _object:
        pass
    _newclass = 0

try:
    import weakref
    weakref_proxy = weakref.proxy
except __builtin__.Exception:
    weakref_proxy = lambda x: x


QDP_TERT_RESTART = _pyctp.QDP_TERT_RESTART
QDP_TERT_RESUME = _pyctp.QDP_TERT_RESUME
QDP_TERT_QUICK = _pyctp.QDP_TERT_QUICK
QDP_EI_CFFEX = _pyctp.QDP_EI_CFFEX
QDP_EI_SHFE = _pyctp.QDP_EI_SHFE
QDP_EI_DCE = _pyctp.QDP_EI_DCE
QDP_EI_ZCE = _pyctp.QDP_EI_ZCE
QDP_EI_SSE = _pyctp.QDP_EI_SSE
QDP_EI_SZSE = _pyctp.QDP_EI_SZSE
QDP_EI_SGE = _pyctp.QDP_EI_SGE
QDP_EI_CME = _pyctp.QDP_EI_CME
QDP_EI_LME = _pyctp.QDP_EI_LME
QDP_EI_GTJA = _pyctp.QDP_EI_GTJA
QDP_EI_INE = _pyctp.QDP_EI_INE
QDP_FTDC_VC_AV = _pyctp.QDP_FTDC_VC_AV
QDP_FTDC_VC_MV = _pyctp.QDP_FTDC_VC_MV
QDP_FTDC_VC_CV = _pyctp.QDP_FTDC_VC_CV
QDP_FTDC_FCR_NotForceClose = _pyctp.QDP_FTDC_FCR_NotForceClose
QDP_FTDC_FCR_LackDeposit = _pyctp.QDP_FTDC_FCR_LackDeposit
QDP_FTDC_FCR_ClientOverPositionLimit = _pyctp.QDP_FTDC_FCR_ClientOverPositionLimit
QDP_FTDC_FCR_MemberOverPositionLimit = _pyctp.QDP_FTDC_FCR_MemberOverPositionLimit
QDP_FTDC_FCR_NotMultiple = _pyctp.QDP_FTDC_FCR_NotMultiple
QDP_FTDC_IS_BeforeTrading = _pyctp.QDP_FTDC_IS_BeforeTrading
QDP_FTDC_IS_NoTrading = _pyctp.QDP_FTDC_IS_NoTrading
QDP_FTDC_IS_Continous = _pyctp.QDP_FTDC_IS_Continous
QDP_FTDC_IS_AuctionOrdering = _pyctp.QDP_FTDC_IS_AuctionOrdering
QDP_FTDC_IS_AuctionBalance = _pyctp.QDP_FTDC_IS_AuctionBalance
QDP_FTDC_IS_AuctionMatch = _pyctp.QDP_FTDC_IS_AuctionMatch
QDP_FTDC_IS_Closed = _pyctp.QDP_FTDC_IS_Closed
QDP_FTDC_IS_SGE_Dery_App = _pyctp.QDP_FTDC_IS_SGE_Dery_App
QDP_FTDC_IS_SGE_Dery_Match = _pyctp.QDP_FTDC_IS_SGE_Dery_Match
QDP_FTDC_IS_SGE_Mid_App = _pyctp.QDP_FTDC_IS_SGE_Mid_App
QDP_FTDC_IS_SGE_Mid_Match = _pyctp.QDP_FTDC_IS_SGE_Mid_Match
QDP_FTDC_IS_DCE_MarketStatusAlarm = _pyctp.QDP_FTDC_IS_DCE_MarketStatusAlarm
QDP_FTDC_OF_Open = _pyctp.QDP_FTDC_OF_Open
QDP_FTDC_OF_Close = _pyctp.QDP_FTDC_OF_Close
QDP_FTDC_OF_ForceClose = _pyctp.QDP_FTDC_OF_ForceClose
QDP_FTDC_OF_CloseToday = _pyctp.QDP_FTDC_OF_CloseToday
QDP_FTDC_OF_CloseYesterday = _pyctp.QDP_FTDC_OF_CloseYesterday
QDP_FTDC_OPT_AnyPrice = _pyctp.QDP_FTDC_OPT_AnyPrice
QDP_FTDC_OPT_LimitPrice = _pyctp.QDP_FTDC_OPT_LimitPrice
QDP_FTDC_OPT_BestPrice = _pyctp.QDP_FTDC_OPT_BestPrice
QDP_FTDC_OPT_FiveLevelPrice = _pyctp.QDP_FTDC_OPT_FiveLevelPrice
QDP_FTDC_OS_AllTraded = _pyctp.QDP_FTDC_OS_AllTraded
QDP_FTDC_OS_PartTradedQueueing = _pyctp.QDP_FTDC_OS_PartTradedQueueing
QDP_FTDC_OS_PartTradedNotQueueing = _pyctp.QDP_FTDC_OS_PartTradedNotQueueing
QDP_FTDC_OS_NoTradeQueueing = _pyctp.QDP_FTDC_OS_NoTradeQueueing
QDP_FTDC_OS_NoTradeNotQueueing = _pyctp.QDP_FTDC_OS_NoTradeNotQueueing
QDP_FTDC_OS_Canceled = _pyctp.QDP_FTDC_OS_Canceled
QDP_FTDC_OS_AcceptedNoReply = _pyctp.QDP_FTDC_OS_AcceptedNoReply
QDP_FTDC_UT_Person = _pyctp.QDP_FTDC_UT_Person
QDP_FTDC_UT_Product = _pyctp.QDP_FTDC_UT_Product
QDP_FTDC_UT_Manager = _pyctp.QDP_FTDC_UT_Manager
QDP_FTDC_UT_Seat = _pyctp.QDP_FTDC_UT_Seat
QDP_FTDC_TR_Allow = _pyctp.QDP_FTDC_TR_Allow
QDP_FTDC_TR_CloseOnly = _pyctp.QDP_FTDC_TR_CloseOnly
QDP_FTDC_TR_Forbidden = _pyctp.QDP_FTDC_TR_Forbidden
QDP_FTDC_TC_IOC = _pyctp.QDP_FTDC_TC_IOC
QDP_FTDC_TC_GFS = _pyctp.QDP_FTDC_TC_GFS
QDP_FTDC_TC_GFD = _pyctp.QDP_FTDC_TC_GFD
QDP_FTDC_TC_GTD = _pyctp.QDP_FTDC_TC_GTD
QDP_FTDC_TC_GTC = _pyctp.QDP_FTDC_TC_GTC
QDP_FTDC_TC_GFA = _pyctp.QDP_FTDC_TC_GFA
QDP_FTDC_OS_Participant = _pyctp.QDP_FTDC_OS_Participant
QDP_FTDC_OS_Administrator = _pyctp.QDP_FTDC_OS_Administrator
QDP_FTDC_D_Buy = _pyctp.QDP_FTDC_D_Buy
QDP_FTDC_D_Sell = _pyctp.QDP_FTDC_D_Sell
QDP_FTDC_C_RMB = _pyctp.QDP_FTDC_C_RMB
QDP_FTDC_C_UDOLLAR = _pyctp.QDP_FTDC_C_UDOLLAR
QDP_FTDC_AD_In = _pyctp.QDP_FTDC_AD_In
QDP_FTDC_AD_Out = _pyctp.QDP_FTDC_AD_Out
QDP_FTDC_CHF_Speculation = _pyctp.QDP_FTDC_CHF_Speculation
QDP_FTDC_CHF_Arbitrage = _pyctp.QDP_FTDC_CHF_Arbitrage
QDP_FTDC_CHF_Hedge = _pyctp.QDP_FTDC_CHF_Hedge
QDP_FTDC_CHF_MarketMaker = _pyctp.QDP_FTDC_CHF_MarketMaker
QDP_FTDC_AF_Delete = _pyctp.QDP_FTDC_AF_Delete
QDP_FTDC_AF_Suspend = _pyctp.QDP_FTDC_AF_Suspend
QDP_FTDC_AF_Active = _pyctp.QDP_FTDC_AF_Active
QDP_FTDC_AF_Modify = _pyctp.QDP_FTDC_AF_Modify
QDP_FTDC_PT_Net = _pyctp.QDP_FTDC_PT_Net
QDP_FTDC_PT_Gross = _pyctp.QDP_FTDC_PT_Gross
QDP_FTDC_OT_NotOptions = _pyctp.QDP_FTDC_OT_NotOptions
QDP_FTDC_OT_CallOptions = _pyctp.QDP_FTDC_OT_CallOptions
QDP_FTDC_OT_PutOptions = _pyctp.QDP_FTDC_OT_PutOptions
QDP_FTDC_UIA_NoActive = _pyctp.QDP_FTDC_UIA_NoActive
QDP_FTDC_UIA_Active = _pyctp.QDP_FTDC_UIA_Active
QDP_FTDC_PC_Futures = _pyctp.QDP_FTDC_PC_Futures
QDP_FTDC_PC_Options = _pyctp.QDP_FTDC_PC_Options
QDP_FTDC_PC_Combination = _pyctp.QDP_FTDC_PC_Combination
QDP_FTDC_PC_Spot = _pyctp.QDP_FTDC_PC_Spot
QDP_FTDC_PC_EFP = _pyctp.QDP_FTDC_PC_EFP
QDP_FTDC_PC_Unknown = _pyctp.QDP_FTDC_PC_Unknown
QDP_FTDC_PC_Stocks = _pyctp.QDP_FTDC_PC_Stocks
QDP_FTDC_PC_StockOptions = _pyctp.QDP_FTDC_PC_StockOptions
QDP_FTDC_PC_SGE_SPOT = _pyctp.QDP_FTDC_PC_SGE_SPOT
QDP_FTDC_PC_SGE_DEFER = _pyctp.QDP_FTDC_PC_SGE_DEFER
QDP_FTDC_PC_SGE_FOWARD = _pyctp.QDP_FTDC_PC_SGE_FOWARD
QDP_FTDC_BT_Normal = _pyctp.QDP_FTDC_BT_Normal
QDP_FTDC_BT_Cancel = _pyctp.QDP_FTDC_BT_Cancel
QDP_FTDC_BT_AppliedForRedeemed = _pyctp.QDP_FTDC_BT_AppliedForRedeemed
QDP_FTDC_BT_FiveLevelIOC = _pyctp.QDP_FTDC_BT_FiveLevelIOC
QDP_FTDC_BT_FiveLevelGFD = _pyctp.QDP_FTDC_BT_FiveLevelGFD
QDP_FTDC_BT_BestPriceIOC = _pyctp.QDP_FTDC_BT_BestPriceIOC
QDP_FTDC_BT_FOK = _pyctp.QDP_FTDC_BT_FOK
QDP_FTDC_BT_SelfGFD = _pyctp.QDP_FTDC_BT_SelfGFD
QDP_FTDC_BT_CpGFD = _pyctp.QDP_FTDC_BT_CpGFD
QDP_FTDC_BT_SGEMidApp = _pyctp.QDP_FTDC_BT_SGEMidApp
QDP_FTDC_BT_Combination = _pyctp.QDP_FTDC_BT_Combination
QDP_FTDC_BT_Grab = _pyctp.QDP_FTDC_BT_Grab
QDP_FTDC_BT_SGEDeferDeliApp = _pyctp.QDP_FTDC_BT_SGEDeferDeliApp
QDP_FTDC_TS_TRFS_Normal = _pyctp.QDP_FTDC_TS_TRFS_Normal
QDP_FTDC_TS_TRFS_Repealed = _pyctp.QDP_FTDC_TS_TRFS_Repealed
QDP_FTDC_FPF_FPF_BEN = _pyctp.QDP_FTDC_FPF_FPF_BEN
QDP_FTDC_FPF_FPF_OUR = _pyctp.QDP_FTDC_FPF_FPF_OUR
QDP_FTDC_FPF_FPF_SHA = _pyctp.QDP_FTDC_FPF_FPF_SHA
QDP_FTDC_PF_BPWDF_NoCheck = _pyctp.QDP_FTDC_PF_BPWDF_NoCheck
QDP_FTDC_PF_BPWDF_BlankCheck = _pyctp.QDP_FTDC_PF_BPWDF_BlankCheck
QDP_FTDC_PF_BPWDF_EncryptCheck = _pyctp.QDP_FTDC_PF_BPWDF_EncryptCheck
QDP_FTDC_BAT_VBAT_BankBook = _pyctp.QDP_FTDC_BAT_VBAT_BankBook
QDP_FTDC_BAT_VBAT_BankCard = _pyctp.QDP_FTDC_BAT_VBAT_BankCard
QDP_FTDC_BAT_VBAT_CreditCard = _pyctp.QDP_FTDC_BAT_VBAT_CreditCard
QDP_FTDC_YNI_YNI_Yes = _pyctp.QDP_FTDC_YNI_YNI_Yes
QDP_FTDC_YNI_YNI_No = _pyctp.QDP_FTDC_YNI_YNI_No
QDP_FTDC_ALF_AVAF_Invalid = _pyctp.QDP_FTDC_ALF_AVAF_Invalid
QDP_FTDC_ALF_AVAF_Valid = _pyctp.QDP_FTDC_ALF_AVAF_Valid
QDP_FTDC_ALF_AVAF_Repeal = _pyctp.QDP_FTDC_ALF_AVAF_Repeal
QDP_FTDC_ALF_AVAF_FAIL = _pyctp.QDP_FTDC_ALF_AVAF_FAIL
QDP_FTDC_PD_Buy = _pyctp.QDP_FTDC_PD_Buy
QDP_FTDC_PD_Sell = _pyctp.QDP_FTDC_PD_Sell
QDP_FTDC_PD_Unknown = _pyctp.QDP_FTDC_PD_Unknown
class CQdpFtdcReqUserLoginField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcReqUserLoginField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcReqUserLoginField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradingDay"] = _pyctp.CQdpFtdcReqUserLoginField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CQdpFtdcReqUserLoginField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CQdpFtdcReqUserLoginField_TradingDay_get, _pyctp.CQdpFtdcReqUserLoginField_TradingDay_set)
    __swig_setmethods__["UserID"] = _pyctp.CQdpFtdcReqUserLoginField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CQdpFtdcReqUserLoginField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CQdpFtdcReqUserLoginField_UserID_get, _pyctp.CQdpFtdcReqUserLoginField_UserID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CQdpFtdcReqUserLoginField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CQdpFtdcReqUserLoginField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CQdpFtdcReqUserLoginField_BrokerID_get, _pyctp.CQdpFtdcReqUserLoginField_BrokerID_set)
    __swig_setmethods__["Password"] = _pyctp.CQdpFtdcReqUserLoginField_Password_set
    __swig_getmethods__["Password"] = _pyctp.CQdpFtdcReqUserLoginField_Password_get
    if _newclass:
        Password = _swig_property(_pyctp.CQdpFtdcReqUserLoginField_Password_get, _pyctp.CQdpFtdcReqUserLoginField_Password_set)
    __swig_setmethods__["UserProductInfo"] = _pyctp.CQdpFtdcReqUserLoginField_UserProductInfo_set
    __swig_getmethods__["UserProductInfo"] = _pyctp.CQdpFtdcReqUserLoginField_UserProductInfo_get
    if _newclass:
        UserProductInfo = _swig_property(_pyctp.CQdpFtdcReqUserLoginField_UserProductInfo_get, _pyctp.CQdpFtdcReqUserLoginField_UserProductInfo_set)
    __swig_setmethods__["InterfaceProductInfo"] = _pyctp.CQdpFtdcReqUserLoginField_InterfaceProductInfo_set
    __swig_getmethods__["InterfaceProductInfo"] = _pyctp.CQdpFtdcReqUserLoginField_InterfaceProductInfo_get
    if _newclass:
        InterfaceProductInfo = _swig_property(_pyctp.CQdpFtdcReqUserLoginField_InterfaceProductInfo_get, _pyctp.CQdpFtdcReqUserLoginField_InterfaceProductInfo_set)
    __swig_setmethods__["ProtocolInfo"] = _pyctp.CQdpFtdcReqUserLoginField_ProtocolInfo_set
    __swig_getmethods__["ProtocolInfo"] = _pyctp.CQdpFtdcReqUserLoginField_ProtocolInfo_get
    if _newclass:
        ProtocolInfo = _swig_property(_pyctp.CQdpFtdcReqUserLoginField_ProtocolInfo_get, _pyctp.CQdpFtdcReqUserLoginField_ProtocolInfo_set)
    __swig_setmethods__["IPAddress"] = _pyctp.CQdpFtdcReqUserLoginField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _pyctp.CQdpFtdcReqUserLoginField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_pyctp.CQdpFtdcReqUserLoginField_IPAddress_get, _pyctp.CQdpFtdcReqUserLoginField_IPAddress_set)
    __swig_setmethods__["MacAddress"] = _pyctp.CQdpFtdcReqUserLoginField_MacAddress_set
    __swig_getmethods__["MacAddress"] = _pyctp.CQdpFtdcReqUserLoginField_MacAddress_get
    if _newclass:
        MacAddress = _swig_property(_pyctp.CQdpFtdcReqUserLoginField_MacAddress_get, _pyctp.CQdpFtdcReqUserLoginField_MacAddress_set)
    __swig_setmethods__["DataCenterID"] = _pyctp.CQdpFtdcReqUserLoginField_DataCenterID_set
    __swig_getmethods__["DataCenterID"] = _pyctp.CQdpFtdcReqUserLoginField_DataCenterID_get
    if _newclass:
        DataCenterID = _swig_property(_pyctp.CQdpFtdcReqUserLoginField_DataCenterID_get, _pyctp.CQdpFtdcReqUserLoginField_DataCenterID_set)
    __swig_setmethods__["OneTimePassword"] = _pyctp.CQdpFtdcReqUserLoginField_OneTimePassword_set
    __swig_getmethods__["OneTimePassword"] = _pyctp.CQdpFtdcReqUserLoginField_OneTimePassword_get
    if _newclass:
        OneTimePassword = _swig_property(_pyctp.CQdpFtdcReqUserLoginField_OneTimePassword_get, _pyctp.CQdpFtdcReqUserLoginField_OneTimePassword_set)
    __swig_setmethods__["ClientIPAddress"] = _pyctp.CQdpFtdcReqUserLoginField_ClientIPAddress_set
    __swig_getmethods__["ClientIPAddress"] = _pyctp.CQdpFtdcReqUserLoginField_ClientIPAddress_get
    if _newclass:
        ClientIPAddress = _swig_property(_pyctp.CQdpFtdcReqUserLoginField_ClientIPAddress_get, _pyctp.CQdpFtdcReqUserLoginField_ClientIPAddress_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcReqUserLoginField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcReqUserLoginField
    __del__ = lambda self: None
CQdpFtdcReqUserLoginField_swigregister = _pyctp.CQdpFtdcReqUserLoginField_swigregister
CQdpFtdcReqUserLoginField_swigregister(CQdpFtdcReqUserLoginField)
cvar = _pyctp.cvar
QDP_TSS_DIALOG = cvar.QDP_TSS_DIALOG
QDP_TSS_PRIVATE = cvar.QDP_TSS_PRIVATE
QDP_TSS_PUBLIC = cvar.QDP_TSS_PUBLIC
QDP_TSS_QUERY = cvar.QDP_TSS_QUERY
QDP_TSS_USER = cvar.QDP_TSS_USER

class CQdpFtdcRspUserLoginField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcRspUserLoginField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcRspUserLoginField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradingDay"] = _pyctp.CQdpFtdcRspUserLoginField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CQdpFtdcRspUserLoginField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CQdpFtdcRspUserLoginField_TradingDay_get, _pyctp.CQdpFtdcRspUserLoginField_TradingDay_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CQdpFtdcRspUserLoginField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CQdpFtdcRspUserLoginField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CQdpFtdcRspUserLoginField_BrokerID_get, _pyctp.CQdpFtdcRspUserLoginField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CQdpFtdcRspUserLoginField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CQdpFtdcRspUserLoginField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CQdpFtdcRspUserLoginField_UserID_get, _pyctp.CQdpFtdcRspUserLoginField_UserID_set)
    __swig_setmethods__["LoginTime"] = _pyctp.CQdpFtdcRspUserLoginField_LoginTime_set
    __swig_getmethods__["LoginTime"] = _pyctp.CQdpFtdcRspUserLoginField_LoginTime_get
    if _newclass:
        LoginTime = _swig_property(_pyctp.CQdpFtdcRspUserLoginField_LoginTime_get, _pyctp.CQdpFtdcRspUserLoginField_LoginTime_set)
    __swig_setmethods__["MaxOrderLocalID"] = _pyctp.CQdpFtdcRspUserLoginField_MaxOrderLocalID_set
    __swig_getmethods__["MaxOrderLocalID"] = _pyctp.CQdpFtdcRspUserLoginField_MaxOrderLocalID_get
    if _newclass:
        MaxOrderLocalID = _swig_property(_pyctp.CQdpFtdcRspUserLoginField_MaxOrderLocalID_get, _pyctp.CQdpFtdcRspUserLoginField_MaxOrderLocalID_set)
    __swig_setmethods__["TradingSystemName"] = _pyctp.CQdpFtdcRspUserLoginField_TradingSystemName_set
    __swig_getmethods__["TradingSystemName"] = _pyctp.CQdpFtdcRspUserLoginField_TradingSystemName_get
    if _newclass:
        TradingSystemName = _swig_property(_pyctp.CQdpFtdcRspUserLoginField_TradingSystemName_get, _pyctp.CQdpFtdcRspUserLoginField_TradingSystemName_set)
    __swig_setmethods__["DataCenterID"] = _pyctp.CQdpFtdcRspUserLoginField_DataCenterID_set
    __swig_getmethods__["DataCenterID"] = _pyctp.CQdpFtdcRspUserLoginField_DataCenterID_get
    if _newclass:
        DataCenterID = _swig_property(_pyctp.CQdpFtdcRspUserLoginField_DataCenterID_get, _pyctp.CQdpFtdcRspUserLoginField_DataCenterID_set)
    __swig_setmethods__["PrivateFlowSize"] = _pyctp.CQdpFtdcRspUserLoginField_PrivateFlowSize_set
    __swig_getmethods__["PrivateFlowSize"] = _pyctp.CQdpFtdcRspUserLoginField_PrivateFlowSize_get
    if _newclass:
        PrivateFlowSize = _swig_property(_pyctp.CQdpFtdcRspUserLoginField_PrivateFlowSize_get, _pyctp.CQdpFtdcRspUserLoginField_PrivateFlowSize_set)
    __swig_setmethods__["UserFlowSize"] = _pyctp.CQdpFtdcRspUserLoginField_UserFlowSize_set
    __swig_getmethods__["UserFlowSize"] = _pyctp.CQdpFtdcRspUserLoginField_UserFlowSize_get
    if _newclass:
        UserFlowSize = _swig_property(_pyctp.CQdpFtdcRspUserLoginField_UserFlowSize_get, _pyctp.CQdpFtdcRspUserLoginField_UserFlowSize_set)
    __swig_setmethods__["SessionID"] = _pyctp.CQdpFtdcRspUserLoginField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CQdpFtdcRspUserLoginField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CQdpFtdcRspUserLoginField_SessionID_get, _pyctp.CQdpFtdcRspUserLoginField_SessionID_set)
    __swig_setmethods__["FrontID"] = _pyctp.CQdpFtdcRspUserLoginField_FrontID_set
    __swig_getmethods__["FrontID"] = _pyctp.CQdpFtdcRspUserLoginField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_pyctp.CQdpFtdcRspUserLoginField_FrontID_get, _pyctp.CQdpFtdcRspUserLoginField_FrontID_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcRspUserLoginField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcRspUserLoginField
    __del__ = lambda self: None
CQdpFtdcRspUserLoginField_swigregister = _pyctp.CQdpFtdcRspUserLoginField_swigregister
CQdpFtdcRspUserLoginField_swigregister(CQdpFtdcRspUserLoginField)

class CQdpFtdcReqUserLogoutField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcReqUserLogoutField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcReqUserLogoutField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CQdpFtdcReqUserLogoutField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CQdpFtdcReqUserLogoutField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CQdpFtdcReqUserLogoutField_BrokerID_get, _pyctp.CQdpFtdcReqUserLogoutField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CQdpFtdcReqUserLogoutField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CQdpFtdcReqUserLogoutField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CQdpFtdcReqUserLogoutField_UserID_get, _pyctp.CQdpFtdcReqUserLogoutField_UserID_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcReqUserLogoutField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcReqUserLogoutField
    __del__ = lambda self: None
CQdpFtdcReqUserLogoutField_swigregister = _pyctp.CQdpFtdcReqUserLogoutField_swigregister
CQdpFtdcReqUserLogoutField_swigregister(CQdpFtdcReqUserLogoutField)

class CQdpFtdcRspUserLogoutField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcRspUserLogoutField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcRspUserLogoutField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CQdpFtdcRspUserLogoutField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CQdpFtdcRspUserLogoutField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CQdpFtdcRspUserLogoutField_BrokerID_get, _pyctp.CQdpFtdcRspUserLogoutField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CQdpFtdcRspUserLogoutField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CQdpFtdcRspUserLogoutField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CQdpFtdcRspUserLogoutField_UserID_get, _pyctp.CQdpFtdcRspUserLogoutField_UserID_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcRspUserLogoutField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcRspUserLogoutField
    __del__ = lambda self: None
CQdpFtdcRspUserLogoutField_swigregister = _pyctp.CQdpFtdcRspUserLogoutField_swigregister
CQdpFtdcRspUserLogoutField_swigregister(CQdpFtdcRspUserLogoutField)

class CQdpFtdcForceUserExitField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcForceUserExitField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcForceUserExitField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CQdpFtdcForceUserExitField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CQdpFtdcForceUserExitField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CQdpFtdcForceUserExitField_BrokerID_get, _pyctp.CQdpFtdcForceUserExitField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CQdpFtdcForceUserExitField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CQdpFtdcForceUserExitField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CQdpFtdcForceUserExitField_UserID_get, _pyctp.CQdpFtdcForceUserExitField_UserID_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcForceUserExitField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcForceUserExitField
    __del__ = lambda self: None
CQdpFtdcForceUserExitField_swigregister = _pyctp.CQdpFtdcForceUserExitField_swigregister
CQdpFtdcForceUserExitField_swigregister(CQdpFtdcForceUserExitField)

class CQdpFtdcUserPasswordUpdateField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcUserPasswordUpdateField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcUserPasswordUpdateField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CQdpFtdcUserPasswordUpdateField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CQdpFtdcUserPasswordUpdateField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CQdpFtdcUserPasswordUpdateField_BrokerID_get, _pyctp.CQdpFtdcUserPasswordUpdateField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CQdpFtdcUserPasswordUpdateField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CQdpFtdcUserPasswordUpdateField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CQdpFtdcUserPasswordUpdateField_UserID_get, _pyctp.CQdpFtdcUserPasswordUpdateField_UserID_set)
    __swig_setmethods__["OldPassword"] = _pyctp.CQdpFtdcUserPasswordUpdateField_OldPassword_set
    __swig_getmethods__["OldPassword"] = _pyctp.CQdpFtdcUserPasswordUpdateField_OldPassword_get
    if _newclass:
        OldPassword = _swig_property(_pyctp.CQdpFtdcUserPasswordUpdateField_OldPassword_get, _pyctp.CQdpFtdcUserPasswordUpdateField_OldPassword_set)
    __swig_setmethods__["NewPassword"] = _pyctp.CQdpFtdcUserPasswordUpdateField_NewPassword_set
    __swig_getmethods__["NewPassword"] = _pyctp.CQdpFtdcUserPasswordUpdateField_NewPassword_get
    if _newclass:
        NewPassword = _swig_property(_pyctp.CQdpFtdcUserPasswordUpdateField_NewPassword_get, _pyctp.CQdpFtdcUserPasswordUpdateField_NewPassword_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcUserPasswordUpdateField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcUserPasswordUpdateField
    __del__ = lambda self: None
CQdpFtdcUserPasswordUpdateField_swigregister = _pyctp.CQdpFtdcUserPasswordUpdateField_swigregister
CQdpFtdcUserPasswordUpdateField_swigregister(CQdpFtdcUserPasswordUpdateField)

class CQdpFtdcInputOrderField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcInputOrderField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcInputOrderField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CQdpFtdcInputOrderField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CQdpFtdcInputOrderField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CQdpFtdcInputOrderField_BrokerID_get, _pyctp.CQdpFtdcInputOrderField_BrokerID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CQdpFtdcInputOrderField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CQdpFtdcInputOrderField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CQdpFtdcInputOrderField_ExchangeID_get, _pyctp.CQdpFtdcInputOrderField_ExchangeID_set)
    __swig_setmethods__["OrderSysID"] = _pyctp.CQdpFtdcInputOrderField_OrderSysID_set
    __swig_getmethods__["OrderSysID"] = _pyctp.CQdpFtdcInputOrderField_OrderSysID_get
    if _newclass:
        OrderSysID = _swig_property(_pyctp.CQdpFtdcInputOrderField_OrderSysID_get, _pyctp.CQdpFtdcInputOrderField_OrderSysID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CQdpFtdcInputOrderField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CQdpFtdcInputOrderField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CQdpFtdcInputOrderField_InvestorID_get, _pyctp.CQdpFtdcInputOrderField_InvestorID_set)
    __swig_setmethods__["UserID"] = _pyctp.CQdpFtdcInputOrderField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CQdpFtdcInputOrderField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CQdpFtdcInputOrderField_UserID_get, _pyctp.CQdpFtdcInputOrderField_UserID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CQdpFtdcInputOrderField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CQdpFtdcInputOrderField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CQdpFtdcInputOrderField_InstrumentID_get, _pyctp.CQdpFtdcInputOrderField_InstrumentID_set)
    __swig_setmethods__["UserOrderLocalID"] = _pyctp.CQdpFtdcInputOrderField_UserOrderLocalID_set
    __swig_getmethods__["UserOrderLocalID"] = _pyctp.CQdpFtdcInputOrderField_UserOrderLocalID_get
    if _newclass:
        UserOrderLocalID = _swig_property(_pyctp.CQdpFtdcInputOrderField_UserOrderLocalID_get, _pyctp.CQdpFtdcInputOrderField_UserOrderLocalID_set)
    __swig_setmethods__["OrderPriceType"] = _pyctp.CQdpFtdcInputOrderField_OrderPriceType_set
    __swig_getmethods__["OrderPriceType"] = _pyctp.CQdpFtdcInputOrderField_OrderPriceType_get
    if _newclass:
        OrderPriceType = _swig_property(_pyctp.CQdpFtdcInputOrderField_OrderPriceType_get, _pyctp.CQdpFtdcInputOrderField_OrderPriceType_set)
    __swig_setmethods__["Direction"] = _pyctp.CQdpFtdcInputOrderField_Direction_set
    __swig_getmethods__["Direction"] = _pyctp.CQdpFtdcInputOrderField_Direction_get
    if _newclass:
        Direction = _swig_property(_pyctp.CQdpFtdcInputOrderField_Direction_get, _pyctp.CQdpFtdcInputOrderField_Direction_set)
    __swig_setmethods__["OffsetFlag"] = _pyctp.CQdpFtdcInputOrderField_OffsetFlag_set
    __swig_getmethods__["OffsetFlag"] = _pyctp.CQdpFtdcInputOrderField_OffsetFlag_get
    if _newclass:
        OffsetFlag = _swig_property(_pyctp.CQdpFtdcInputOrderField_OffsetFlag_get, _pyctp.CQdpFtdcInputOrderField_OffsetFlag_set)
    __swig_setmethods__["HedgeFlag"] = _pyctp.CQdpFtdcInputOrderField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _pyctp.CQdpFtdcInputOrderField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_pyctp.CQdpFtdcInputOrderField_HedgeFlag_get, _pyctp.CQdpFtdcInputOrderField_HedgeFlag_set)
    __swig_setmethods__["LimitPrice"] = _pyctp.CQdpFtdcInputOrderField_LimitPrice_set
    __swig_getmethods__["LimitPrice"] = _pyctp.CQdpFtdcInputOrderField_LimitPrice_get
    if _newclass:
        LimitPrice = _swig_property(_pyctp.CQdpFtdcInputOrderField_LimitPrice_get, _pyctp.CQdpFtdcInputOrderField_LimitPrice_set)
    __swig_setmethods__["Volume"] = _pyctp.CQdpFtdcInputOrderField_Volume_set
    __swig_getmethods__["Volume"] = _pyctp.CQdpFtdcInputOrderField_Volume_get
    if _newclass:
        Volume = _swig_property(_pyctp.CQdpFtdcInputOrderField_Volume_get, _pyctp.CQdpFtdcInputOrderField_Volume_set)
    __swig_setmethods__["TimeCondition"] = _pyctp.CQdpFtdcInputOrderField_TimeCondition_set
    __swig_getmethods__["TimeCondition"] = _pyctp.CQdpFtdcInputOrderField_TimeCondition_get
    if _newclass:
        TimeCondition = _swig_property(_pyctp.CQdpFtdcInputOrderField_TimeCondition_get, _pyctp.CQdpFtdcInputOrderField_TimeCondition_set)
    __swig_setmethods__["GTDDate"] = _pyctp.CQdpFtdcInputOrderField_GTDDate_set
    __swig_getmethods__["GTDDate"] = _pyctp.CQdpFtdcInputOrderField_GTDDate_get
    if _newclass:
        GTDDate = _swig_property(_pyctp.CQdpFtdcInputOrderField_GTDDate_get, _pyctp.CQdpFtdcInputOrderField_GTDDate_set)
    __swig_setmethods__["VolumeCondition"] = _pyctp.CQdpFtdcInputOrderField_VolumeCondition_set
    __swig_getmethods__["VolumeCondition"] = _pyctp.CQdpFtdcInputOrderField_VolumeCondition_get
    if _newclass:
        VolumeCondition = _swig_property(_pyctp.CQdpFtdcInputOrderField_VolumeCondition_get, _pyctp.CQdpFtdcInputOrderField_VolumeCondition_set)
    __swig_setmethods__["MinVolume"] = _pyctp.CQdpFtdcInputOrderField_MinVolume_set
    __swig_getmethods__["MinVolume"] = _pyctp.CQdpFtdcInputOrderField_MinVolume_get
    if _newclass:
        MinVolume = _swig_property(_pyctp.CQdpFtdcInputOrderField_MinVolume_get, _pyctp.CQdpFtdcInputOrderField_MinVolume_set)
    __swig_setmethods__["StopPrice"] = _pyctp.CQdpFtdcInputOrderField_StopPrice_set
    __swig_getmethods__["StopPrice"] = _pyctp.CQdpFtdcInputOrderField_StopPrice_get
    if _newclass:
        StopPrice = _swig_property(_pyctp.CQdpFtdcInputOrderField_StopPrice_get, _pyctp.CQdpFtdcInputOrderField_StopPrice_set)
    __swig_setmethods__["ForceCloseReason"] = _pyctp.CQdpFtdcInputOrderField_ForceCloseReason_set
    __swig_getmethods__["ForceCloseReason"] = _pyctp.CQdpFtdcInputOrderField_ForceCloseReason_get
    if _newclass:
        ForceCloseReason = _swig_property(_pyctp.CQdpFtdcInputOrderField_ForceCloseReason_get, _pyctp.CQdpFtdcInputOrderField_ForceCloseReason_set)
    __swig_setmethods__["IsAutoSuspend"] = _pyctp.CQdpFtdcInputOrderField_IsAutoSuspend_set
    __swig_getmethods__["IsAutoSuspend"] = _pyctp.CQdpFtdcInputOrderField_IsAutoSuspend_get
    if _newclass:
        IsAutoSuspend = _swig_property(_pyctp.CQdpFtdcInputOrderField_IsAutoSuspend_get, _pyctp.CQdpFtdcInputOrderField_IsAutoSuspend_set)
    __swig_setmethods__["BusinessUnit"] = _pyctp.CQdpFtdcInputOrderField_BusinessUnit_set
    __swig_getmethods__["BusinessUnit"] = _pyctp.CQdpFtdcInputOrderField_BusinessUnit_get
    if _newclass:
        BusinessUnit = _swig_property(_pyctp.CQdpFtdcInputOrderField_BusinessUnit_get, _pyctp.CQdpFtdcInputOrderField_BusinessUnit_set)
    __swig_setmethods__["UserCustom"] = _pyctp.CQdpFtdcInputOrderField_UserCustom_set
    __swig_getmethods__["UserCustom"] = _pyctp.CQdpFtdcInputOrderField_UserCustom_get
    if _newclass:
        UserCustom = _swig_property(_pyctp.CQdpFtdcInputOrderField_UserCustom_get, _pyctp.CQdpFtdcInputOrderField_UserCustom_set)
    __swig_setmethods__["BranchID"] = _pyctp.CQdpFtdcInputOrderField_BranchID_set
    __swig_getmethods__["BranchID"] = _pyctp.CQdpFtdcInputOrderField_BranchID_get
    if _newclass:
        BranchID = _swig_property(_pyctp.CQdpFtdcInputOrderField_BranchID_get, _pyctp.CQdpFtdcInputOrderField_BranchID_set)
    __swig_setmethods__["RecNum"] = _pyctp.CQdpFtdcInputOrderField_RecNum_set
    __swig_getmethods__["RecNum"] = _pyctp.CQdpFtdcInputOrderField_RecNum_get
    if _newclass:
        RecNum = _swig_property(_pyctp.CQdpFtdcInputOrderField_RecNum_get, _pyctp.CQdpFtdcInputOrderField_RecNum_set)
    __swig_setmethods__["BusinessType"] = _pyctp.CQdpFtdcInputOrderField_BusinessType_set
    __swig_getmethods__["BusinessType"] = _pyctp.CQdpFtdcInputOrderField_BusinessType_get
    if _newclass:
        BusinessType = _swig_property(_pyctp.CQdpFtdcInputOrderField_BusinessType_get, _pyctp.CQdpFtdcInputOrderField_BusinessType_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcInputOrderField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcInputOrderField
    __del__ = lambda self: None
CQdpFtdcInputOrderField_swigregister = _pyctp.CQdpFtdcInputOrderField_swigregister
CQdpFtdcInputOrderField_swigregister(CQdpFtdcInputOrderField)

class CQdpFtdcOrderActionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcOrderActionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcOrderActionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ExchangeID"] = _pyctp.CQdpFtdcOrderActionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CQdpFtdcOrderActionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CQdpFtdcOrderActionField_ExchangeID_get, _pyctp.CQdpFtdcOrderActionField_ExchangeID_set)
    __swig_setmethods__["OrderSysID"] = _pyctp.CQdpFtdcOrderActionField_OrderSysID_set
    __swig_getmethods__["OrderSysID"] = _pyctp.CQdpFtdcOrderActionField_OrderSysID_get
    if _newclass:
        OrderSysID = _swig_property(_pyctp.CQdpFtdcOrderActionField_OrderSysID_get, _pyctp.CQdpFtdcOrderActionField_OrderSysID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CQdpFtdcOrderActionField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CQdpFtdcOrderActionField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CQdpFtdcOrderActionField_BrokerID_get, _pyctp.CQdpFtdcOrderActionField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CQdpFtdcOrderActionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CQdpFtdcOrderActionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CQdpFtdcOrderActionField_InvestorID_get, _pyctp.CQdpFtdcOrderActionField_InvestorID_set)
    __swig_setmethods__["UserID"] = _pyctp.CQdpFtdcOrderActionField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CQdpFtdcOrderActionField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CQdpFtdcOrderActionField_UserID_get, _pyctp.CQdpFtdcOrderActionField_UserID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CQdpFtdcOrderActionField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CQdpFtdcOrderActionField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CQdpFtdcOrderActionField_InstrumentID_get, _pyctp.CQdpFtdcOrderActionField_InstrumentID_set)
    __swig_setmethods__["UserOrderActionLocalID"] = _pyctp.CQdpFtdcOrderActionField_UserOrderActionLocalID_set
    __swig_getmethods__["UserOrderActionLocalID"] = _pyctp.CQdpFtdcOrderActionField_UserOrderActionLocalID_get
    if _newclass:
        UserOrderActionLocalID = _swig_property(_pyctp.CQdpFtdcOrderActionField_UserOrderActionLocalID_get, _pyctp.CQdpFtdcOrderActionField_UserOrderActionLocalID_set)
    __swig_setmethods__["UserOrderLocalID"] = _pyctp.CQdpFtdcOrderActionField_UserOrderLocalID_set
    __swig_getmethods__["UserOrderLocalID"] = _pyctp.CQdpFtdcOrderActionField_UserOrderLocalID_get
    if _newclass:
        UserOrderLocalID = _swig_property(_pyctp.CQdpFtdcOrderActionField_UserOrderLocalID_get, _pyctp.CQdpFtdcOrderActionField_UserOrderLocalID_set)
    __swig_setmethods__["ActionFlag"] = _pyctp.CQdpFtdcOrderActionField_ActionFlag_set
    __swig_getmethods__["ActionFlag"] = _pyctp.CQdpFtdcOrderActionField_ActionFlag_get
    if _newclass:
        ActionFlag = _swig_property(_pyctp.CQdpFtdcOrderActionField_ActionFlag_get, _pyctp.CQdpFtdcOrderActionField_ActionFlag_set)
    __swig_setmethods__["LimitPrice"] = _pyctp.CQdpFtdcOrderActionField_LimitPrice_set
    __swig_getmethods__["LimitPrice"] = _pyctp.CQdpFtdcOrderActionField_LimitPrice_get
    if _newclass:
        LimitPrice = _swig_property(_pyctp.CQdpFtdcOrderActionField_LimitPrice_get, _pyctp.CQdpFtdcOrderActionField_LimitPrice_set)
    __swig_setmethods__["VolumeChange"] = _pyctp.CQdpFtdcOrderActionField_VolumeChange_set
    __swig_getmethods__["VolumeChange"] = _pyctp.CQdpFtdcOrderActionField_VolumeChange_get
    if _newclass:
        VolumeChange = _swig_property(_pyctp.CQdpFtdcOrderActionField_VolumeChange_get, _pyctp.CQdpFtdcOrderActionField_VolumeChange_set)
    __swig_setmethods__["RecNum"] = _pyctp.CQdpFtdcOrderActionField_RecNum_set
    __swig_getmethods__["RecNum"] = _pyctp.CQdpFtdcOrderActionField_RecNum_get
    if _newclass:
        RecNum = _swig_property(_pyctp.CQdpFtdcOrderActionField_RecNum_get, _pyctp.CQdpFtdcOrderActionField_RecNum_set)
    __swig_setmethods__["FrontID"] = _pyctp.CQdpFtdcOrderActionField_FrontID_set
    __swig_getmethods__["FrontID"] = _pyctp.CQdpFtdcOrderActionField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_pyctp.CQdpFtdcOrderActionField_FrontID_get, _pyctp.CQdpFtdcOrderActionField_FrontID_set)
    __swig_setmethods__["SessionID"] = _pyctp.CQdpFtdcOrderActionField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CQdpFtdcOrderActionField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CQdpFtdcOrderActionField_SessionID_get, _pyctp.CQdpFtdcOrderActionField_SessionID_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcOrderActionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcOrderActionField
    __del__ = lambda self: None
CQdpFtdcOrderActionField_swigregister = _pyctp.CQdpFtdcOrderActionField_swigregister
CQdpFtdcOrderActionField_swigregister(CQdpFtdcOrderActionField)

class CQdpFtdcMemDbField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcMemDbField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcMemDbField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["MemTableName"] = _pyctp.CQdpFtdcMemDbField_MemTableName_set
    __swig_getmethods__["MemTableName"] = _pyctp.CQdpFtdcMemDbField_MemTableName_get
    if _newclass:
        MemTableName = _swig_property(_pyctp.CQdpFtdcMemDbField_MemTableName_get, _pyctp.CQdpFtdcMemDbField_MemTableName_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcMemDbField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcMemDbField
    __del__ = lambda self: None
CQdpFtdcMemDbField_swigregister = _pyctp.CQdpFtdcMemDbField_swigregister
CQdpFtdcMemDbField_swigregister(CQdpFtdcMemDbField)

class CQdpFtdcReqAccountDepositField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcReqAccountDepositField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcReqAccountDepositField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CQdpFtdcReqAccountDepositField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CQdpFtdcReqAccountDepositField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CQdpFtdcReqAccountDepositField_BrokerID_get, _pyctp.CQdpFtdcReqAccountDepositField_BrokerID_set)
    __swig_setmethods__["AccountSeqNo"] = _pyctp.CQdpFtdcReqAccountDepositField_AccountSeqNo_set
    __swig_getmethods__["AccountSeqNo"] = _pyctp.CQdpFtdcReqAccountDepositField_AccountSeqNo_get
    if _newclass:
        AccountSeqNo = _swig_property(_pyctp.CQdpFtdcReqAccountDepositField_AccountSeqNo_get, _pyctp.CQdpFtdcReqAccountDepositField_AccountSeqNo_set)
    __swig_setmethods__["AccountID"] = _pyctp.CQdpFtdcReqAccountDepositField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CQdpFtdcReqAccountDepositField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CQdpFtdcReqAccountDepositField_AccountID_get, _pyctp.CQdpFtdcReqAccountDepositField_AccountID_set)
    __swig_setmethods__["AccountInsideSeqNo"] = _pyctp.CQdpFtdcReqAccountDepositField_AccountInsideSeqNo_set
    __swig_getmethods__["AccountInsideSeqNo"] = _pyctp.CQdpFtdcReqAccountDepositField_AccountInsideSeqNo_get
    if _newclass:
        AccountInsideSeqNo = _swig_property(_pyctp.CQdpFtdcReqAccountDepositField_AccountInsideSeqNo_get, _pyctp.CQdpFtdcReqAccountDepositField_AccountInsideSeqNo_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CQdpFtdcReqAccountDepositField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CQdpFtdcReqAccountDepositField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CQdpFtdcReqAccountDepositField_InvestorID_get, _pyctp.CQdpFtdcReqAccountDepositField_InvestorID_set)
    __swig_setmethods__["Amount"] = _pyctp.CQdpFtdcReqAccountDepositField_Amount_set
    __swig_getmethods__["Amount"] = _pyctp.CQdpFtdcReqAccountDepositField_Amount_get
    if _newclass:
        Amount = _swig_property(_pyctp.CQdpFtdcReqAccountDepositField_Amount_get, _pyctp.CQdpFtdcReqAccountDepositField_Amount_set)
    __swig_setmethods__["AmountDirection"] = _pyctp.CQdpFtdcReqAccountDepositField_AmountDirection_set
    __swig_getmethods__["AmountDirection"] = _pyctp.CQdpFtdcReqAccountDepositField_AmountDirection_get
    if _newclass:
        AmountDirection = _swig_property(_pyctp.CQdpFtdcReqAccountDepositField_AmountDirection_get, _pyctp.CQdpFtdcReqAccountDepositField_AmountDirection_set)
    __swig_setmethods__["UserID"] = _pyctp.CQdpFtdcReqAccountDepositField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CQdpFtdcReqAccountDepositField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CQdpFtdcReqAccountDepositField_UserID_get, _pyctp.CQdpFtdcReqAccountDepositField_UserID_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcReqAccountDepositField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcReqAccountDepositField
    __del__ = lambda self: None
CQdpFtdcReqAccountDepositField_swigregister = _pyctp.CQdpFtdcReqAccountDepositField_swigregister
CQdpFtdcReqAccountDepositField_swigregister(CQdpFtdcReqAccountDepositField)

class CQdpFtdcRspAccountDepositField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcRspAccountDepositField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcRspAccountDepositField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CQdpFtdcRspAccountDepositField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CQdpFtdcRspAccountDepositField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CQdpFtdcRspAccountDepositField_BrokerID_get, _pyctp.CQdpFtdcRspAccountDepositField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CQdpFtdcRspAccountDepositField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CQdpFtdcRspAccountDepositField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CQdpFtdcRspAccountDepositField_InvestorID_get, _pyctp.CQdpFtdcRspAccountDepositField_InvestorID_set)
    __swig_setmethods__["AccountID"] = _pyctp.CQdpFtdcRspAccountDepositField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CQdpFtdcRspAccountDepositField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CQdpFtdcRspAccountDepositField_AccountID_get, _pyctp.CQdpFtdcRspAccountDepositField_AccountID_set)
    __swig_setmethods__["AccountSeqNo"] = _pyctp.CQdpFtdcRspAccountDepositField_AccountSeqNo_set
    __swig_getmethods__["AccountSeqNo"] = _pyctp.CQdpFtdcRspAccountDepositField_AccountSeqNo_get
    if _newclass:
        AccountSeqNo = _swig_property(_pyctp.CQdpFtdcRspAccountDepositField_AccountSeqNo_get, _pyctp.CQdpFtdcRspAccountDepositField_AccountSeqNo_set)
    __swig_setmethods__["AccountInsideSeqNo"] = _pyctp.CQdpFtdcRspAccountDepositField_AccountInsideSeqNo_set
    __swig_getmethods__["AccountInsideSeqNo"] = _pyctp.CQdpFtdcRspAccountDepositField_AccountInsideSeqNo_get
    if _newclass:
        AccountInsideSeqNo = _swig_property(_pyctp.CQdpFtdcRspAccountDepositField_AccountInsideSeqNo_get, _pyctp.CQdpFtdcRspAccountDepositField_AccountInsideSeqNo_set)
    __swig_setmethods__["Amount"] = _pyctp.CQdpFtdcRspAccountDepositField_Amount_set
    __swig_getmethods__["Amount"] = _pyctp.CQdpFtdcRspAccountDepositField_Amount_get
    if _newclass:
        Amount = _swig_property(_pyctp.CQdpFtdcRspAccountDepositField_Amount_get, _pyctp.CQdpFtdcRspAccountDepositField_Amount_set)
    __swig_setmethods__["AmountDirection"] = _pyctp.CQdpFtdcRspAccountDepositField_AmountDirection_set
    __swig_getmethods__["AmountDirection"] = _pyctp.CQdpFtdcRspAccountDepositField_AmountDirection_get
    if _newclass:
        AmountDirection = _swig_property(_pyctp.CQdpFtdcRspAccountDepositField_AmountDirection_get, _pyctp.CQdpFtdcRspAccountDepositField_AmountDirection_set)
    __swig_setmethods__["Available"] = _pyctp.CQdpFtdcRspAccountDepositField_Available_set
    __swig_getmethods__["Available"] = _pyctp.CQdpFtdcRspAccountDepositField_Available_get
    if _newclass:
        Available = _swig_property(_pyctp.CQdpFtdcRspAccountDepositField_Available_get, _pyctp.CQdpFtdcRspAccountDepositField_Available_set)
    __swig_setmethods__["Balance"] = _pyctp.CQdpFtdcRspAccountDepositField_Balance_set
    __swig_getmethods__["Balance"] = _pyctp.CQdpFtdcRspAccountDepositField_Balance_get
    if _newclass:
        Balance = _swig_property(_pyctp.CQdpFtdcRspAccountDepositField_Balance_get, _pyctp.CQdpFtdcRspAccountDepositField_Balance_set)
    __swig_setmethods__["UserID"] = _pyctp.CQdpFtdcRspAccountDepositField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CQdpFtdcRspAccountDepositField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CQdpFtdcRspAccountDepositField_UserID_get, _pyctp.CQdpFtdcRspAccountDepositField_UserID_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcRspAccountDepositField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcRspAccountDepositField
    __del__ = lambda self: None
CQdpFtdcRspAccountDepositField_swigregister = _pyctp.CQdpFtdcRspAccountDepositField_swigregister
CQdpFtdcRspAccountDepositField_swigregister(CQdpFtdcRspAccountDepositField)

class CQdpFtdcReqTransferField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcReqTransferField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcReqTransferField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradeCode"] = _pyctp.CQdpFtdcReqTransferField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CQdpFtdcReqTransferField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CQdpFtdcReqTransferField_TradeCode_get, _pyctp.CQdpFtdcReqTransferField_TradeCode_set)
    __swig_setmethods__["BankID"] = _pyctp.CQdpFtdcReqTransferField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CQdpFtdcReqTransferField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CQdpFtdcReqTransferField_BankID_get, _pyctp.CQdpFtdcReqTransferField_BankID_set)
    __swig_setmethods__["BankBrchID"] = _pyctp.CQdpFtdcReqTransferField_BankBrchID_set
    __swig_getmethods__["BankBrchID"] = _pyctp.CQdpFtdcReqTransferField_BankBrchID_get
    if _newclass:
        BankBrchID = _swig_property(_pyctp.CQdpFtdcReqTransferField_BankBrchID_get, _pyctp.CQdpFtdcReqTransferField_BankBrchID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CQdpFtdcReqTransferField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CQdpFtdcReqTransferField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CQdpFtdcReqTransferField_BrokerID_get, _pyctp.CQdpFtdcReqTransferField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CQdpFtdcReqTransferField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CQdpFtdcReqTransferField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CQdpFtdcReqTransferField_BrokerBranchID_get, _pyctp.CQdpFtdcReqTransferField_BrokerBranchID_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CQdpFtdcReqTransferField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CQdpFtdcReqTransferField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CQdpFtdcReqTransferField_TradeDate_get, _pyctp.CQdpFtdcReqTransferField_TradeDate_set)
    __swig_setmethods__["TradingTime"] = _pyctp.CQdpFtdcReqTransferField_TradingTime_set
    __swig_getmethods__["TradingTime"] = _pyctp.CQdpFtdcReqTransferField_TradingTime_get
    if _newclass:
        TradingTime = _swig_property(_pyctp.CQdpFtdcReqTransferField_TradingTime_get, _pyctp.CQdpFtdcReqTransferField_TradingTime_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CQdpFtdcReqTransferField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CQdpFtdcReqTransferField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CQdpFtdcReqTransferField_BankSerial_get, _pyctp.CQdpFtdcReqTransferField_BankSerial_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CQdpFtdcReqTransferField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CQdpFtdcReqTransferField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CQdpFtdcReqTransferField_TradingDay_get, _pyctp.CQdpFtdcReqTransferField_TradingDay_set)
    __swig_setmethods__["PlateSerial"] = _pyctp.CQdpFtdcReqTransferField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CQdpFtdcReqTransferField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CQdpFtdcReqTransferField_PlateSerial_get, _pyctp.CQdpFtdcReqTransferField_PlateSerial_set)
    __swig_setmethods__["LastFragment"] = _pyctp.CQdpFtdcReqTransferField_LastFragment_set
    __swig_getmethods__["LastFragment"] = _pyctp.CQdpFtdcReqTransferField_LastFragment_get
    if _newclass:
        LastFragment = _swig_property(_pyctp.CQdpFtdcReqTransferField_LastFragment_get, _pyctp.CQdpFtdcReqTransferField_LastFragment_set)
    __swig_setmethods__["SessionID"] = _pyctp.CQdpFtdcReqTransferField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CQdpFtdcReqTransferField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CQdpFtdcReqTransferField_SessionID_get, _pyctp.CQdpFtdcReqTransferField_SessionID_set)
    __swig_setmethods__["CustomerName"] = _pyctp.CQdpFtdcReqTransferField_CustomerName_set
    __swig_getmethods__["CustomerName"] = _pyctp.CQdpFtdcReqTransferField_CustomerName_get
    if _newclass:
        CustomerName = _swig_property(_pyctp.CQdpFtdcReqTransferField_CustomerName_get, _pyctp.CQdpFtdcReqTransferField_CustomerName_set)
    __swig_setmethods__["IdCardType"] = _pyctp.CQdpFtdcReqTransferField_IdCardType_set
    __swig_getmethods__["IdCardType"] = _pyctp.CQdpFtdcReqTransferField_IdCardType_get
    if _newclass:
        IdCardType = _swig_property(_pyctp.CQdpFtdcReqTransferField_IdCardType_get, _pyctp.CQdpFtdcReqTransferField_IdCardType_set)
    __swig_setmethods__["IdentifiedCardNo"] = _pyctp.CQdpFtdcReqTransferField_IdentifiedCardNo_set
    __swig_getmethods__["IdentifiedCardNo"] = _pyctp.CQdpFtdcReqTransferField_IdentifiedCardNo_get
    if _newclass:
        IdentifiedCardNo = _swig_property(_pyctp.CQdpFtdcReqTransferField_IdentifiedCardNo_get, _pyctp.CQdpFtdcReqTransferField_IdentifiedCardNo_set)
    __swig_setmethods__["CustType"] = _pyctp.CQdpFtdcReqTransferField_CustType_set
    __swig_getmethods__["CustType"] = _pyctp.CQdpFtdcReqTransferField_CustType_get
    if _newclass:
        CustType = _swig_property(_pyctp.CQdpFtdcReqTransferField_CustType_get, _pyctp.CQdpFtdcReqTransferField_CustType_set)
    __swig_setmethods__["BankAccount"] = _pyctp.CQdpFtdcReqTransferField_BankAccount_set
    __swig_getmethods__["BankAccount"] = _pyctp.CQdpFtdcReqTransferField_BankAccount_get
    if _newclass:
        BankAccount = _swig_property(_pyctp.CQdpFtdcReqTransferField_BankAccount_get, _pyctp.CQdpFtdcReqTransferField_BankAccount_set)
    __swig_setmethods__["BankPassWord"] = _pyctp.CQdpFtdcReqTransferField_BankPassWord_set
    __swig_getmethods__["BankPassWord"] = _pyctp.CQdpFtdcReqTransferField_BankPassWord_get
    if _newclass:
        BankPassWord = _swig_property(_pyctp.CQdpFtdcReqTransferField_BankPassWord_get, _pyctp.CQdpFtdcReqTransferField_BankPassWord_set)
    __swig_setmethods__["AccountID"] = _pyctp.CQdpFtdcReqTransferField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CQdpFtdcReqTransferField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CQdpFtdcReqTransferField_AccountID_get, _pyctp.CQdpFtdcReqTransferField_AccountID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CQdpFtdcReqTransferField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CQdpFtdcReqTransferField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CQdpFtdcReqTransferField_InvestorID_get, _pyctp.CQdpFtdcReqTransferField_InvestorID_set)
    __swig_setmethods__["Password"] = _pyctp.CQdpFtdcReqTransferField_Password_set
    __swig_getmethods__["Password"] = _pyctp.CQdpFtdcReqTransferField_Password_get
    if _newclass:
        Password = _swig_property(_pyctp.CQdpFtdcReqTransferField_Password_get, _pyctp.CQdpFtdcReqTransferField_Password_set)
    __swig_setmethods__["InstallID"] = _pyctp.CQdpFtdcReqTransferField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CQdpFtdcReqTransferField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CQdpFtdcReqTransferField_InstallID_get, _pyctp.CQdpFtdcReqTransferField_InstallID_set)
    __swig_setmethods__["FutureSerial"] = _pyctp.CQdpFtdcReqTransferField_FutureSerial_set
    __swig_getmethods__["FutureSerial"] = _pyctp.CQdpFtdcReqTransferField_FutureSerial_get
    if _newclass:
        FutureSerial = _swig_property(_pyctp.CQdpFtdcReqTransferField_FutureSerial_get, _pyctp.CQdpFtdcReqTransferField_FutureSerial_set)
    __swig_setmethods__["UserID"] = _pyctp.CQdpFtdcReqTransferField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CQdpFtdcReqTransferField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CQdpFtdcReqTransferField_UserID_get, _pyctp.CQdpFtdcReqTransferField_UserID_set)
    __swig_setmethods__["VerifyCertNoFlag"] = _pyctp.CQdpFtdcReqTransferField_VerifyCertNoFlag_set
    __swig_getmethods__["VerifyCertNoFlag"] = _pyctp.CQdpFtdcReqTransferField_VerifyCertNoFlag_get
    if _newclass:
        VerifyCertNoFlag = _swig_property(_pyctp.CQdpFtdcReqTransferField_VerifyCertNoFlag_get, _pyctp.CQdpFtdcReqTransferField_VerifyCertNoFlag_set)
    __swig_setmethods__["Currency"] = _pyctp.CQdpFtdcReqTransferField_Currency_set
    __swig_getmethods__["Currency"] = _pyctp.CQdpFtdcReqTransferField_Currency_get
    if _newclass:
        Currency = _swig_property(_pyctp.CQdpFtdcReqTransferField_Currency_get, _pyctp.CQdpFtdcReqTransferField_Currency_set)
    __swig_setmethods__["TradeAmount"] = _pyctp.CQdpFtdcReqTransferField_TradeAmount_set
    __swig_getmethods__["TradeAmount"] = _pyctp.CQdpFtdcReqTransferField_TradeAmount_get
    if _newclass:
        TradeAmount = _swig_property(_pyctp.CQdpFtdcReqTransferField_TradeAmount_get, _pyctp.CQdpFtdcReqTransferField_TradeAmount_set)
    __swig_setmethods__["FutureFetchAmount"] = _pyctp.CQdpFtdcReqTransferField_FutureFetchAmount_set
    __swig_getmethods__["FutureFetchAmount"] = _pyctp.CQdpFtdcReqTransferField_FutureFetchAmount_get
    if _newclass:
        FutureFetchAmount = _swig_property(_pyctp.CQdpFtdcReqTransferField_FutureFetchAmount_get, _pyctp.CQdpFtdcReqTransferField_FutureFetchAmount_set)
    __swig_setmethods__["FeePayFlag"] = _pyctp.CQdpFtdcReqTransferField_FeePayFlag_set
    __swig_getmethods__["FeePayFlag"] = _pyctp.CQdpFtdcReqTransferField_FeePayFlag_get
    if _newclass:
        FeePayFlag = _swig_property(_pyctp.CQdpFtdcReqTransferField_FeePayFlag_get, _pyctp.CQdpFtdcReqTransferField_FeePayFlag_set)
    __swig_setmethods__["CustFee"] = _pyctp.CQdpFtdcReqTransferField_CustFee_set
    __swig_getmethods__["CustFee"] = _pyctp.CQdpFtdcReqTransferField_CustFee_get
    if _newclass:
        CustFee = _swig_property(_pyctp.CQdpFtdcReqTransferField_CustFee_get, _pyctp.CQdpFtdcReqTransferField_CustFee_set)
    __swig_setmethods__["BrokerFee"] = _pyctp.CQdpFtdcReqTransferField_BrokerFee_set
    __swig_getmethods__["BrokerFee"] = _pyctp.CQdpFtdcReqTransferField_BrokerFee_get
    if _newclass:
        BrokerFee = _swig_property(_pyctp.CQdpFtdcReqTransferField_BrokerFee_get, _pyctp.CQdpFtdcReqTransferField_BrokerFee_set)
    __swig_setmethods__["Message"] = _pyctp.CQdpFtdcReqTransferField_Message_set
    __swig_getmethods__["Message"] = _pyctp.CQdpFtdcReqTransferField_Message_get
    if _newclass:
        Message = _swig_property(_pyctp.CQdpFtdcReqTransferField_Message_get, _pyctp.CQdpFtdcReqTransferField_Message_set)
    __swig_setmethods__["Digest"] = _pyctp.CQdpFtdcReqTransferField_Digest_set
    __swig_getmethods__["Digest"] = _pyctp.CQdpFtdcReqTransferField_Digest_get
    if _newclass:
        Digest = _swig_property(_pyctp.CQdpFtdcReqTransferField_Digest_get, _pyctp.CQdpFtdcReqTransferField_Digest_set)
    __swig_setmethods__["BankAccType"] = _pyctp.CQdpFtdcReqTransferField_BankAccType_set
    __swig_getmethods__["BankAccType"] = _pyctp.CQdpFtdcReqTransferField_BankAccType_get
    if _newclass:
        BankAccType = _swig_property(_pyctp.CQdpFtdcReqTransferField_BankAccType_get, _pyctp.CQdpFtdcReqTransferField_BankAccType_set)
    __swig_setmethods__["DeviceID"] = _pyctp.CQdpFtdcReqTransferField_DeviceID_set
    __swig_getmethods__["DeviceID"] = _pyctp.CQdpFtdcReqTransferField_DeviceID_get
    if _newclass:
        DeviceID = _swig_property(_pyctp.CQdpFtdcReqTransferField_DeviceID_get, _pyctp.CQdpFtdcReqTransferField_DeviceID_set)
    __swig_setmethods__["BankSecuAccType"] = _pyctp.CQdpFtdcReqTransferField_BankSecuAccType_set
    __swig_getmethods__["BankSecuAccType"] = _pyctp.CQdpFtdcReqTransferField_BankSecuAccType_get
    if _newclass:
        BankSecuAccType = _swig_property(_pyctp.CQdpFtdcReqTransferField_BankSecuAccType_get, _pyctp.CQdpFtdcReqTransferField_BankSecuAccType_set)
    __swig_setmethods__["BankCodingForFuture"] = _pyctp.CQdpFtdcReqTransferField_BankCodingForFuture_set
    __swig_getmethods__["BankCodingForFuture"] = _pyctp.CQdpFtdcReqTransferField_BankCodingForFuture_get
    if _newclass:
        BankCodingForFuture = _swig_property(_pyctp.CQdpFtdcReqTransferField_BankCodingForFuture_get, _pyctp.CQdpFtdcReqTransferField_BankCodingForFuture_set)
    __swig_setmethods__["BankSecuAcc"] = _pyctp.CQdpFtdcReqTransferField_BankSecuAcc_set
    __swig_getmethods__["BankSecuAcc"] = _pyctp.CQdpFtdcReqTransferField_BankSecuAcc_get
    if _newclass:
        BankSecuAcc = _swig_property(_pyctp.CQdpFtdcReqTransferField_BankSecuAcc_get, _pyctp.CQdpFtdcReqTransferField_BankSecuAcc_set)
    __swig_setmethods__["BankPwdFlag"] = _pyctp.CQdpFtdcReqTransferField_BankPwdFlag_set
    __swig_getmethods__["BankPwdFlag"] = _pyctp.CQdpFtdcReqTransferField_BankPwdFlag_get
    if _newclass:
        BankPwdFlag = _swig_property(_pyctp.CQdpFtdcReqTransferField_BankPwdFlag_get, _pyctp.CQdpFtdcReqTransferField_BankPwdFlag_set)
    __swig_setmethods__["SecuPwdFlag"] = _pyctp.CQdpFtdcReqTransferField_SecuPwdFlag_set
    __swig_getmethods__["SecuPwdFlag"] = _pyctp.CQdpFtdcReqTransferField_SecuPwdFlag_get
    if _newclass:
        SecuPwdFlag = _swig_property(_pyctp.CQdpFtdcReqTransferField_SecuPwdFlag_get, _pyctp.CQdpFtdcReqTransferField_SecuPwdFlag_set)
    __swig_setmethods__["OperNo"] = _pyctp.CQdpFtdcReqTransferField_OperNo_set
    __swig_getmethods__["OperNo"] = _pyctp.CQdpFtdcReqTransferField_OperNo_get
    if _newclass:
        OperNo = _swig_property(_pyctp.CQdpFtdcReqTransferField_OperNo_get, _pyctp.CQdpFtdcReqTransferField_OperNo_set)
    __swig_setmethods__["RequestID"] = _pyctp.CQdpFtdcReqTransferField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CQdpFtdcReqTransferField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CQdpFtdcReqTransferField_RequestID_get, _pyctp.CQdpFtdcReqTransferField_RequestID_set)
    __swig_setmethods__["TID"] = _pyctp.CQdpFtdcReqTransferField_TID_set
    __swig_getmethods__["TID"] = _pyctp.CQdpFtdcReqTransferField_TID_get
    if _newclass:
        TID = _swig_property(_pyctp.CQdpFtdcReqTransferField_TID_get, _pyctp.CQdpFtdcReqTransferField_TID_set)
    __swig_setmethods__["TransferStatus"] = _pyctp.CQdpFtdcReqTransferField_TransferStatus_set
    __swig_getmethods__["TransferStatus"] = _pyctp.CQdpFtdcReqTransferField_TransferStatus_get
    if _newclass:
        TransferStatus = _swig_property(_pyctp.CQdpFtdcReqTransferField_TransferStatus_get, _pyctp.CQdpFtdcReqTransferField_TransferStatus_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcReqTransferField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcReqTransferField
    __del__ = lambda self: None
CQdpFtdcReqTransferField_swigregister = _pyctp.CQdpFtdcReqTransferField_swigregister
CQdpFtdcReqTransferField_swigregister(CQdpFtdcReqTransferField)

class CQdpFtdcRspTransferField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcRspTransferField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcRspTransferField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradeCode"] = _pyctp.CQdpFtdcRspTransferField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CQdpFtdcRspTransferField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CQdpFtdcRspTransferField_TradeCode_get, _pyctp.CQdpFtdcRspTransferField_TradeCode_set)
    __swig_setmethods__["BankID"] = _pyctp.CQdpFtdcRspTransferField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CQdpFtdcRspTransferField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CQdpFtdcRspTransferField_BankID_get, _pyctp.CQdpFtdcRspTransferField_BankID_set)
    __swig_setmethods__["BankBrchID"] = _pyctp.CQdpFtdcRspTransferField_BankBrchID_set
    __swig_getmethods__["BankBrchID"] = _pyctp.CQdpFtdcRspTransferField_BankBrchID_get
    if _newclass:
        BankBrchID = _swig_property(_pyctp.CQdpFtdcRspTransferField_BankBrchID_get, _pyctp.CQdpFtdcRspTransferField_BankBrchID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CQdpFtdcRspTransferField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CQdpFtdcRspTransferField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CQdpFtdcRspTransferField_BrokerID_get, _pyctp.CQdpFtdcRspTransferField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CQdpFtdcRspTransferField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CQdpFtdcRspTransferField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CQdpFtdcRspTransferField_BrokerBranchID_get, _pyctp.CQdpFtdcRspTransferField_BrokerBranchID_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CQdpFtdcRspTransferField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CQdpFtdcRspTransferField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CQdpFtdcRspTransferField_TradeDate_get, _pyctp.CQdpFtdcRspTransferField_TradeDate_set)
    __swig_setmethods__["TradingTime"] = _pyctp.CQdpFtdcRspTransferField_TradingTime_set
    __swig_getmethods__["TradingTime"] = _pyctp.CQdpFtdcRspTransferField_TradingTime_get
    if _newclass:
        TradingTime = _swig_property(_pyctp.CQdpFtdcRspTransferField_TradingTime_get, _pyctp.CQdpFtdcRspTransferField_TradingTime_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CQdpFtdcRspTransferField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CQdpFtdcRspTransferField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CQdpFtdcRspTransferField_BankSerial_get, _pyctp.CQdpFtdcRspTransferField_BankSerial_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CQdpFtdcRspTransferField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CQdpFtdcRspTransferField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CQdpFtdcRspTransferField_TradingDay_get, _pyctp.CQdpFtdcRspTransferField_TradingDay_set)
    __swig_setmethods__["PlateSerial"] = _pyctp.CQdpFtdcRspTransferField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CQdpFtdcRspTransferField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CQdpFtdcRspTransferField_PlateSerial_get, _pyctp.CQdpFtdcRspTransferField_PlateSerial_set)
    __swig_setmethods__["LastFragment"] = _pyctp.CQdpFtdcRspTransferField_LastFragment_set
    __swig_getmethods__["LastFragment"] = _pyctp.CQdpFtdcRspTransferField_LastFragment_get
    if _newclass:
        LastFragment = _swig_property(_pyctp.CQdpFtdcRspTransferField_LastFragment_get, _pyctp.CQdpFtdcRspTransferField_LastFragment_set)
    __swig_setmethods__["SessionID"] = _pyctp.CQdpFtdcRspTransferField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CQdpFtdcRspTransferField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CQdpFtdcRspTransferField_SessionID_get, _pyctp.CQdpFtdcRspTransferField_SessionID_set)
    __swig_setmethods__["CustomerName"] = _pyctp.CQdpFtdcRspTransferField_CustomerName_set
    __swig_getmethods__["CustomerName"] = _pyctp.CQdpFtdcRspTransferField_CustomerName_get
    if _newclass:
        CustomerName = _swig_property(_pyctp.CQdpFtdcRspTransferField_CustomerName_get, _pyctp.CQdpFtdcRspTransferField_CustomerName_set)
    __swig_setmethods__["IdCardType"] = _pyctp.CQdpFtdcRspTransferField_IdCardType_set
    __swig_getmethods__["IdCardType"] = _pyctp.CQdpFtdcRspTransferField_IdCardType_get
    if _newclass:
        IdCardType = _swig_property(_pyctp.CQdpFtdcRspTransferField_IdCardType_get, _pyctp.CQdpFtdcRspTransferField_IdCardType_set)
    __swig_setmethods__["IdentifiedCardNo"] = _pyctp.CQdpFtdcRspTransferField_IdentifiedCardNo_set
    __swig_getmethods__["IdentifiedCardNo"] = _pyctp.CQdpFtdcRspTransferField_IdentifiedCardNo_get
    if _newclass:
        IdentifiedCardNo = _swig_property(_pyctp.CQdpFtdcRspTransferField_IdentifiedCardNo_get, _pyctp.CQdpFtdcRspTransferField_IdentifiedCardNo_set)
    __swig_setmethods__["CustType"] = _pyctp.CQdpFtdcRspTransferField_CustType_set
    __swig_getmethods__["CustType"] = _pyctp.CQdpFtdcRspTransferField_CustType_get
    if _newclass:
        CustType = _swig_property(_pyctp.CQdpFtdcRspTransferField_CustType_get, _pyctp.CQdpFtdcRspTransferField_CustType_set)
    __swig_setmethods__["BankAccount"] = _pyctp.CQdpFtdcRspTransferField_BankAccount_set
    __swig_getmethods__["BankAccount"] = _pyctp.CQdpFtdcRspTransferField_BankAccount_get
    if _newclass:
        BankAccount = _swig_property(_pyctp.CQdpFtdcRspTransferField_BankAccount_get, _pyctp.CQdpFtdcRspTransferField_BankAccount_set)
    __swig_setmethods__["BankPassWord"] = _pyctp.CQdpFtdcRspTransferField_BankPassWord_set
    __swig_getmethods__["BankPassWord"] = _pyctp.CQdpFtdcRspTransferField_BankPassWord_get
    if _newclass:
        BankPassWord = _swig_property(_pyctp.CQdpFtdcRspTransferField_BankPassWord_get, _pyctp.CQdpFtdcRspTransferField_BankPassWord_set)
    __swig_setmethods__["AccountID"] = _pyctp.CQdpFtdcRspTransferField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CQdpFtdcRspTransferField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CQdpFtdcRspTransferField_AccountID_get, _pyctp.CQdpFtdcRspTransferField_AccountID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CQdpFtdcRspTransferField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CQdpFtdcRspTransferField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CQdpFtdcRspTransferField_InvestorID_get, _pyctp.CQdpFtdcRspTransferField_InvestorID_set)
    __swig_setmethods__["Password"] = _pyctp.CQdpFtdcRspTransferField_Password_set
    __swig_getmethods__["Password"] = _pyctp.CQdpFtdcRspTransferField_Password_get
    if _newclass:
        Password = _swig_property(_pyctp.CQdpFtdcRspTransferField_Password_get, _pyctp.CQdpFtdcRspTransferField_Password_set)
    __swig_setmethods__["InstallID"] = _pyctp.CQdpFtdcRspTransferField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CQdpFtdcRspTransferField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CQdpFtdcRspTransferField_InstallID_get, _pyctp.CQdpFtdcRspTransferField_InstallID_set)
    __swig_setmethods__["FutureSerial"] = _pyctp.CQdpFtdcRspTransferField_FutureSerial_set
    __swig_getmethods__["FutureSerial"] = _pyctp.CQdpFtdcRspTransferField_FutureSerial_get
    if _newclass:
        FutureSerial = _swig_property(_pyctp.CQdpFtdcRspTransferField_FutureSerial_get, _pyctp.CQdpFtdcRspTransferField_FutureSerial_set)
    __swig_setmethods__["UserID"] = _pyctp.CQdpFtdcRspTransferField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CQdpFtdcRspTransferField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CQdpFtdcRspTransferField_UserID_get, _pyctp.CQdpFtdcRspTransferField_UserID_set)
    __swig_setmethods__["VerifyCertNoFlag"] = _pyctp.CQdpFtdcRspTransferField_VerifyCertNoFlag_set
    __swig_getmethods__["VerifyCertNoFlag"] = _pyctp.CQdpFtdcRspTransferField_VerifyCertNoFlag_get
    if _newclass:
        VerifyCertNoFlag = _swig_property(_pyctp.CQdpFtdcRspTransferField_VerifyCertNoFlag_get, _pyctp.CQdpFtdcRspTransferField_VerifyCertNoFlag_set)
    __swig_setmethods__["Currency"] = _pyctp.CQdpFtdcRspTransferField_Currency_set
    __swig_getmethods__["Currency"] = _pyctp.CQdpFtdcRspTransferField_Currency_get
    if _newclass:
        Currency = _swig_property(_pyctp.CQdpFtdcRspTransferField_Currency_get, _pyctp.CQdpFtdcRspTransferField_Currency_set)
    __swig_setmethods__["TradeAmount"] = _pyctp.CQdpFtdcRspTransferField_TradeAmount_set
    __swig_getmethods__["TradeAmount"] = _pyctp.CQdpFtdcRspTransferField_TradeAmount_get
    if _newclass:
        TradeAmount = _swig_property(_pyctp.CQdpFtdcRspTransferField_TradeAmount_get, _pyctp.CQdpFtdcRspTransferField_TradeAmount_set)
    __swig_setmethods__["FutureFetchAmount"] = _pyctp.CQdpFtdcRspTransferField_FutureFetchAmount_set
    __swig_getmethods__["FutureFetchAmount"] = _pyctp.CQdpFtdcRspTransferField_FutureFetchAmount_get
    if _newclass:
        FutureFetchAmount = _swig_property(_pyctp.CQdpFtdcRspTransferField_FutureFetchAmount_get, _pyctp.CQdpFtdcRspTransferField_FutureFetchAmount_set)
    __swig_setmethods__["FeePayFlag"] = _pyctp.CQdpFtdcRspTransferField_FeePayFlag_set
    __swig_getmethods__["FeePayFlag"] = _pyctp.CQdpFtdcRspTransferField_FeePayFlag_get
    if _newclass:
        FeePayFlag = _swig_property(_pyctp.CQdpFtdcRspTransferField_FeePayFlag_get, _pyctp.CQdpFtdcRspTransferField_FeePayFlag_set)
    __swig_setmethods__["CustFee"] = _pyctp.CQdpFtdcRspTransferField_CustFee_set
    __swig_getmethods__["CustFee"] = _pyctp.CQdpFtdcRspTransferField_CustFee_get
    if _newclass:
        CustFee = _swig_property(_pyctp.CQdpFtdcRspTransferField_CustFee_get, _pyctp.CQdpFtdcRspTransferField_CustFee_set)
    __swig_setmethods__["BrokerFee"] = _pyctp.CQdpFtdcRspTransferField_BrokerFee_set
    __swig_getmethods__["BrokerFee"] = _pyctp.CQdpFtdcRspTransferField_BrokerFee_get
    if _newclass:
        BrokerFee = _swig_property(_pyctp.CQdpFtdcRspTransferField_BrokerFee_get, _pyctp.CQdpFtdcRspTransferField_BrokerFee_set)
    __swig_setmethods__["Message"] = _pyctp.CQdpFtdcRspTransferField_Message_set
    __swig_getmethods__["Message"] = _pyctp.CQdpFtdcRspTransferField_Message_get
    if _newclass:
        Message = _swig_property(_pyctp.CQdpFtdcRspTransferField_Message_get, _pyctp.CQdpFtdcRspTransferField_Message_set)
    __swig_setmethods__["Digest"] = _pyctp.CQdpFtdcRspTransferField_Digest_set
    __swig_getmethods__["Digest"] = _pyctp.CQdpFtdcRspTransferField_Digest_get
    if _newclass:
        Digest = _swig_property(_pyctp.CQdpFtdcRspTransferField_Digest_get, _pyctp.CQdpFtdcRspTransferField_Digest_set)
    __swig_setmethods__["BankAccType"] = _pyctp.CQdpFtdcRspTransferField_BankAccType_set
    __swig_getmethods__["BankAccType"] = _pyctp.CQdpFtdcRspTransferField_BankAccType_get
    if _newclass:
        BankAccType = _swig_property(_pyctp.CQdpFtdcRspTransferField_BankAccType_get, _pyctp.CQdpFtdcRspTransferField_BankAccType_set)
    __swig_setmethods__["DeviceID"] = _pyctp.CQdpFtdcRspTransferField_DeviceID_set
    __swig_getmethods__["DeviceID"] = _pyctp.CQdpFtdcRspTransferField_DeviceID_get
    if _newclass:
        DeviceID = _swig_property(_pyctp.CQdpFtdcRspTransferField_DeviceID_get, _pyctp.CQdpFtdcRspTransferField_DeviceID_set)
    __swig_setmethods__["BankSecuAccType"] = _pyctp.CQdpFtdcRspTransferField_BankSecuAccType_set
    __swig_getmethods__["BankSecuAccType"] = _pyctp.CQdpFtdcRspTransferField_BankSecuAccType_get
    if _newclass:
        BankSecuAccType = _swig_property(_pyctp.CQdpFtdcRspTransferField_BankSecuAccType_get, _pyctp.CQdpFtdcRspTransferField_BankSecuAccType_set)
    __swig_setmethods__["BankCodingForFuture"] = _pyctp.CQdpFtdcRspTransferField_BankCodingForFuture_set
    __swig_getmethods__["BankCodingForFuture"] = _pyctp.CQdpFtdcRspTransferField_BankCodingForFuture_get
    if _newclass:
        BankCodingForFuture = _swig_property(_pyctp.CQdpFtdcRspTransferField_BankCodingForFuture_get, _pyctp.CQdpFtdcRspTransferField_BankCodingForFuture_set)
    __swig_setmethods__["BankSecuAcc"] = _pyctp.CQdpFtdcRspTransferField_BankSecuAcc_set
    __swig_getmethods__["BankSecuAcc"] = _pyctp.CQdpFtdcRspTransferField_BankSecuAcc_get
    if _newclass:
        BankSecuAcc = _swig_property(_pyctp.CQdpFtdcRspTransferField_BankSecuAcc_get, _pyctp.CQdpFtdcRspTransferField_BankSecuAcc_set)
    __swig_setmethods__["BankPwdFlag"] = _pyctp.CQdpFtdcRspTransferField_BankPwdFlag_set
    __swig_getmethods__["BankPwdFlag"] = _pyctp.CQdpFtdcRspTransferField_BankPwdFlag_get
    if _newclass:
        BankPwdFlag = _swig_property(_pyctp.CQdpFtdcRspTransferField_BankPwdFlag_get, _pyctp.CQdpFtdcRspTransferField_BankPwdFlag_set)
    __swig_setmethods__["SecuPwdFlag"] = _pyctp.CQdpFtdcRspTransferField_SecuPwdFlag_set
    __swig_getmethods__["SecuPwdFlag"] = _pyctp.CQdpFtdcRspTransferField_SecuPwdFlag_get
    if _newclass:
        SecuPwdFlag = _swig_property(_pyctp.CQdpFtdcRspTransferField_SecuPwdFlag_get, _pyctp.CQdpFtdcRspTransferField_SecuPwdFlag_set)
    __swig_setmethods__["OperNo"] = _pyctp.CQdpFtdcRspTransferField_OperNo_set
    __swig_getmethods__["OperNo"] = _pyctp.CQdpFtdcRspTransferField_OperNo_get
    if _newclass:
        OperNo = _swig_property(_pyctp.CQdpFtdcRspTransferField_OperNo_get, _pyctp.CQdpFtdcRspTransferField_OperNo_set)
    __swig_setmethods__["RequestID"] = _pyctp.CQdpFtdcRspTransferField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CQdpFtdcRspTransferField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CQdpFtdcRspTransferField_RequestID_get, _pyctp.CQdpFtdcRspTransferField_RequestID_set)
    __swig_setmethods__["TID"] = _pyctp.CQdpFtdcRspTransferField_TID_set
    __swig_getmethods__["TID"] = _pyctp.CQdpFtdcRspTransferField_TID_get
    if _newclass:
        TID = _swig_property(_pyctp.CQdpFtdcRspTransferField_TID_get, _pyctp.CQdpFtdcRspTransferField_TID_set)
    __swig_setmethods__["TransferStatus"] = _pyctp.CQdpFtdcRspTransferField_TransferStatus_set
    __swig_getmethods__["TransferStatus"] = _pyctp.CQdpFtdcRspTransferField_TransferStatus_get
    if _newclass:
        TransferStatus = _swig_property(_pyctp.CQdpFtdcRspTransferField_TransferStatus_get, _pyctp.CQdpFtdcRspTransferField_TransferStatus_set)
    __swig_setmethods__["ErrorID"] = _pyctp.CQdpFtdcRspTransferField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _pyctp.CQdpFtdcRspTransferField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_pyctp.CQdpFtdcRspTransferField_ErrorID_get, _pyctp.CQdpFtdcRspTransferField_ErrorID_set)
    __swig_setmethods__["ErrorMsg"] = _pyctp.CQdpFtdcRspTransferField_ErrorMsg_set
    __swig_getmethods__["ErrorMsg"] = _pyctp.CQdpFtdcRspTransferField_ErrorMsg_get
    if _newclass:
        ErrorMsg = _swig_property(_pyctp.CQdpFtdcRspTransferField_ErrorMsg_get, _pyctp.CQdpFtdcRspTransferField_ErrorMsg_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcRspTransferField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcRspTransferField
    __del__ = lambda self: None
CQdpFtdcRspTransferField_swigregister = _pyctp.CQdpFtdcRspTransferField_swigregister
CQdpFtdcRspTransferField_swigregister(CQdpFtdcRspTransferField)

class CQdpFtdcNotifyQueryAccountField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcNotifyQueryAccountField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcNotifyQueryAccountField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradeCode"] = _pyctp.CQdpFtdcNotifyQueryAccountField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CQdpFtdcNotifyQueryAccountField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CQdpFtdcNotifyQueryAccountField_TradeCode_get, _pyctp.CQdpFtdcNotifyQueryAccountField_TradeCode_set)
    __swig_setmethods__["BankID"] = _pyctp.CQdpFtdcNotifyQueryAccountField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CQdpFtdcNotifyQueryAccountField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CQdpFtdcNotifyQueryAccountField_BankID_get, _pyctp.CQdpFtdcNotifyQueryAccountField_BankID_set)
    __swig_setmethods__["BankBrchID"] = _pyctp.CQdpFtdcNotifyQueryAccountField_BankBrchID_set
    __swig_getmethods__["BankBrchID"] = _pyctp.CQdpFtdcNotifyQueryAccountField_BankBrchID_get
    if _newclass:
        BankBrchID = _swig_property(_pyctp.CQdpFtdcNotifyQueryAccountField_BankBrchID_get, _pyctp.CQdpFtdcNotifyQueryAccountField_BankBrchID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CQdpFtdcNotifyQueryAccountField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CQdpFtdcNotifyQueryAccountField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CQdpFtdcNotifyQueryAccountField_BrokerID_get, _pyctp.CQdpFtdcNotifyQueryAccountField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CQdpFtdcNotifyQueryAccountField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CQdpFtdcNotifyQueryAccountField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CQdpFtdcNotifyQueryAccountField_BrokerBranchID_get, _pyctp.CQdpFtdcNotifyQueryAccountField_BrokerBranchID_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CQdpFtdcNotifyQueryAccountField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CQdpFtdcNotifyQueryAccountField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CQdpFtdcNotifyQueryAccountField_TradeDate_get, _pyctp.CQdpFtdcNotifyQueryAccountField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CQdpFtdcNotifyQueryAccountField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CQdpFtdcNotifyQueryAccountField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CQdpFtdcNotifyQueryAccountField_TradeTime_get, _pyctp.CQdpFtdcNotifyQueryAccountField_TradeTime_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CQdpFtdcNotifyQueryAccountField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CQdpFtdcNotifyQueryAccountField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CQdpFtdcNotifyQueryAccountField_BankSerial_get, _pyctp.CQdpFtdcNotifyQueryAccountField_BankSerial_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CQdpFtdcNotifyQueryAccountField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CQdpFtdcNotifyQueryAccountField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CQdpFtdcNotifyQueryAccountField_TradingDay_get, _pyctp.CQdpFtdcNotifyQueryAccountField_TradingDay_set)
    __swig_setmethods__["PlateSerial"] = _pyctp.CQdpFtdcNotifyQueryAccountField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CQdpFtdcNotifyQueryAccountField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CQdpFtdcNotifyQueryAccountField_PlateSerial_get, _pyctp.CQdpFtdcNotifyQueryAccountField_PlateSerial_set)
    __swig_setmethods__["LastFragment"] = _pyctp.CQdpFtdcNotifyQueryAccountField_LastFragment_set
    __swig_getmethods__["LastFragment"] = _pyctp.CQdpFtdcNotifyQueryAccountField_LastFragment_get
    if _newclass:
        LastFragment = _swig_property(_pyctp.CQdpFtdcNotifyQueryAccountField_LastFragment_get, _pyctp.CQdpFtdcNotifyQueryAccountField_LastFragment_set)
    __swig_setmethods__["SessionID"] = _pyctp.CQdpFtdcNotifyQueryAccountField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CQdpFtdcNotifyQueryAccountField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CQdpFtdcNotifyQueryAccountField_SessionID_get, _pyctp.CQdpFtdcNotifyQueryAccountField_SessionID_set)
    __swig_setmethods__["CustomerName"] = _pyctp.CQdpFtdcNotifyQueryAccountField_CustomerName_set
    __swig_getmethods__["CustomerName"] = _pyctp.CQdpFtdcNotifyQueryAccountField_CustomerName_get
    if _newclass:
        CustomerName = _swig_property(_pyctp.CQdpFtdcNotifyQueryAccountField_CustomerName_get, _pyctp.CQdpFtdcNotifyQueryAccountField_CustomerName_set)
    __swig_setmethods__["IdCardType"] = _pyctp.CQdpFtdcNotifyQueryAccountField_IdCardType_set
    __swig_getmethods__["IdCardType"] = _pyctp.CQdpFtdcNotifyQueryAccountField_IdCardType_get
    if _newclass:
        IdCardType = _swig_property(_pyctp.CQdpFtdcNotifyQueryAccountField_IdCardType_get, _pyctp.CQdpFtdcNotifyQueryAccountField_IdCardType_set)
    __swig_setmethods__["IdentifiedCardNo"] = _pyctp.CQdpFtdcNotifyQueryAccountField_IdentifiedCardNo_set
    __swig_getmethods__["IdentifiedCardNo"] = _pyctp.CQdpFtdcNotifyQueryAccountField_IdentifiedCardNo_get
    if _newclass:
        IdentifiedCardNo = _swig_property(_pyctp.CQdpFtdcNotifyQueryAccountField_IdentifiedCardNo_get, _pyctp.CQdpFtdcNotifyQueryAccountField_IdentifiedCardNo_set)
    __swig_setmethods__["CustType"] = _pyctp.CQdpFtdcNotifyQueryAccountField_CustType_set
    __swig_getmethods__["CustType"] = _pyctp.CQdpFtdcNotifyQueryAccountField_CustType_get
    if _newclass:
        CustType = _swig_property(_pyctp.CQdpFtdcNotifyQueryAccountField_CustType_get, _pyctp.CQdpFtdcNotifyQueryAccountField_CustType_set)
    __swig_setmethods__["BankAccount"] = _pyctp.CQdpFtdcNotifyQueryAccountField_BankAccount_set
    __swig_getmethods__["BankAccount"] = _pyctp.CQdpFtdcNotifyQueryAccountField_BankAccount_get
    if _newclass:
        BankAccount = _swig_property(_pyctp.CQdpFtdcNotifyQueryAccountField_BankAccount_get, _pyctp.CQdpFtdcNotifyQueryAccountField_BankAccount_set)
    __swig_setmethods__["BankPassWord"] = _pyctp.CQdpFtdcNotifyQueryAccountField_BankPassWord_set
    __swig_getmethods__["BankPassWord"] = _pyctp.CQdpFtdcNotifyQueryAccountField_BankPassWord_get
    if _newclass:
        BankPassWord = _swig_property(_pyctp.CQdpFtdcNotifyQueryAccountField_BankPassWord_get, _pyctp.CQdpFtdcNotifyQueryAccountField_BankPassWord_set)
    __swig_setmethods__["AccountID"] = _pyctp.CQdpFtdcNotifyQueryAccountField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CQdpFtdcNotifyQueryAccountField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CQdpFtdcNotifyQueryAccountField_AccountID_get, _pyctp.CQdpFtdcNotifyQueryAccountField_AccountID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CQdpFtdcNotifyQueryAccountField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CQdpFtdcNotifyQueryAccountField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CQdpFtdcNotifyQueryAccountField_InvestorID_get, _pyctp.CQdpFtdcNotifyQueryAccountField_InvestorID_set)
    __swig_setmethods__["Password"] = _pyctp.CQdpFtdcNotifyQueryAccountField_Password_set
    __swig_getmethods__["Password"] = _pyctp.CQdpFtdcNotifyQueryAccountField_Password_get
    if _newclass:
        Password = _swig_property(_pyctp.CQdpFtdcNotifyQueryAccountField_Password_get, _pyctp.CQdpFtdcNotifyQueryAccountField_Password_set)
    __swig_setmethods__["FutureSerial"] = _pyctp.CQdpFtdcNotifyQueryAccountField_FutureSerial_set
    __swig_getmethods__["FutureSerial"] = _pyctp.CQdpFtdcNotifyQueryAccountField_FutureSerial_get
    if _newclass:
        FutureSerial = _swig_property(_pyctp.CQdpFtdcNotifyQueryAccountField_FutureSerial_get, _pyctp.CQdpFtdcNotifyQueryAccountField_FutureSerial_set)
    __swig_setmethods__["InstallID"] = _pyctp.CQdpFtdcNotifyQueryAccountField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CQdpFtdcNotifyQueryAccountField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CQdpFtdcNotifyQueryAccountField_InstallID_get, _pyctp.CQdpFtdcNotifyQueryAccountField_InstallID_set)
    __swig_setmethods__["UserID"] = _pyctp.CQdpFtdcNotifyQueryAccountField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CQdpFtdcNotifyQueryAccountField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CQdpFtdcNotifyQueryAccountField_UserID_get, _pyctp.CQdpFtdcNotifyQueryAccountField_UserID_set)
    __swig_setmethods__["VerifyCertNoFlag"] = _pyctp.CQdpFtdcNotifyQueryAccountField_VerifyCertNoFlag_set
    __swig_getmethods__["VerifyCertNoFlag"] = _pyctp.CQdpFtdcNotifyQueryAccountField_VerifyCertNoFlag_get
    if _newclass:
        VerifyCertNoFlag = _swig_property(_pyctp.CQdpFtdcNotifyQueryAccountField_VerifyCertNoFlag_get, _pyctp.CQdpFtdcNotifyQueryAccountField_VerifyCertNoFlag_set)
    __swig_setmethods__["Currency"] = _pyctp.CQdpFtdcNotifyQueryAccountField_Currency_set
    __swig_getmethods__["Currency"] = _pyctp.CQdpFtdcNotifyQueryAccountField_Currency_get
    if _newclass:
        Currency = _swig_property(_pyctp.CQdpFtdcNotifyQueryAccountField_Currency_get, _pyctp.CQdpFtdcNotifyQueryAccountField_Currency_set)
    __swig_setmethods__["Digest"] = _pyctp.CQdpFtdcNotifyQueryAccountField_Digest_set
    __swig_getmethods__["Digest"] = _pyctp.CQdpFtdcNotifyQueryAccountField_Digest_get
    if _newclass:
        Digest = _swig_property(_pyctp.CQdpFtdcNotifyQueryAccountField_Digest_get, _pyctp.CQdpFtdcNotifyQueryAccountField_Digest_set)
    __swig_setmethods__["BankAccType"] = _pyctp.CQdpFtdcNotifyQueryAccountField_BankAccType_set
    __swig_getmethods__["BankAccType"] = _pyctp.CQdpFtdcNotifyQueryAccountField_BankAccType_get
    if _newclass:
        BankAccType = _swig_property(_pyctp.CQdpFtdcNotifyQueryAccountField_BankAccType_get, _pyctp.CQdpFtdcNotifyQueryAccountField_BankAccType_set)
    __swig_setmethods__["DeviceID"] = _pyctp.CQdpFtdcNotifyQueryAccountField_DeviceID_set
    __swig_getmethods__["DeviceID"] = _pyctp.CQdpFtdcNotifyQueryAccountField_DeviceID_get
    if _newclass:
        DeviceID = _swig_property(_pyctp.CQdpFtdcNotifyQueryAccountField_DeviceID_get, _pyctp.CQdpFtdcNotifyQueryAccountField_DeviceID_set)
    __swig_setmethods__["BankSecuAccType"] = _pyctp.CQdpFtdcNotifyQueryAccountField_BankSecuAccType_set
    __swig_getmethods__["BankSecuAccType"] = _pyctp.CQdpFtdcNotifyQueryAccountField_BankSecuAccType_get
    if _newclass:
        BankSecuAccType = _swig_property(_pyctp.CQdpFtdcNotifyQueryAccountField_BankSecuAccType_get, _pyctp.CQdpFtdcNotifyQueryAccountField_BankSecuAccType_set)
    __swig_setmethods__["BankCodingForFuture"] = _pyctp.CQdpFtdcNotifyQueryAccountField_BankCodingForFuture_set
    __swig_getmethods__["BankCodingForFuture"] = _pyctp.CQdpFtdcNotifyQueryAccountField_BankCodingForFuture_get
    if _newclass:
        BankCodingForFuture = _swig_property(_pyctp.CQdpFtdcNotifyQueryAccountField_BankCodingForFuture_get, _pyctp.CQdpFtdcNotifyQueryAccountField_BankCodingForFuture_set)
    __swig_setmethods__["BankSecuAcc"] = _pyctp.CQdpFtdcNotifyQueryAccountField_BankSecuAcc_set
    __swig_getmethods__["BankSecuAcc"] = _pyctp.CQdpFtdcNotifyQueryAccountField_BankSecuAcc_get
    if _newclass:
        BankSecuAcc = _swig_property(_pyctp.CQdpFtdcNotifyQueryAccountField_BankSecuAcc_get, _pyctp.CQdpFtdcNotifyQueryAccountField_BankSecuAcc_set)
    __swig_setmethods__["BankPwdFlag"] = _pyctp.CQdpFtdcNotifyQueryAccountField_BankPwdFlag_set
    __swig_getmethods__["BankPwdFlag"] = _pyctp.CQdpFtdcNotifyQueryAccountField_BankPwdFlag_get
    if _newclass:
        BankPwdFlag = _swig_property(_pyctp.CQdpFtdcNotifyQueryAccountField_BankPwdFlag_get, _pyctp.CQdpFtdcNotifyQueryAccountField_BankPwdFlag_set)
    __swig_setmethods__["SecuPwdFlag"] = _pyctp.CQdpFtdcNotifyQueryAccountField_SecuPwdFlag_set
    __swig_getmethods__["SecuPwdFlag"] = _pyctp.CQdpFtdcNotifyQueryAccountField_SecuPwdFlag_get
    if _newclass:
        SecuPwdFlag = _swig_property(_pyctp.CQdpFtdcNotifyQueryAccountField_SecuPwdFlag_get, _pyctp.CQdpFtdcNotifyQueryAccountField_SecuPwdFlag_set)
    __swig_setmethods__["OperNo"] = _pyctp.CQdpFtdcNotifyQueryAccountField_OperNo_set
    __swig_getmethods__["OperNo"] = _pyctp.CQdpFtdcNotifyQueryAccountField_OperNo_get
    if _newclass:
        OperNo = _swig_property(_pyctp.CQdpFtdcNotifyQueryAccountField_OperNo_get, _pyctp.CQdpFtdcNotifyQueryAccountField_OperNo_set)
    __swig_setmethods__["RequestID"] = _pyctp.CQdpFtdcNotifyQueryAccountField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CQdpFtdcNotifyQueryAccountField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CQdpFtdcNotifyQueryAccountField_RequestID_get, _pyctp.CQdpFtdcNotifyQueryAccountField_RequestID_set)
    __swig_setmethods__["TID"] = _pyctp.CQdpFtdcNotifyQueryAccountField_TID_set
    __swig_getmethods__["TID"] = _pyctp.CQdpFtdcNotifyQueryAccountField_TID_get
    if _newclass:
        TID = _swig_property(_pyctp.CQdpFtdcNotifyQueryAccountField_TID_get, _pyctp.CQdpFtdcNotifyQueryAccountField_TID_set)
    __swig_setmethods__["BankUseAmount"] = _pyctp.CQdpFtdcNotifyQueryAccountField_BankUseAmount_set
    __swig_getmethods__["BankUseAmount"] = _pyctp.CQdpFtdcNotifyQueryAccountField_BankUseAmount_get
    if _newclass:
        BankUseAmount = _swig_property(_pyctp.CQdpFtdcNotifyQueryAccountField_BankUseAmount_get, _pyctp.CQdpFtdcNotifyQueryAccountField_BankUseAmount_set)
    __swig_setmethods__["BankFetchAmount"] = _pyctp.CQdpFtdcNotifyQueryAccountField_BankFetchAmount_set
    __swig_getmethods__["BankFetchAmount"] = _pyctp.CQdpFtdcNotifyQueryAccountField_BankFetchAmount_get
    if _newclass:
        BankFetchAmount = _swig_property(_pyctp.CQdpFtdcNotifyQueryAccountField_BankFetchAmount_get, _pyctp.CQdpFtdcNotifyQueryAccountField_BankFetchAmount_set)
    __swig_setmethods__["ErrorID"] = _pyctp.CQdpFtdcNotifyQueryAccountField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _pyctp.CQdpFtdcNotifyQueryAccountField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_pyctp.CQdpFtdcNotifyQueryAccountField_ErrorID_get, _pyctp.CQdpFtdcNotifyQueryAccountField_ErrorID_set)
    __swig_setmethods__["ErrorMsg"] = _pyctp.CQdpFtdcNotifyQueryAccountField_ErrorMsg_set
    __swig_getmethods__["ErrorMsg"] = _pyctp.CQdpFtdcNotifyQueryAccountField_ErrorMsg_get
    if _newclass:
        ErrorMsg = _swig_property(_pyctp.CQdpFtdcNotifyQueryAccountField_ErrorMsg_get, _pyctp.CQdpFtdcNotifyQueryAccountField_ErrorMsg_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcNotifyQueryAccountField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcNotifyQueryAccountField
    __del__ = lambda self: None
CQdpFtdcNotifyQueryAccountField_swigregister = _pyctp.CQdpFtdcNotifyQueryAccountField_swigregister
CQdpFtdcNotifyQueryAccountField_swigregister(CQdpFtdcNotifyQueryAccountField)

class CQdpFtdcRspInfoField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcRspInfoField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcRspInfoField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ErrorID"] = _pyctp.CQdpFtdcRspInfoField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _pyctp.CQdpFtdcRspInfoField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_pyctp.CQdpFtdcRspInfoField_ErrorID_get, _pyctp.CQdpFtdcRspInfoField_ErrorID_set)
    __swig_setmethods__["ErrorMsg"] = _pyctp.CQdpFtdcRspInfoField_ErrorMsg_set
    __swig_getmethods__["ErrorMsg"] = _pyctp.CQdpFtdcRspInfoField_ErrorMsg_get
    if _newclass:
        ErrorMsg = _swig_property(_pyctp.CQdpFtdcRspInfoField_ErrorMsg_get, _pyctp.CQdpFtdcRspInfoField_ErrorMsg_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcRspInfoField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcRspInfoField
    __del__ = lambda self: None
CQdpFtdcRspInfoField_swigregister = _pyctp.CQdpFtdcRspInfoField_swigregister
CQdpFtdcRspInfoField_swigregister(CQdpFtdcRspInfoField)

class CQdpFtdcQryOrderField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcQryOrderField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcQryOrderField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CQdpFtdcQryOrderField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CQdpFtdcQryOrderField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CQdpFtdcQryOrderField_BrokerID_get, _pyctp.CQdpFtdcQryOrderField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CQdpFtdcQryOrderField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CQdpFtdcQryOrderField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CQdpFtdcQryOrderField_UserID_get, _pyctp.CQdpFtdcQryOrderField_UserID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CQdpFtdcQryOrderField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CQdpFtdcQryOrderField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CQdpFtdcQryOrderField_ExchangeID_get, _pyctp.CQdpFtdcQryOrderField_ExchangeID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CQdpFtdcQryOrderField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CQdpFtdcQryOrderField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CQdpFtdcQryOrderField_InvestorID_get, _pyctp.CQdpFtdcQryOrderField_InvestorID_set)
    __swig_setmethods__["OrderSysID"] = _pyctp.CQdpFtdcQryOrderField_OrderSysID_set
    __swig_getmethods__["OrderSysID"] = _pyctp.CQdpFtdcQryOrderField_OrderSysID_get
    if _newclass:
        OrderSysID = _swig_property(_pyctp.CQdpFtdcQryOrderField_OrderSysID_get, _pyctp.CQdpFtdcQryOrderField_OrderSysID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CQdpFtdcQryOrderField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CQdpFtdcQryOrderField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CQdpFtdcQryOrderField_InstrumentID_get, _pyctp.CQdpFtdcQryOrderField_InstrumentID_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcQryOrderField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcQryOrderField
    __del__ = lambda self: None
CQdpFtdcQryOrderField_swigregister = _pyctp.CQdpFtdcQryOrderField_swigregister
CQdpFtdcQryOrderField_swigregister(CQdpFtdcQryOrderField)

class CQdpFtdcQryTradeField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcQryTradeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcQryTradeField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CQdpFtdcQryTradeField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CQdpFtdcQryTradeField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CQdpFtdcQryTradeField_BrokerID_get, _pyctp.CQdpFtdcQryTradeField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CQdpFtdcQryTradeField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CQdpFtdcQryTradeField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CQdpFtdcQryTradeField_UserID_get, _pyctp.CQdpFtdcQryTradeField_UserID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CQdpFtdcQryTradeField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CQdpFtdcQryTradeField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CQdpFtdcQryTradeField_ExchangeID_get, _pyctp.CQdpFtdcQryTradeField_ExchangeID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CQdpFtdcQryTradeField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CQdpFtdcQryTradeField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CQdpFtdcQryTradeField_InvestorID_get, _pyctp.CQdpFtdcQryTradeField_InvestorID_set)
    __swig_setmethods__["TradeID"] = _pyctp.CQdpFtdcQryTradeField_TradeID_set
    __swig_getmethods__["TradeID"] = _pyctp.CQdpFtdcQryTradeField_TradeID_get
    if _newclass:
        TradeID = _swig_property(_pyctp.CQdpFtdcQryTradeField_TradeID_get, _pyctp.CQdpFtdcQryTradeField_TradeID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CQdpFtdcQryTradeField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CQdpFtdcQryTradeField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CQdpFtdcQryTradeField_InstrumentID_get, _pyctp.CQdpFtdcQryTradeField_InstrumentID_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcQryTradeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcQryTradeField
    __del__ = lambda self: None
CQdpFtdcQryTradeField_swigregister = _pyctp.CQdpFtdcQryTradeField_swigregister
CQdpFtdcQryTradeField_swigregister(CQdpFtdcQryTradeField)

class CQdpFtdcQryInstrumentField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcQryInstrumentField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcQryInstrumentField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ExchangeID"] = _pyctp.CQdpFtdcQryInstrumentField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CQdpFtdcQryInstrumentField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CQdpFtdcQryInstrumentField_ExchangeID_get, _pyctp.CQdpFtdcQryInstrumentField_ExchangeID_set)
    __swig_setmethods__["ProductID"] = _pyctp.CQdpFtdcQryInstrumentField_ProductID_set
    __swig_getmethods__["ProductID"] = _pyctp.CQdpFtdcQryInstrumentField_ProductID_get
    if _newclass:
        ProductID = _swig_property(_pyctp.CQdpFtdcQryInstrumentField_ProductID_get, _pyctp.CQdpFtdcQryInstrumentField_ProductID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CQdpFtdcQryInstrumentField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CQdpFtdcQryInstrumentField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CQdpFtdcQryInstrumentField_InstrumentID_get, _pyctp.CQdpFtdcQryInstrumentField_InstrumentID_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcQryInstrumentField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcQryInstrumentField
    __del__ = lambda self: None
CQdpFtdcQryInstrumentField_swigregister = _pyctp.CQdpFtdcQryInstrumentField_swigregister
CQdpFtdcQryInstrumentField_swigregister(CQdpFtdcQryInstrumentField)

class CQdpFtdcRspInstrumentField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcRspInstrumentField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcRspInstrumentField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ExchangeID"] = _pyctp.CQdpFtdcRspInstrumentField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CQdpFtdcRspInstrumentField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CQdpFtdcRspInstrumentField_ExchangeID_get, _pyctp.CQdpFtdcRspInstrumentField_ExchangeID_set)
    __swig_setmethods__["ProductID"] = _pyctp.CQdpFtdcRspInstrumentField_ProductID_set
    __swig_getmethods__["ProductID"] = _pyctp.CQdpFtdcRspInstrumentField_ProductID_get
    if _newclass:
        ProductID = _swig_property(_pyctp.CQdpFtdcRspInstrumentField_ProductID_get, _pyctp.CQdpFtdcRspInstrumentField_ProductID_set)
    __swig_setmethods__["ProductName"] = _pyctp.CQdpFtdcRspInstrumentField_ProductName_set
    __swig_getmethods__["ProductName"] = _pyctp.CQdpFtdcRspInstrumentField_ProductName_get
    if _newclass:
        ProductName = _swig_property(_pyctp.CQdpFtdcRspInstrumentField_ProductName_get, _pyctp.CQdpFtdcRspInstrumentField_ProductName_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CQdpFtdcRspInstrumentField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CQdpFtdcRspInstrumentField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CQdpFtdcRspInstrumentField_InstrumentID_get, _pyctp.CQdpFtdcRspInstrumentField_InstrumentID_set)
    __swig_setmethods__["InstrumentName"] = _pyctp.CQdpFtdcRspInstrumentField_InstrumentName_set
    __swig_getmethods__["InstrumentName"] = _pyctp.CQdpFtdcRspInstrumentField_InstrumentName_get
    if _newclass:
        InstrumentName = _swig_property(_pyctp.CQdpFtdcRspInstrumentField_InstrumentName_get, _pyctp.CQdpFtdcRspInstrumentField_InstrumentName_set)
    __swig_setmethods__["DeliveryYear"] = _pyctp.CQdpFtdcRspInstrumentField_DeliveryYear_set
    __swig_getmethods__["DeliveryYear"] = _pyctp.CQdpFtdcRspInstrumentField_DeliveryYear_get
    if _newclass:
        DeliveryYear = _swig_property(_pyctp.CQdpFtdcRspInstrumentField_DeliveryYear_get, _pyctp.CQdpFtdcRspInstrumentField_DeliveryYear_set)
    __swig_setmethods__["DeliveryMonth"] = _pyctp.CQdpFtdcRspInstrumentField_DeliveryMonth_set
    __swig_getmethods__["DeliveryMonth"] = _pyctp.CQdpFtdcRspInstrumentField_DeliveryMonth_get
    if _newclass:
        DeliveryMonth = _swig_property(_pyctp.CQdpFtdcRspInstrumentField_DeliveryMonth_get, _pyctp.CQdpFtdcRspInstrumentField_DeliveryMonth_set)
    __swig_setmethods__["MaxLimitOrderVolume"] = _pyctp.CQdpFtdcRspInstrumentField_MaxLimitOrderVolume_set
    __swig_getmethods__["MaxLimitOrderVolume"] = _pyctp.CQdpFtdcRspInstrumentField_MaxLimitOrderVolume_get
    if _newclass:
        MaxLimitOrderVolume = _swig_property(_pyctp.CQdpFtdcRspInstrumentField_MaxLimitOrderVolume_get, _pyctp.CQdpFtdcRspInstrumentField_MaxLimitOrderVolume_set)
    __swig_setmethods__["MinLimitOrderVolume"] = _pyctp.CQdpFtdcRspInstrumentField_MinLimitOrderVolume_set
    __swig_getmethods__["MinLimitOrderVolume"] = _pyctp.CQdpFtdcRspInstrumentField_MinLimitOrderVolume_get
    if _newclass:
        MinLimitOrderVolume = _swig_property(_pyctp.CQdpFtdcRspInstrumentField_MinLimitOrderVolume_get, _pyctp.CQdpFtdcRspInstrumentField_MinLimitOrderVolume_set)
    __swig_setmethods__["MaxMarketOrderVolume"] = _pyctp.CQdpFtdcRspInstrumentField_MaxMarketOrderVolume_set
    __swig_getmethods__["MaxMarketOrderVolume"] = _pyctp.CQdpFtdcRspInstrumentField_MaxMarketOrderVolume_get
    if _newclass:
        MaxMarketOrderVolume = _swig_property(_pyctp.CQdpFtdcRspInstrumentField_MaxMarketOrderVolume_get, _pyctp.CQdpFtdcRspInstrumentField_MaxMarketOrderVolume_set)
    __swig_setmethods__["MinMarketOrderVolume"] = _pyctp.CQdpFtdcRspInstrumentField_MinMarketOrderVolume_set
    __swig_getmethods__["MinMarketOrderVolume"] = _pyctp.CQdpFtdcRspInstrumentField_MinMarketOrderVolume_get
    if _newclass:
        MinMarketOrderVolume = _swig_property(_pyctp.CQdpFtdcRspInstrumentField_MinMarketOrderVolume_get, _pyctp.CQdpFtdcRspInstrumentField_MinMarketOrderVolume_set)
    __swig_setmethods__["VolumeMultiple"] = _pyctp.CQdpFtdcRspInstrumentField_VolumeMultiple_set
    __swig_getmethods__["VolumeMultiple"] = _pyctp.CQdpFtdcRspInstrumentField_VolumeMultiple_get
    if _newclass:
        VolumeMultiple = _swig_property(_pyctp.CQdpFtdcRspInstrumentField_VolumeMultiple_get, _pyctp.CQdpFtdcRspInstrumentField_VolumeMultiple_set)
    __swig_setmethods__["PriceTick"] = _pyctp.CQdpFtdcRspInstrumentField_PriceTick_set
    __swig_getmethods__["PriceTick"] = _pyctp.CQdpFtdcRspInstrumentField_PriceTick_get
    if _newclass:
        PriceTick = _swig_property(_pyctp.CQdpFtdcRspInstrumentField_PriceTick_get, _pyctp.CQdpFtdcRspInstrumentField_PriceTick_set)
    __swig_setmethods__["Currency"] = _pyctp.CQdpFtdcRspInstrumentField_Currency_set
    __swig_getmethods__["Currency"] = _pyctp.CQdpFtdcRspInstrumentField_Currency_get
    if _newclass:
        Currency = _swig_property(_pyctp.CQdpFtdcRspInstrumentField_Currency_get, _pyctp.CQdpFtdcRspInstrumentField_Currency_set)
    __swig_setmethods__["LongPosLimit"] = _pyctp.CQdpFtdcRspInstrumentField_LongPosLimit_set
    __swig_getmethods__["LongPosLimit"] = _pyctp.CQdpFtdcRspInstrumentField_LongPosLimit_get
    if _newclass:
        LongPosLimit = _swig_property(_pyctp.CQdpFtdcRspInstrumentField_LongPosLimit_get, _pyctp.CQdpFtdcRspInstrumentField_LongPosLimit_set)
    __swig_setmethods__["ShortPosLimit"] = _pyctp.CQdpFtdcRspInstrumentField_ShortPosLimit_set
    __swig_getmethods__["ShortPosLimit"] = _pyctp.CQdpFtdcRspInstrumentField_ShortPosLimit_get
    if _newclass:
        ShortPosLimit = _swig_property(_pyctp.CQdpFtdcRspInstrumentField_ShortPosLimit_get, _pyctp.CQdpFtdcRspInstrumentField_ShortPosLimit_set)
    __swig_setmethods__["LowerLimitPrice"] = _pyctp.CQdpFtdcRspInstrumentField_LowerLimitPrice_set
    __swig_getmethods__["LowerLimitPrice"] = _pyctp.CQdpFtdcRspInstrumentField_LowerLimitPrice_get
    if _newclass:
        LowerLimitPrice = _swig_property(_pyctp.CQdpFtdcRspInstrumentField_LowerLimitPrice_get, _pyctp.CQdpFtdcRspInstrumentField_LowerLimitPrice_set)
    __swig_setmethods__["UpperLimitPrice"] = _pyctp.CQdpFtdcRspInstrumentField_UpperLimitPrice_set
    __swig_getmethods__["UpperLimitPrice"] = _pyctp.CQdpFtdcRspInstrumentField_UpperLimitPrice_get
    if _newclass:
        UpperLimitPrice = _swig_property(_pyctp.CQdpFtdcRspInstrumentField_UpperLimitPrice_get, _pyctp.CQdpFtdcRspInstrumentField_UpperLimitPrice_set)
    __swig_setmethods__["PreSettlementPrice"] = _pyctp.CQdpFtdcRspInstrumentField_PreSettlementPrice_set
    __swig_getmethods__["PreSettlementPrice"] = _pyctp.CQdpFtdcRspInstrumentField_PreSettlementPrice_get
    if _newclass:
        PreSettlementPrice = _swig_property(_pyctp.CQdpFtdcRspInstrumentField_PreSettlementPrice_get, _pyctp.CQdpFtdcRspInstrumentField_PreSettlementPrice_set)
    __swig_setmethods__["InstrumentStatus"] = _pyctp.CQdpFtdcRspInstrumentField_InstrumentStatus_set
    __swig_getmethods__["InstrumentStatus"] = _pyctp.CQdpFtdcRspInstrumentField_InstrumentStatus_get
    if _newclass:
        InstrumentStatus = _swig_property(_pyctp.CQdpFtdcRspInstrumentField_InstrumentStatus_get, _pyctp.CQdpFtdcRspInstrumentField_InstrumentStatus_set)
    __swig_setmethods__["CreateDate"] = _pyctp.CQdpFtdcRspInstrumentField_CreateDate_set
    __swig_getmethods__["CreateDate"] = _pyctp.CQdpFtdcRspInstrumentField_CreateDate_get
    if _newclass:
        CreateDate = _swig_property(_pyctp.CQdpFtdcRspInstrumentField_CreateDate_get, _pyctp.CQdpFtdcRspInstrumentField_CreateDate_set)
    __swig_setmethods__["OpenDate"] = _pyctp.CQdpFtdcRspInstrumentField_OpenDate_set
    __swig_getmethods__["OpenDate"] = _pyctp.CQdpFtdcRspInstrumentField_OpenDate_get
    if _newclass:
        OpenDate = _swig_property(_pyctp.CQdpFtdcRspInstrumentField_OpenDate_get, _pyctp.CQdpFtdcRspInstrumentField_OpenDate_set)
    __swig_setmethods__["ExpireDate"] = _pyctp.CQdpFtdcRspInstrumentField_ExpireDate_set
    __swig_getmethods__["ExpireDate"] = _pyctp.CQdpFtdcRspInstrumentField_ExpireDate_get
    if _newclass:
        ExpireDate = _swig_property(_pyctp.CQdpFtdcRspInstrumentField_ExpireDate_get, _pyctp.CQdpFtdcRspInstrumentField_ExpireDate_set)
    __swig_setmethods__["StartDelivDate"] = _pyctp.CQdpFtdcRspInstrumentField_StartDelivDate_set
    __swig_getmethods__["StartDelivDate"] = _pyctp.CQdpFtdcRspInstrumentField_StartDelivDate_get
    if _newclass:
        StartDelivDate = _swig_property(_pyctp.CQdpFtdcRspInstrumentField_StartDelivDate_get, _pyctp.CQdpFtdcRspInstrumentField_StartDelivDate_set)
    __swig_setmethods__["EndDelivDate"] = _pyctp.CQdpFtdcRspInstrumentField_EndDelivDate_set
    __swig_getmethods__["EndDelivDate"] = _pyctp.CQdpFtdcRspInstrumentField_EndDelivDate_get
    if _newclass:
        EndDelivDate = _swig_property(_pyctp.CQdpFtdcRspInstrumentField_EndDelivDate_get, _pyctp.CQdpFtdcRspInstrumentField_EndDelivDate_set)
    __swig_setmethods__["BasisPrice"] = _pyctp.CQdpFtdcRspInstrumentField_BasisPrice_set
    __swig_getmethods__["BasisPrice"] = _pyctp.CQdpFtdcRspInstrumentField_BasisPrice_get
    if _newclass:
        BasisPrice = _swig_property(_pyctp.CQdpFtdcRspInstrumentField_BasisPrice_get, _pyctp.CQdpFtdcRspInstrumentField_BasisPrice_set)
    __swig_setmethods__["IsTrading"] = _pyctp.CQdpFtdcRspInstrumentField_IsTrading_set
    __swig_getmethods__["IsTrading"] = _pyctp.CQdpFtdcRspInstrumentField_IsTrading_get
    if _newclass:
        IsTrading = _swig_property(_pyctp.CQdpFtdcRspInstrumentField_IsTrading_get, _pyctp.CQdpFtdcRspInstrumentField_IsTrading_set)
    __swig_setmethods__["UnderlyingInstrID"] = _pyctp.CQdpFtdcRspInstrumentField_UnderlyingInstrID_set
    __swig_getmethods__["UnderlyingInstrID"] = _pyctp.CQdpFtdcRspInstrumentField_UnderlyingInstrID_get
    if _newclass:
        UnderlyingInstrID = _swig_property(_pyctp.CQdpFtdcRspInstrumentField_UnderlyingInstrID_get, _pyctp.CQdpFtdcRspInstrumentField_UnderlyingInstrID_set)
    __swig_setmethods__["UnderlyingMultiple"] = _pyctp.CQdpFtdcRspInstrumentField_UnderlyingMultiple_set
    __swig_getmethods__["UnderlyingMultiple"] = _pyctp.CQdpFtdcRspInstrumentField_UnderlyingMultiple_get
    if _newclass:
        UnderlyingMultiple = _swig_property(_pyctp.CQdpFtdcRspInstrumentField_UnderlyingMultiple_get, _pyctp.CQdpFtdcRspInstrumentField_UnderlyingMultiple_set)
    __swig_setmethods__["PositionType"] = _pyctp.CQdpFtdcRspInstrumentField_PositionType_set
    __swig_getmethods__["PositionType"] = _pyctp.CQdpFtdcRspInstrumentField_PositionType_get
    if _newclass:
        PositionType = _swig_property(_pyctp.CQdpFtdcRspInstrumentField_PositionType_get, _pyctp.CQdpFtdcRspInstrumentField_PositionType_set)
    __swig_setmethods__["StrikePrice"] = _pyctp.CQdpFtdcRspInstrumentField_StrikePrice_set
    __swig_getmethods__["StrikePrice"] = _pyctp.CQdpFtdcRspInstrumentField_StrikePrice_get
    if _newclass:
        StrikePrice = _swig_property(_pyctp.CQdpFtdcRspInstrumentField_StrikePrice_get, _pyctp.CQdpFtdcRspInstrumentField_StrikePrice_set)
    __swig_setmethods__["OptionsType"] = _pyctp.CQdpFtdcRspInstrumentField_OptionsType_set
    __swig_getmethods__["OptionsType"] = _pyctp.CQdpFtdcRspInstrumentField_OptionsType_get
    if _newclass:
        OptionsType = _swig_property(_pyctp.CQdpFtdcRspInstrumentField_OptionsType_get, _pyctp.CQdpFtdcRspInstrumentField_OptionsType_set)
    __swig_setmethods__["ProductClass"] = _pyctp.CQdpFtdcRspInstrumentField_ProductClass_set
    __swig_getmethods__["ProductClass"] = _pyctp.CQdpFtdcRspInstrumentField_ProductClass_get
    if _newclass:
        ProductClass = _swig_property(_pyctp.CQdpFtdcRspInstrumentField_ProductClass_get, _pyctp.CQdpFtdcRspInstrumentField_ProductClass_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcRspInstrumentField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcRspInstrumentField
    __del__ = lambda self: None
CQdpFtdcRspInstrumentField_swigregister = _pyctp.CQdpFtdcRspInstrumentField_swigregister
CQdpFtdcRspInstrumentField_swigregister(CQdpFtdcRspInstrumentField)

class CQdpFtdcInstrumentStatusField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcInstrumentStatusField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcInstrumentStatusField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ExchangeID"] = _pyctp.CQdpFtdcInstrumentStatusField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CQdpFtdcInstrumentStatusField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CQdpFtdcInstrumentStatusField_ExchangeID_get, _pyctp.CQdpFtdcInstrumentStatusField_ExchangeID_set)
    __swig_setmethods__["ProductID"] = _pyctp.CQdpFtdcInstrumentStatusField_ProductID_set
    __swig_getmethods__["ProductID"] = _pyctp.CQdpFtdcInstrumentStatusField_ProductID_get
    if _newclass:
        ProductID = _swig_property(_pyctp.CQdpFtdcInstrumentStatusField_ProductID_get, _pyctp.CQdpFtdcInstrumentStatusField_ProductID_set)
    __swig_setmethods__["ProductName"] = _pyctp.CQdpFtdcInstrumentStatusField_ProductName_set
    __swig_getmethods__["ProductName"] = _pyctp.CQdpFtdcInstrumentStatusField_ProductName_get
    if _newclass:
        ProductName = _swig_property(_pyctp.CQdpFtdcInstrumentStatusField_ProductName_get, _pyctp.CQdpFtdcInstrumentStatusField_ProductName_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CQdpFtdcInstrumentStatusField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CQdpFtdcInstrumentStatusField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CQdpFtdcInstrumentStatusField_InstrumentID_get, _pyctp.CQdpFtdcInstrumentStatusField_InstrumentID_set)
    __swig_setmethods__["InstrumentName"] = _pyctp.CQdpFtdcInstrumentStatusField_InstrumentName_set
    __swig_getmethods__["InstrumentName"] = _pyctp.CQdpFtdcInstrumentStatusField_InstrumentName_get
    if _newclass:
        InstrumentName = _swig_property(_pyctp.CQdpFtdcInstrumentStatusField_InstrumentName_get, _pyctp.CQdpFtdcInstrumentStatusField_InstrumentName_set)
    __swig_setmethods__["DeliveryYear"] = _pyctp.CQdpFtdcInstrumentStatusField_DeliveryYear_set
    __swig_getmethods__["DeliveryYear"] = _pyctp.CQdpFtdcInstrumentStatusField_DeliveryYear_get
    if _newclass:
        DeliveryYear = _swig_property(_pyctp.CQdpFtdcInstrumentStatusField_DeliveryYear_get, _pyctp.CQdpFtdcInstrumentStatusField_DeliveryYear_set)
    __swig_setmethods__["DeliveryMonth"] = _pyctp.CQdpFtdcInstrumentStatusField_DeliveryMonth_set
    __swig_getmethods__["DeliveryMonth"] = _pyctp.CQdpFtdcInstrumentStatusField_DeliveryMonth_get
    if _newclass:
        DeliveryMonth = _swig_property(_pyctp.CQdpFtdcInstrumentStatusField_DeliveryMonth_get, _pyctp.CQdpFtdcInstrumentStatusField_DeliveryMonth_set)
    __swig_setmethods__["MaxLimitOrderVolume"] = _pyctp.CQdpFtdcInstrumentStatusField_MaxLimitOrderVolume_set
    __swig_getmethods__["MaxLimitOrderVolume"] = _pyctp.CQdpFtdcInstrumentStatusField_MaxLimitOrderVolume_get
    if _newclass:
        MaxLimitOrderVolume = _swig_property(_pyctp.CQdpFtdcInstrumentStatusField_MaxLimitOrderVolume_get, _pyctp.CQdpFtdcInstrumentStatusField_MaxLimitOrderVolume_set)
    __swig_setmethods__["MinLimitOrderVolume"] = _pyctp.CQdpFtdcInstrumentStatusField_MinLimitOrderVolume_set
    __swig_getmethods__["MinLimitOrderVolume"] = _pyctp.CQdpFtdcInstrumentStatusField_MinLimitOrderVolume_get
    if _newclass:
        MinLimitOrderVolume = _swig_property(_pyctp.CQdpFtdcInstrumentStatusField_MinLimitOrderVolume_get, _pyctp.CQdpFtdcInstrumentStatusField_MinLimitOrderVolume_set)
    __swig_setmethods__["MaxMarketOrderVolume"] = _pyctp.CQdpFtdcInstrumentStatusField_MaxMarketOrderVolume_set
    __swig_getmethods__["MaxMarketOrderVolume"] = _pyctp.CQdpFtdcInstrumentStatusField_MaxMarketOrderVolume_get
    if _newclass:
        MaxMarketOrderVolume = _swig_property(_pyctp.CQdpFtdcInstrumentStatusField_MaxMarketOrderVolume_get, _pyctp.CQdpFtdcInstrumentStatusField_MaxMarketOrderVolume_set)
    __swig_setmethods__["MinMarketOrderVolume"] = _pyctp.CQdpFtdcInstrumentStatusField_MinMarketOrderVolume_set
    __swig_getmethods__["MinMarketOrderVolume"] = _pyctp.CQdpFtdcInstrumentStatusField_MinMarketOrderVolume_get
    if _newclass:
        MinMarketOrderVolume = _swig_property(_pyctp.CQdpFtdcInstrumentStatusField_MinMarketOrderVolume_get, _pyctp.CQdpFtdcInstrumentStatusField_MinMarketOrderVolume_set)
    __swig_setmethods__["VolumeMultiple"] = _pyctp.CQdpFtdcInstrumentStatusField_VolumeMultiple_set
    __swig_getmethods__["VolumeMultiple"] = _pyctp.CQdpFtdcInstrumentStatusField_VolumeMultiple_get
    if _newclass:
        VolumeMultiple = _swig_property(_pyctp.CQdpFtdcInstrumentStatusField_VolumeMultiple_get, _pyctp.CQdpFtdcInstrumentStatusField_VolumeMultiple_set)
    __swig_setmethods__["PriceTick"] = _pyctp.CQdpFtdcInstrumentStatusField_PriceTick_set
    __swig_getmethods__["PriceTick"] = _pyctp.CQdpFtdcInstrumentStatusField_PriceTick_get
    if _newclass:
        PriceTick = _swig_property(_pyctp.CQdpFtdcInstrumentStatusField_PriceTick_get, _pyctp.CQdpFtdcInstrumentStatusField_PriceTick_set)
    __swig_setmethods__["Currency"] = _pyctp.CQdpFtdcInstrumentStatusField_Currency_set
    __swig_getmethods__["Currency"] = _pyctp.CQdpFtdcInstrumentStatusField_Currency_get
    if _newclass:
        Currency = _swig_property(_pyctp.CQdpFtdcInstrumentStatusField_Currency_get, _pyctp.CQdpFtdcInstrumentStatusField_Currency_set)
    __swig_setmethods__["LongPosLimit"] = _pyctp.CQdpFtdcInstrumentStatusField_LongPosLimit_set
    __swig_getmethods__["LongPosLimit"] = _pyctp.CQdpFtdcInstrumentStatusField_LongPosLimit_get
    if _newclass:
        LongPosLimit = _swig_property(_pyctp.CQdpFtdcInstrumentStatusField_LongPosLimit_get, _pyctp.CQdpFtdcInstrumentStatusField_LongPosLimit_set)
    __swig_setmethods__["ShortPosLimit"] = _pyctp.CQdpFtdcInstrumentStatusField_ShortPosLimit_set
    __swig_getmethods__["ShortPosLimit"] = _pyctp.CQdpFtdcInstrumentStatusField_ShortPosLimit_get
    if _newclass:
        ShortPosLimit = _swig_property(_pyctp.CQdpFtdcInstrumentStatusField_ShortPosLimit_get, _pyctp.CQdpFtdcInstrumentStatusField_ShortPosLimit_set)
    __swig_setmethods__["LowerLimitPrice"] = _pyctp.CQdpFtdcInstrumentStatusField_LowerLimitPrice_set
    __swig_getmethods__["LowerLimitPrice"] = _pyctp.CQdpFtdcInstrumentStatusField_LowerLimitPrice_get
    if _newclass:
        LowerLimitPrice = _swig_property(_pyctp.CQdpFtdcInstrumentStatusField_LowerLimitPrice_get, _pyctp.CQdpFtdcInstrumentStatusField_LowerLimitPrice_set)
    __swig_setmethods__["UpperLimitPrice"] = _pyctp.CQdpFtdcInstrumentStatusField_UpperLimitPrice_set
    __swig_getmethods__["UpperLimitPrice"] = _pyctp.CQdpFtdcInstrumentStatusField_UpperLimitPrice_get
    if _newclass:
        UpperLimitPrice = _swig_property(_pyctp.CQdpFtdcInstrumentStatusField_UpperLimitPrice_get, _pyctp.CQdpFtdcInstrumentStatusField_UpperLimitPrice_set)
    __swig_setmethods__["PreSettlementPrice"] = _pyctp.CQdpFtdcInstrumentStatusField_PreSettlementPrice_set
    __swig_getmethods__["PreSettlementPrice"] = _pyctp.CQdpFtdcInstrumentStatusField_PreSettlementPrice_get
    if _newclass:
        PreSettlementPrice = _swig_property(_pyctp.CQdpFtdcInstrumentStatusField_PreSettlementPrice_get, _pyctp.CQdpFtdcInstrumentStatusField_PreSettlementPrice_set)
    __swig_setmethods__["InstrumentStatus"] = _pyctp.CQdpFtdcInstrumentStatusField_InstrumentStatus_set
    __swig_getmethods__["InstrumentStatus"] = _pyctp.CQdpFtdcInstrumentStatusField_InstrumentStatus_get
    if _newclass:
        InstrumentStatus = _swig_property(_pyctp.CQdpFtdcInstrumentStatusField_InstrumentStatus_get, _pyctp.CQdpFtdcInstrumentStatusField_InstrumentStatus_set)
    __swig_setmethods__["CreateDate"] = _pyctp.CQdpFtdcInstrumentStatusField_CreateDate_set
    __swig_getmethods__["CreateDate"] = _pyctp.CQdpFtdcInstrumentStatusField_CreateDate_get
    if _newclass:
        CreateDate = _swig_property(_pyctp.CQdpFtdcInstrumentStatusField_CreateDate_get, _pyctp.CQdpFtdcInstrumentStatusField_CreateDate_set)
    __swig_setmethods__["OpenDate"] = _pyctp.CQdpFtdcInstrumentStatusField_OpenDate_set
    __swig_getmethods__["OpenDate"] = _pyctp.CQdpFtdcInstrumentStatusField_OpenDate_get
    if _newclass:
        OpenDate = _swig_property(_pyctp.CQdpFtdcInstrumentStatusField_OpenDate_get, _pyctp.CQdpFtdcInstrumentStatusField_OpenDate_set)
    __swig_setmethods__["ExpireDate"] = _pyctp.CQdpFtdcInstrumentStatusField_ExpireDate_set
    __swig_getmethods__["ExpireDate"] = _pyctp.CQdpFtdcInstrumentStatusField_ExpireDate_get
    if _newclass:
        ExpireDate = _swig_property(_pyctp.CQdpFtdcInstrumentStatusField_ExpireDate_get, _pyctp.CQdpFtdcInstrumentStatusField_ExpireDate_set)
    __swig_setmethods__["StartDelivDate"] = _pyctp.CQdpFtdcInstrumentStatusField_StartDelivDate_set
    __swig_getmethods__["StartDelivDate"] = _pyctp.CQdpFtdcInstrumentStatusField_StartDelivDate_get
    if _newclass:
        StartDelivDate = _swig_property(_pyctp.CQdpFtdcInstrumentStatusField_StartDelivDate_get, _pyctp.CQdpFtdcInstrumentStatusField_StartDelivDate_set)
    __swig_setmethods__["EndDelivDate"] = _pyctp.CQdpFtdcInstrumentStatusField_EndDelivDate_set
    __swig_getmethods__["EndDelivDate"] = _pyctp.CQdpFtdcInstrumentStatusField_EndDelivDate_get
    if _newclass:
        EndDelivDate = _swig_property(_pyctp.CQdpFtdcInstrumentStatusField_EndDelivDate_get, _pyctp.CQdpFtdcInstrumentStatusField_EndDelivDate_set)
    __swig_setmethods__["BasisPrice"] = _pyctp.CQdpFtdcInstrumentStatusField_BasisPrice_set
    __swig_getmethods__["BasisPrice"] = _pyctp.CQdpFtdcInstrumentStatusField_BasisPrice_get
    if _newclass:
        BasisPrice = _swig_property(_pyctp.CQdpFtdcInstrumentStatusField_BasisPrice_get, _pyctp.CQdpFtdcInstrumentStatusField_BasisPrice_set)
    __swig_setmethods__["IsTrading"] = _pyctp.CQdpFtdcInstrumentStatusField_IsTrading_set
    __swig_getmethods__["IsTrading"] = _pyctp.CQdpFtdcInstrumentStatusField_IsTrading_get
    if _newclass:
        IsTrading = _swig_property(_pyctp.CQdpFtdcInstrumentStatusField_IsTrading_get, _pyctp.CQdpFtdcInstrumentStatusField_IsTrading_set)
    __swig_setmethods__["UnderlyingInstrID"] = _pyctp.CQdpFtdcInstrumentStatusField_UnderlyingInstrID_set
    __swig_getmethods__["UnderlyingInstrID"] = _pyctp.CQdpFtdcInstrumentStatusField_UnderlyingInstrID_get
    if _newclass:
        UnderlyingInstrID = _swig_property(_pyctp.CQdpFtdcInstrumentStatusField_UnderlyingInstrID_get, _pyctp.CQdpFtdcInstrumentStatusField_UnderlyingInstrID_set)
    __swig_setmethods__["UnderlyingMultiple"] = _pyctp.CQdpFtdcInstrumentStatusField_UnderlyingMultiple_set
    __swig_getmethods__["UnderlyingMultiple"] = _pyctp.CQdpFtdcInstrumentStatusField_UnderlyingMultiple_get
    if _newclass:
        UnderlyingMultiple = _swig_property(_pyctp.CQdpFtdcInstrumentStatusField_UnderlyingMultiple_get, _pyctp.CQdpFtdcInstrumentStatusField_UnderlyingMultiple_set)
    __swig_setmethods__["PositionType"] = _pyctp.CQdpFtdcInstrumentStatusField_PositionType_set
    __swig_getmethods__["PositionType"] = _pyctp.CQdpFtdcInstrumentStatusField_PositionType_get
    if _newclass:
        PositionType = _swig_property(_pyctp.CQdpFtdcInstrumentStatusField_PositionType_get, _pyctp.CQdpFtdcInstrumentStatusField_PositionType_set)
    __swig_setmethods__["StrikePrice"] = _pyctp.CQdpFtdcInstrumentStatusField_StrikePrice_set
    __swig_getmethods__["StrikePrice"] = _pyctp.CQdpFtdcInstrumentStatusField_StrikePrice_get
    if _newclass:
        StrikePrice = _swig_property(_pyctp.CQdpFtdcInstrumentStatusField_StrikePrice_get, _pyctp.CQdpFtdcInstrumentStatusField_StrikePrice_set)
    __swig_setmethods__["OptionsType"] = _pyctp.CQdpFtdcInstrumentStatusField_OptionsType_set
    __swig_getmethods__["OptionsType"] = _pyctp.CQdpFtdcInstrumentStatusField_OptionsType_get
    if _newclass:
        OptionsType = _swig_property(_pyctp.CQdpFtdcInstrumentStatusField_OptionsType_get, _pyctp.CQdpFtdcInstrumentStatusField_OptionsType_set)
    __swig_setmethods__["ProductClass"] = _pyctp.CQdpFtdcInstrumentStatusField_ProductClass_set
    __swig_getmethods__["ProductClass"] = _pyctp.CQdpFtdcInstrumentStatusField_ProductClass_get
    if _newclass:
        ProductClass = _swig_property(_pyctp.CQdpFtdcInstrumentStatusField_ProductClass_get, _pyctp.CQdpFtdcInstrumentStatusField_ProductClass_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcInstrumentStatusField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcInstrumentStatusField
    __del__ = lambda self: None
CQdpFtdcInstrumentStatusField_swigregister = _pyctp.CQdpFtdcInstrumentStatusField_swigregister
CQdpFtdcInstrumentStatusField_swigregister(CQdpFtdcInstrumentStatusField)

class CQdpFtdcQryInvestorAccountField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcQryInvestorAccountField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcQryInvestorAccountField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CQdpFtdcQryInvestorAccountField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CQdpFtdcQryInvestorAccountField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CQdpFtdcQryInvestorAccountField_BrokerID_get, _pyctp.CQdpFtdcQryInvestorAccountField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CQdpFtdcQryInvestorAccountField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CQdpFtdcQryInvestorAccountField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CQdpFtdcQryInvestorAccountField_UserID_get, _pyctp.CQdpFtdcQryInvestorAccountField_UserID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CQdpFtdcQryInvestorAccountField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CQdpFtdcQryInvestorAccountField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CQdpFtdcQryInvestorAccountField_InvestorID_get, _pyctp.CQdpFtdcQryInvestorAccountField_InvestorID_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcQryInvestorAccountField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcQryInvestorAccountField
    __del__ = lambda self: None
CQdpFtdcQryInvestorAccountField_swigregister = _pyctp.CQdpFtdcQryInvestorAccountField_swigregister
CQdpFtdcQryInvestorAccountField_swigregister(CQdpFtdcQryInvestorAccountField)

class CQdpFtdcRspInvestorAccountField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcRspInvestorAccountField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcRspInvestorAccountField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CQdpFtdcRspInvestorAccountField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CQdpFtdcRspInvestorAccountField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CQdpFtdcRspInvestorAccountField_BrokerID_get, _pyctp.CQdpFtdcRspInvestorAccountField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CQdpFtdcRspInvestorAccountField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CQdpFtdcRspInvestorAccountField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CQdpFtdcRspInvestorAccountField_InvestorID_get, _pyctp.CQdpFtdcRspInvestorAccountField_InvestorID_set)
    __swig_setmethods__["AccountID"] = _pyctp.CQdpFtdcRspInvestorAccountField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CQdpFtdcRspInvestorAccountField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CQdpFtdcRspInvestorAccountField_AccountID_get, _pyctp.CQdpFtdcRspInvestorAccountField_AccountID_set)
    __swig_setmethods__["PreBalance"] = _pyctp.CQdpFtdcRspInvestorAccountField_PreBalance_set
    __swig_getmethods__["PreBalance"] = _pyctp.CQdpFtdcRspInvestorAccountField_PreBalance_get
    if _newclass:
        PreBalance = _swig_property(_pyctp.CQdpFtdcRspInvestorAccountField_PreBalance_get, _pyctp.CQdpFtdcRspInvestorAccountField_PreBalance_set)
    __swig_setmethods__["PreAvailable"] = _pyctp.CQdpFtdcRspInvestorAccountField_PreAvailable_set
    __swig_getmethods__["PreAvailable"] = _pyctp.CQdpFtdcRspInvestorAccountField_PreAvailable_get
    if _newclass:
        PreAvailable = _swig_property(_pyctp.CQdpFtdcRspInvestorAccountField_PreAvailable_get, _pyctp.CQdpFtdcRspInvestorAccountField_PreAvailable_set)
    __swig_setmethods__["Deposit"] = _pyctp.CQdpFtdcRspInvestorAccountField_Deposit_set
    __swig_getmethods__["Deposit"] = _pyctp.CQdpFtdcRspInvestorAccountField_Deposit_get
    if _newclass:
        Deposit = _swig_property(_pyctp.CQdpFtdcRspInvestorAccountField_Deposit_get, _pyctp.CQdpFtdcRspInvestorAccountField_Deposit_set)
    __swig_setmethods__["Withdraw"] = _pyctp.CQdpFtdcRspInvestorAccountField_Withdraw_set
    __swig_getmethods__["Withdraw"] = _pyctp.CQdpFtdcRspInvestorAccountField_Withdraw_get
    if _newclass:
        Withdraw = _swig_property(_pyctp.CQdpFtdcRspInvestorAccountField_Withdraw_get, _pyctp.CQdpFtdcRspInvestorAccountField_Withdraw_set)
    __swig_setmethods__["Margin"] = _pyctp.CQdpFtdcRspInvestorAccountField_Margin_set
    __swig_getmethods__["Margin"] = _pyctp.CQdpFtdcRspInvestorAccountField_Margin_get
    if _newclass:
        Margin = _swig_property(_pyctp.CQdpFtdcRspInvestorAccountField_Margin_get, _pyctp.CQdpFtdcRspInvestorAccountField_Margin_set)
    __swig_setmethods__["Premium"] = _pyctp.CQdpFtdcRspInvestorAccountField_Premium_set
    __swig_getmethods__["Premium"] = _pyctp.CQdpFtdcRspInvestorAccountField_Premium_get
    if _newclass:
        Premium = _swig_property(_pyctp.CQdpFtdcRspInvestorAccountField_Premium_get, _pyctp.CQdpFtdcRspInvestorAccountField_Premium_set)
    __swig_setmethods__["Fee"] = _pyctp.CQdpFtdcRspInvestorAccountField_Fee_set
    __swig_getmethods__["Fee"] = _pyctp.CQdpFtdcRspInvestorAccountField_Fee_get
    if _newclass:
        Fee = _swig_property(_pyctp.CQdpFtdcRspInvestorAccountField_Fee_get, _pyctp.CQdpFtdcRspInvestorAccountField_Fee_set)
    __swig_setmethods__["FrozenMargin"] = _pyctp.CQdpFtdcRspInvestorAccountField_FrozenMargin_set
    __swig_getmethods__["FrozenMargin"] = _pyctp.CQdpFtdcRspInvestorAccountField_FrozenMargin_get
    if _newclass:
        FrozenMargin = _swig_property(_pyctp.CQdpFtdcRspInvestorAccountField_FrozenMargin_get, _pyctp.CQdpFtdcRspInvestorAccountField_FrozenMargin_set)
    __swig_setmethods__["FrozenPremium"] = _pyctp.CQdpFtdcRspInvestorAccountField_FrozenPremium_set
    __swig_getmethods__["FrozenPremium"] = _pyctp.CQdpFtdcRspInvestorAccountField_FrozenPremium_get
    if _newclass:
        FrozenPremium = _swig_property(_pyctp.CQdpFtdcRspInvestorAccountField_FrozenPremium_get, _pyctp.CQdpFtdcRspInvestorAccountField_FrozenPremium_set)
    __swig_setmethods__["FrozenFee"] = _pyctp.CQdpFtdcRspInvestorAccountField_FrozenFee_set
    __swig_getmethods__["FrozenFee"] = _pyctp.CQdpFtdcRspInvestorAccountField_FrozenFee_get
    if _newclass:
        FrozenFee = _swig_property(_pyctp.CQdpFtdcRspInvestorAccountField_FrozenFee_get, _pyctp.CQdpFtdcRspInvestorAccountField_FrozenFee_set)
    __swig_setmethods__["CloseProfit"] = _pyctp.CQdpFtdcRspInvestorAccountField_CloseProfit_set
    __swig_getmethods__["CloseProfit"] = _pyctp.CQdpFtdcRspInvestorAccountField_CloseProfit_get
    if _newclass:
        CloseProfit = _swig_property(_pyctp.CQdpFtdcRspInvestorAccountField_CloseProfit_get, _pyctp.CQdpFtdcRspInvestorAccountField_CloseProfit_set)
    __swig_setmethods__["PositionProfit"] = _pyctp.CQdpFtdcRspInvestorAccountField_PositionProfit_set
    __swig_getmethods__["PositionProfit"] = _pyctp.CQdpFtdcRspInvestorAccountField_PositionProfit_get
    if _newclass:
        PositionProfit = _swig_property(_pyctp.CQdpFtdcRspInvestorAccountField_PositionProfit_get, _pyctp.CQdpFtdcRspInvestorAccountField_PositionProfit_set)
    __swig_setmethods__["Available"] = _pyctp.CQdpFtdcRspInvestorAccountField_Available_set
    __swig_getmethods__["Available"] = _pyctp.CQdpFtdcRspInvestorAccountField_Available_get
    if _newclass:
        Available = _swig_property(_pyctp.CQdpFtdcRspInvestorAccountField_Available_get, _pyctp.CQdpFtdcRspInvestorAccountField_Available_set)
    __swig_setmethods__["Balance"] = _pyctp.CQdpFtdcRspInvestorAccountField_Balance_set
    __swig_getmethods__["Balance"] = _pyctp.CQdpFtdcRspInvestorAccountField_Balance_get
    if _newclass:
        Balance = _swig_property(_pyctp.CQdpFtdcRspInvestorAccountField_Balance_get, _pyctp.CQdpFtdcRspInvestorAccountField_Balance_set)
    __swig_setmethods__["LongMargin"] = _pyctp.CQdpFtdcRspInvestorAccountField_LongMargin_set
    __swig_getmethods__["LongMargin"] = _pyctp.CQdpFtdcRspInvestorAccountField_LongMargin_get
    if _newclass:
        LongMargin = _swig_property(_pyctp.CQdpFtdcRspInvestorAccountField_LongMargin_get, _pyctp.CQdpFtdcRspInvestorAccountField_LongMargin_set)
    __swig_setmethods__["ShortMargin"] = _pyctp.CQdpFtdcRspInvestorAccountField_ShortMargin_set
    __swig_getmethods__["ShortMargin"] = _pyctp.CQdpFtdcRspInvestorAccountField_ShortMargin_get
    if _newclass:
        ShortMargin = _swig_property(_pyctp.CQdpFtdcRspInvestorAccountField_ShortMargin_get, _pyctp.CQdpFtdcRspInvestorAccountField_ShortMargin_set)
    __swig_setmethods__["LongFrozenMargin"] = _pyctp.CQdpFtdcRspInvestorAccountField_LongFrozenMargin_set
    __swig_getmethods__["LongFrozenMargin"] = _pyctp.CQdpFtdcRspInvestorAccountField_LongFrozenMargin_get
    if _newclass:
        LongFrozenMargin = _swig_property(_pyctp.CQdpFtdcRspInvestorAccountField_LongFrozenMargin_get, _pyctp.CQdpFtdcRspInvestorAccountField_LongFrozenMargin_set)
    __swig_setmethods__["ShortFrozenMargin"] = _pyctp.CQdpFtdcRspInvestorAccountField_ShortFrozenMargin_set
    __swig_getmethods__["ShortFrozenMargin"] = _pyctp.CQdpFtdcRspInvestorAccountField_ShortFrozenMargin_get
    if _newclass:
        ShortFrozenMargin = _swig_property(_pyctp.CQdpFtdcRspInvestorAccountField_ShortFrozenMargin_get, _pyctp.CQdpFtdcRspInvestorAccountField_ShortFrozenMargin_set)
    __swig_setmethods__["DynamicRights"] = _pyctp.CQdpFtdcRspInvestorAccountField_DynamicRights_set
    __swig_getmethods__["DynamicRights"] = _pyctp.CQdpFtdcRspInvestorAccountField_DynamicRights_get
    if _newclass:
        DynamicRights = _swig_property(_pyctp.CQdpFtdcRspInvestorAccountField_DynamicRights_get, _pyctp.CQdpFtdcRspInvestorAccountField_DynamicRights_set)
    __swig_setmethods__["Risk"] = _pyctp.CQdpFtdcRspInvestorAccountField_Risk_set
    __swig_getmethods__["Risk"] = _pyctp.CQdpFtdcRspInvestorAccountField_Risk_get
    if _newclass:
        Risk = _swig_property(_pyctp.CQdpFtdcRspInvestorAccountField_Risk_get, _pyctp.CQdpFtdcRspInvestorAccountField_Risk_set)
    __swig_setmethods__["OtherFee"] = _pyctp.CQdpFtdcRspInvestorAccountField_OtherFee_set
    __swig_getmethods__["OtherFee"] = _pyctp.CQdpFtdcRspInvestorAccountField_OtherFee_get
    if _newclass:
        OtherFee = _swig_property(_pyctp.CQdpFtdcRspInvestorAccountField_OtherFee_get, _pyctp.CQdpFtdcRspInvestorAccountField_OtherFee_set)
    __swig_setmethods__["Mortgage"] = _pyctp.CQdpFtdcRspInvestorAccountField_Mortgage_set
    __swig_getmethods__["Mortgage"] = _pyctp.CQdpFtdcRspInvestorAccountField_Mortgage_get
    if _newclass:
        Mortgage = _swig_property(_pyctp.CQdpFtdcRspInvestorAccountField_Mortgage_get, _pyctp.CQdpFtdcRspInvestorAccountField_Mortgage_set)
    __swig_setmethods__["Currency"] = _pyctp.CQdpFtdcRspInvestorAccountField_Currency_set
    __swig_getmethods__["Currency"] = _pyctp.CQdpFtdcRspInvestorAccountField_Currency_get
    if _newclass:
        Currency = _swig_property(_pyctp.CQdpFtdcRspInvestorAccountField_Currency_get, _pyctp.CQdpFtdcRspInvestorAccountField_Currency_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcRspInvestorAccountField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcRspInvestorAccountField
    __del__ = lambda self: None
CQdpFtdcRspInvestorAccountField_swigregister = _pyctp.CQdpFtdcRspInvestorAccountField_swigregister
CQdpFtdcRspInvestorAccountField_swigregister(CQdpFtdcRspInvestorAccountField)

class CQdpFtdcQryUserInvestorField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcQryUserInvestorField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcQryUserInvestorField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CQdpFtdcQryUserInvestorField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CQdpFtdcQryUserInvestorField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CQdpFtdcQryUserInvestorField_BrokerID_get, _pyctp.CQdpFtdcQryUserInvestorField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CQdpFtdcQryUserInvestorField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CQdpFtdcQryUserInvestorField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CQdpFtdcQryUserInvestorField_UserID_get, _pyctp.CQdpFtdcQryUserInvestorField_UserID_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcQryUserInvestorField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcQryUserInvestorField
    __del__ = lambda self: None
CQdpFtdcQryUserInvestorField_swigregister = _pyctp.CQdpFtdcQryUserInvestorField_swigregister
CQdpFtdcQryUserInvestorField_swigregister(CQdpFtdcQryUserInvestorField)

class CQdpFtdcRspUserInvestorField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcRspUserInvestorField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcRspUserInvestorField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CQdpFtdcRspUserInvestorField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CQdpFtdcRspUserInvestorField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CQdpFtdcRspUserInvestorField_BrokerID_get, _pyctp.CQdpFtdcRspUserInvestorField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CQdpFtdcRspUserInvestorField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CQdpFtdcRspUserInvestorField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CQdpFtdcRspUserInvestorField_UserID_get, _pyctp.CQdpFtdcRspUserInvestorField_UserID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CQdpFtdcRspUserInvestorField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CQdpFtdcRspUserInvestorField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CQdpFtdcRspUserInvestorField_InvestorID_get, _pyctp.CQdpFtdcRspUserInvestorField_InvestorID_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcRspUserInvestorField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcRspUserInvestorField
    __del__ = lambda self: None
CQdpFtdcRspUserInvestorField_swigregister = _pyctp.CQdpFtdcRspUserInvestorField_swigregister
CQdpFtdcRspUserInvestorField_swigregister(CQdpFtdcRspUserInvestorField)

class CQdpFtdcQryTradingCodeField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcQryTradingCodeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcQryTradingCodeField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CQdpFtdcQryTradingCodeField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CQdpFtdcQryTradingCodeField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CQdpFtdcQryTradingCodeField_BrokerID_get, _pyctp.CQdpFtdcQryTradingCodeField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CQdpFtdcQryTradingCodeField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CQdpFtdcQryTradingCodeField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CQdpFtdcQryTradingCodeField_UserID_get, _pyctp.CQdpFtdcQryTradingCodeField_UserID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CQdpFtdcQryTradingCodeField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CQdpFtdcQryTradingCodeField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CQdpFtdcQryTradingCodeField_InvestorID_get, _pyctp.CQdpFtdcQryTradingCodeField_InvestorID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CQdpFtdcQryTradingCodeField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CQdpFtdcQryTradingCodeField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CQdpFtdcQryTradingCodeField_ExchangeID_get, _pyctp.CQdpFtdcQryTradingCodeField_ExchangeID_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcQryTradingCodeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcQryTradingCodeField
    __del__ = lambda self: None
CQdpFtdcQryTradingCodeField_swigregister = _pyctp.CQdpFtdcQryTradingCodeField_swigregister
CQdpFtdcQryTradingCodeField_swigregister(CQdpFtdcQryTradingCodeField)

class CQdpFtdcRspTradingCodeField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcRspTradingCodeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcRspTradingCodeField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CQdpFtdcRspTradingCodeField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CQdpFtdcRspTradingCodeField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CQdpFtdcRspTradingCodeField_BrokerID_get, _pyctp.CQdpFtdcRspTradingCodeField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CQdpFtdcRspTradingCodeField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CQdpFtdcRspTradingCodeField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CQdpFtdcRspTradingCodeField_InvestorID_get, _pyctp.CQdpFtdcRspTradingCodeField_InvestorID_set)
    __swig_setmethods__["AccountID"] = _pyctp.CQdpFtdcRspTradingCodeField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CQdpFtdcRspTradingCodeField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CQdpFtdcRspTradingCodeField_AccountID_get, _pyctp.CQdpFtdcRspTradingCodeField_AccountID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CQdpFtdcRspTradingCodeField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CQdpFtdcRspTradingCodeField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CQdpFtdcRspTradingCodeField_ExchangeID_get, _pyctp.CQdpFtdcRspTradingCodeField_ExchangeID_set)
    __swig_setmethods__["ParticipantID"] = _pyctp.CQdpFtdcRspTradingCodeField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CQdpFtdcRspTradingCodeField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CQdpFtdcRspTradingCodeField_ParticipantID_get, _pyctp.CQdpFtdcRspTradingCodeField_ParticipantID_set)
    __swig_setmethods__["ClientID"] = _pyctp.CQdpFtdcRspTradingCodeField_ClientID_set
    __swig_getmethods__["ClientID"] = _pyctp.CQdpFtdcRspTradingCodeField_ClientID_get
    if _newclass:
        ClientID = _swig_property(_pyctp.CQdpFtdcRspTradingCodeField_ClientID_get, _pyctp.CQdpFtdcRspTradingCodeField_ClientID_set)
    __swig_setmethods__["ClientRight"] = _pyctp.CQdpFtdcRspTradingCodeField_ClientRight_set
    __swig_getmethods__["ClientRight"] = _pyctp.CQdpFtdcRspTradingCodeField_ClientRight_get
    if _newclass:
        ClientRight = _swig_property(_pyctp.CQdpFtdcRspTradingCodeField_ClientRight_get, _pyctp.CQdpFtdcRspTradingCodeField_ClientRight_set)
    __swig_setmethods__["ClientType"] = _pyctp.CQdpFtdcRspTradingCodeField_ClientType_set
    __swig_getmethods__["ClientType"] = _pyctp.CQdpFtdcRspTradingCodeField_ClientType_get
    if _newclass:
        ClientType = _swig_property(_pyctp.CQdpFtdcRspTradingCodeField_ClientType_get, _pyctp.CQdpFtdcRspTradingCodeField_ClientType_set)
    __swig_setmethods__["ClientHedgeFlag"] = _pyctp.CQdpFtdcRspTradingCodeField_ClientHedgeFlag_set
    __swig_getmethods__["ClientHedgeFlag"] = _pyctp.CQdpFtdcRspTradingCodeField_ClientHedgeFlag_get
    if _newclass:
        ClientHedgeFlag = _swig_property(_pyctp.CQdpFtdcRspTradingCodeField_ClientHedgeFlag_get, _pyctp.CQdpFtdcRspTradingCodeField_ClientHedgeFlag_set)
    __swig_setmethods__["IsActive"] = _pyctp.CQdpFtdcRspTradingCodeField_IsActive_set
    __swig_getmethods__["IsActive"] = _pyctp.CQdpFtdcRspTradingCodeField_IsActive_get
    if _newclass:
        IsActive = _swig_property(_pyctp.CQdpFtdcRspTradingCodeField_IsActive_get, _pyctp.CQdpFtdcRspTradingCodeField_IsActive_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcRspTradingCodeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcRspTradingCodeField
    __del__ = lambda self: None
CQdpFtdcRspTradingCodeField_swigregister = _pyctp.CQdpFtdcRspTradingCodeField_swigregister
CQdpFtdcRspTradingCodeField_swigregister(CQdpFtdcRspTradingCodeField)

class CQdpFtdcQryExchangeField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcQryExchangeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcQryExchangeField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ExchangeID"] = _pyctp.CQdpFtdcQryExchangeField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CQdpFtdcQryExchangeField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CQdpFtdcQryExchangeField_ExchangeID_get, _pyctp.CQdpFtdcQryExchangeField_ExchangeID_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcQryExchangeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcQryExchangeField
    __del__ = lambda self: None
CQdpFtdcQryExchangeField_swigregister = _pyctp.CQdpFtdcQryExchangeField_swigregister
CQdpFtdcQryExchangeField_swigregister(CQdpFtdcQryExchangeField)

class CQdpFtdcRspExchangeField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcRspExchangeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcRspExchangeField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradingDay"] = _pyctp.CQdpFtdcRspExchangeField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CQdpFtdcRspExchangeField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CQdpFtdcRspExchangeField_TradingDay_get, _pyctp.CQdpFtdcRspExchangeField_TradingDay_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CQdpFtdcRspExchangeField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CQdpFtdcRspExchangeField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CQdpFtdcRspExchangeField_ExchangeID_get, _pyctp.CQdpFtdcRspExchangeField_ExchangeID_set)
    __swig_setmethods__["ExchangeName"] = _pyctp.CQdpFtdcRspExchangeField_ExchangeName_set
    __swig_getmethods__["ExchangeName"] = _pyctp.CQdpFtdcRspExchangeField_ExchangeName_get
    if _newclass:
        ExchangeName = _swig_property(_pyctp.CQdpFtdcRspExchangeField_ExchangeName_get, _pyctp.CQdpFtdcRspExchangeField_ExchangeName_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcRspExchangeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcRspExchangeField
    __del__ = lambda self: None
CQdpFtdcRspExchangeField_swigregister = _pyctp.CQdpFtdcRspExchangeField_swigregister
CQdpFtdcRspExchangeField_swigregister(CQdpFtdcRspExchangeField)

class CQdpFtdcQryInvestorPositionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcQryInvestorPositionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcQryInvestorPositionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CQdpFtdcQryInvestorPositionField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CQdpFtdcQryInvestorPositionField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CQdpFtdcQryInvestorPositionField_BrokerID_get, _pyctp.CQdpFtdcQryInvestorPositionField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CQdpFtdcQryInvestorPositionField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CQdpFtdcQryInvestorPositionField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CQdpFtdcQryInvestorPositionField_UserID_get, _pyctp.CQdpFtdcQryInvestorPositionField_UserID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CQdpFtdcQryInvestorPositionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CQdpFtdcQryInvestorPositionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CQdpFtdcQryInvestorPositionField_ExchangeID_get, _pyctp.CQdpFtdcQryInvestorPositionField_ExchangeID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CQdpFtdcQryInvestorPositionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CQdpFtdcQryInvestorPositionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CQdpFtdcQryInvestorPositionField_InvestorID_get, _pyctp.CQdpFtdcQryInvestorPositionField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CQdpFtdcQryInvestorPositionField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CQdpFtdcQryInvestorPositionField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CQdpFtdcQryInvestorPositionField_InstrumentID_get, _pyctp.CQdpFtdcQryInvestorPositionField_InstrumentID_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcQryInvestorPositionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcQryInvestorPositionField
    __del__ = lambda self: None
CQdpFtdcQryInvestorPositionField_swigregister = _pyctp.CQdpFtdcQryInvestorPositionField_swigregister
CQdpFtdcQryInvestorPositionField_swigregister(CQdpFtdcQryInvestorPositionField)

class CQdpFtdcRspInvestorPositionField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcRspInvestorPositionField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcRspInvestorPositionField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CQdpFtdcRspInvestorPositionField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CQdpFtdcRspInvestorPositionField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CQdpFtdcRspInvestorPositionField_BrokerID_get, _pyctp.CQdpFtdcRspInvestorPositionField_BrokerID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CQdpFtdcRspInvestorPositionField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CQdpFtdcRspInvestorPositionField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CQdpFtdcRspInvestorPositionField_ExchangeID_get, _pyctp.CQdpFtdcRspInvestorPositionField_ExchangeID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CQdpFtdcRspInvestorPositionField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CQdpFtdcRspInvestorPositionField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CQdpFtdcRspInvestorPositionField_InvestorID_get, _pyctp.CQdpFtdcRspInvestorPositionField_InvestorID_set)
    __swig_setmethods__["ParticipantID"] = _pyctp.CQdpFtdcRspInvestorPositionField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CQdpFtdcRspInvestorPositionField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CQdpFtdcRspInvestorPositionField_ParticipantID_get, _pyctp.CQdpFtdcRspInvestorPositionField_ParticipantID_set)
    __swig_setmethods__["ClientID"] = _pyctp.CQdpFtdcRspInvestorPositionField_ClientID_set
    __swig_getmethods__["ClientID"] = _pyctp.CQdpFtdcRspInvestorPositionField_ClientID_get
    if _newclass:
        ClientID = _swig_property(_pyctp.CQdpFtdcRspInvestorPositionField_ClientID_get, _pyctp.CQdpFtdcRspInvestorPositionField_ClientID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CQdpFtdcRspInvestorPositionField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CQdpFtdcRspInvestorPositionField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CQdpFtdcRspInvestorPositionField_InstrumentID_get, _pyctp.CQdpFtdcRspInvestorPositionField_InstrumentID_set)
    __swig_setmethods__["Direction"] = _pyctp.CQdpFtdcRspInvestorPositionField_Direction_set
    __swig_getmethods__["Direction"] = _pyctp.CQdpFtdcRspInvestorPositionField_Direction_get
    if _newclass:
        Direction = _swig_property(_pyctp.CQdpFtdcRspInvestorPositionField_Direction_get, _pyctp.CQdpFtdcRspInvestorPositionField_Direction_set)
    __swig_setmethods__["HedgeFlag"] = _pyctp.CQdpFtdcRspInvestorPositionField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _pyctp.CQdpFtdcRspInvestorPositionField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_pyctp.CQdpFtdcRspInvestorPositionField_HedgeFlag_get, _pyctp.CQdpFtdcRspInvestorPositionField_HedgeFlag_set)
    __swig_setmethods__["UsedMargin"] = _pyctp.CQdpFtdcRspInvestorPositionField_UsedMargin_set
    __swig_getmethods__["UsedMargin"] = _pyctp.CQdpFtdcRspInvestorPositionField_UsedMargin_get
    if _newclass:
        UsedMargin = _swig_property(_pyctp.CQdpFtdcRspInvestorPositionField_UsedMargin_get, _pyctp.CQdpFtdcRspInvestorPositionField_UsedMargin_set)
    __swig_setmethods__["Position"] = _pyctp.CQdpFtdcRspInvestorPositionField_Position_set
    __swig_getmethods__["Position"] = _pyctp.CQdpFtdcRspInvestorPositionField_Position_get
    if _newclass:
        Position = _swig_property(_pyctp.CQdpFtdcRspInvestorPositionField_Position_get, _pyctp.CQdpFtdcRspInvestorPositionField_Position_set)
    __swig_setmethods__["PositionCost"] = _pyctp.CQdpFtdcRspInvestorPositionField_PositionCost_set
    __swig_getmethods__["PositionCost"] = _pyctp.CQdpFtdcRspInvestorPositionField_PositionCost_get
    if _newclass:
        PositionCost = _swig_property(_pyctp.CQdpFtdcRspInvestorPositionField_PositionCost_get, _pyctp.CQdpFtdcRspInvestorPositionField_PositionCost_set)
    __swig_setmethods__["YdPosition"] = _pyctp.CQdpFtdcRspInvestorPositionField_YdPosition_set
    __swig_getmethods__["YdPosition"] = _pyctp.CQdpFtdcRspInvestorPositionField_YdPosition_get
    if _newclass:
        YdPosition = _swig_property(_pyctp.CQdpFtdcRspInvestorPositionField_YdPosition_get, _pyctp.CQdpFtdcRspInvestorPositionField_YdPosition_set)
    __swig_setmethods__["YdPositionCost"] = _pyctp.CQdpFtdcRspInvestorPositionField_YdPositionCost_set
    __swig_getmethods__["YdPositionCost"] = _pyctp.CQdpFtdcRspInvestorPositionField_YdPositionCost_get
    if _newclass:
        YdPositionCost = _swig_property(_pyctp.CQdpFtdcRspInvestorPositionField_YdPositionCost_get, _pyctp.CQdpFtdcRspInvestorPositionField_YdPositionCost_set)
    __swig_setmethods__["FrozenMargin"] = _pyctp.CQdpFtdcRspInvestorPositionField_FrozenMargin_set
    __swig_getmethods__["FrozenMargin"] = _pyctp.CQdpFtdcRspInvestorPositionField_FrozenMargin_get
    if _newclass:
        FrozenMargin = _swig_property(_pyctp.CQdpFtdcRspInvestorPositionField_FrozenMargin_get, _pyctp.CQdpFtdcRspInvestorPositionField_FrozenMargin_set)
    __swig_setmethods__["FrozenPosition"] = _pyctp.CQdpFtdcRspInvestorPositionField_FrozenPosition_set
    __swig_getmethods__["FrozenPosition"] = _pyctp.CQdpFtdcRspInvestorPositionField_FrozenPosition_get
    if _newclass:
        FrozenPosition = _swig_property(_pyctp.CQdpFtdcRspInvestorPositionField_FrozenPosition_get, _pyctp.CQdpFtdcRspInvestorPositionField_FrozenPosition_set)
    __swig_setmethods__["FrozenClosing"] = _pyctp.CQdpFtdcRspInvestorPositionField_FrozenClosing_set
    __swig_getmethods__["FrozenClosing"] = _pyctp.CQdpFtdcRspInvestorPositionField_FrozenClosing_get
    if _newclass:
        FrozenClosing = _swig_property(_pyctp.CQdpFtdcRspInvestorPositionField_FrozenClosing_get, _pyctp.CQdpFtdcRspInvestorPositionField_FrozenClosing_set)
    __swig_setmethods__["FrozenPremium"] = _pyctp.CQdpFtdcRspInvestorPositionField_FrozenPremium_set
    __swig_getmethods__["FrozenPremium"] = _pyctp.CQdpFtdcRspInvestorPositionField_FrozenPremium_get
    if _newclass:
        FrozenPremium = _swig_property(_pyctp.CQdpFtdcRspInvestorPositionField_FrozenPremium_get, _pyctp.CQdpFtdcRspInvestorPositionField_FrozenPremium_set)
    __swig_setmethods__["LastTradeID"] = _pyctp.CQdpFtdcRspInvestorPositionField_LastTradeID_set
    __swig_getmethods__["LastTradeID"] = _pyctp.CQdpFtdcRspInvestorPositionField_LastTradeID_get
    if _newclass:
        LastTradeID = _swig_property(_pyctp.CQdpFtdcRspInvestorPositionField_LastTradeID_get, _pyctp.CQdpFtdcRspInvestorPositionField_LastTradeID_set)
    __swig_setmethods__["LastOrderLocalID"] = _pyctp.CQdpFtdcRspInvestorPositionField_LastOrderLocalID_set
    __swig_getmethods__["LastOrderLocalID"] = _pyctp.CQdpFtdcRspInvestorPositionField_LastOrderLocalID_get
    if _newclass:
        LastOrderLocalID = _swig_property(_pyctp.CQdpFtdcRspInvestorPositionField_LastOrderLocalID_get, _pyctp.CQdpFtdcRspInvestorPositionField_LastOrderLocalID_set)
    __swig_setmethods__["Currency"] = _pyctp.CQdpFtdcRspInvestorPositionField_Currency_set
    __swig_getmethods__["Currency"] = _pyctp.CQdpFtdcRspInvestorPositionField_Currency_get
    if _newclass:
        Currency = _swig_property(_pyctp.CQdpFtdcRspInvestorPositionField_Currency_get, _pyctp.CQdpFtdcRspInvestorPositionField_Currency_set)
    __swig_setmethods__["PositionProfit"] = _pyctp.CQdpFtdcRspInvestorPositionField_PositionProfit_set
    __swig_getmethods__["PositionProfit"] = _pyctp.CQdpFtdcRspInvestorPositionField_PositionProfit_get
    if _newclass:
        PositionProfit = _swig_property(_pyctp.CQdpFtdcRspInvestorPositionField_PositionProfit_get, _pyctp.CQdpFtdcRspInvestorPositionField_PositionProfit_set)
    __swig_setmethods__["TodayPosition"] = _pyctp.CQdpFtdcRspInvestorPositionField_TodayPosition_set
    __swig_getmethods__["TodayPosition"] = _pyctp.CQdpFtdcRspInvestorPositionField_TodayPosition_get
    if _newclass:
        TodayPosition = _swig_property(_pyctp.CQdpFtdcRspInvestorPositionField_TodayPosition_get, _pyctp.CQdpFtdcRspInvestorPositionField_TodayPosition_set)
    __swig_setmethods__["FrozenTodayClosing"] = _pyctp.CQdpFtdcRspInvestorPositionField_FrozenTodayClosing_set
    __swig_getmethods__["FrozenTodayClosing"] = _pyctp.CQdpFtdcRspInvestorPositionField_FrozenTodayClosing_get
    if _newclass:
        FrozenTodayClosing = _swig_property(_pyctp.CQdpFtdcRspInvestorPositionField_FrozenTodayClosing_get, _pyctp.CQdpFtdcRspInvestorPositionField_FrozenTodayClosing_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcRspInvestorPositionField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcRspInvestorPositionField
    __del__ = lambda self: None
CQdpFtdcRspInvestorPositionField_swigregister = _pyctp.CQdpFtdcRspInvestorPositionField_swigregister
CQdpFtdcRspInvestorPositionField_swigregister(CQdpFtdcRspInvestorPositionField)

class CQdpFtdcQryUserField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcQryUserField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcQryUserField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["StartUserID"] = _pyctp.CQdpFtdcQryUserField_StartUserID_set
    __swig_getmethods__["StartUserID"] = _pyctp.CQdpFtdcQryUserField_StartUserID_get
    if _newclass:
        StartUserID = _swig_property(_pyctp.CQdpFtdcQryUserField_StartUserID_get, _pyctp.CQdpFtdcQryUserField_StartUserID_set)
    __swig_setmethods__["EndUserID"] = _pyctp.CQdpFtdcQryUserField_EndUserID_set
    __swig_getmethods__["EndUserID"] = _pyctp.CQdpFtdcQryUserField_EndUserID_get
    if _newclass:
        EndUserID = _swig_property(_pyctp.CQdpFtdcQryUserField_EndUserID_get, _pyctp.CQdpFtdcQryUserField_EndUserID_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcQryUserField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcQryUserField
    __del__ = lambda self: None
CQdpFtdcQryUserField_swigregister = _pyctp.CQdpFtdcQryUserField_swigregister
CQdpFtdcQryUserField_swigregister(CQdpFtdcQryUserField)

class CQdpFtdcUserField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcUserField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcUserField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CQdpFtdcUserField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CQdpFtdcUserField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CQdpFtdcUserField_BrokerID_get, _pyctp.CQdpFtdcUserField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CQdpFtdcUserField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CQdpFtdcUserField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CQdpFtdcUserField_UserID_get, _pyctp.CQdpFtdcUserField_UserID_set)
    __swig_setmethods__["Password"] = _pyctp.CQdpFtdcUserField_Password_set
    __swig_getmethods__["Password"] = _pyctp.CQdpFtdcUserField_Password_get
    if _newclass:
        Password = _swig_property(_pyctp.CQdpFtdcUserField_Password_get, _pyctp.CQdpFtdcUserField_Password_set)
    __swig_setmethods__["IsActive"] = _pyctp.CQdpFtdcUserField_IsActive_set
    __swig_getmethods__["IsActive"] = _pyctp.CQdpFtdcUserField_IsActive_get
    if _newclass:
        IsActive = _swig_property(_pyctp.CQdpFtdcUserField_IsActive_get, _pyctp.CQdpFtdcUserField_IsActive_set)
    __swig_setmethods__["UserName"] = _pyctp.CQdpFtdcUserField_UserName_set
    __swig_getmethods__["UserName"] = _pyctp.CQdpFtdcUserField_UserName_get
    if _newclass:
        UserName = _swig_property(_pyctp.CQdpFtdcUserField_UserName_get, _pyctp.CQdpFtdcUserField_UserName_set)
    __swig_setmethods__["UserType"] = _pyctp.CQdpFtdcUserField_UserType_set
    __swig_getmethods__["UserType"] = _pyctp.CQdpFtdcUserField_UserType_get
    if _newclass:
        UserType = _swig_property(_pyctp.CQdpFtdcUserField_UserType_get, _pyctp.CQdpFtdcUserField_UserType_set)
    __swig_setmethods__["Department"] = _pyctp.CQdpFtdcUserField_Department_set
    __swig_getmethods__["Department"] = _pyctp.CQdpFtdcUserField_Department_get
    if _newclass:
        Department = _swig_property(_pyctp.CQdpFtdcUserField_Department_get, _pyctp.CQdpFtdcUserField_Department_set)
    __swig_setmethods__["GrantFuncSet"] = _pyctp.CQdpFtdcUserField_GrantFuncSet_set
    __swig_getmethods__["GrantFuncSet"] = _pyctp.CQdpFtdcUserField_GrantFuncSet_get
    if _newclass:
        GrantFuncSet = _swig_property(_pyctp.CQdpFtdcUserField_GrantFuncSet_get, _pyctp.CQdpFtdcUserField_GrantFuncSet_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcUserField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcUserField
    __del__ = lambda self: None
CQdpFtdcUserField_swigregister = _pyctp.CQdpFtdcUserField_swigregister
CQdpFtdcUserField_swigregister(CQdpFtdcUserField)

class CQdpFtdcQryInvestorFeeField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcQryInvestorFeeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcQryInvestorFeeField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CQdpFtdcQryInvestorFeeField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CQdpFtdcQryInvestorFeeField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CQdpFtdcQryInvestorFeeField_BrokerID_get, _pyctp.CQdpFtdcQryInvestorFeeField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CQdpFtdcQryInvestorFeeField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CQdpFtdcQryInvestorFeeField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CQdpFtdcQryInvestorFeeField_UserID_get, _pyctp.CQdpFtdcQryInvestorFeeField_UserID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CQdpFtdcQryInvestorFeeField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CQdpFtdcQryInvestorFeeField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CQdpFtdcQryInvestorFeeField_InvestorID_get, _pyctp.CQdpFtdcQryInvestorFeeField_InvestorID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CQdpFtdcQryInvestorFeeField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CQdpFtdcQryInvestorFeeField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CQdpFtdcQryInvestorFeeField_ExchangeID_get, _pyctp.CQdpFtdcQryInvestorFeeField_ExchangeID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CQdpFtdcQryInvestorFeeField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CQdpFtdcQryInvestorFeeField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CQdpFtdcQryInvestorFeeField_InstrumentID_get, _pyctp.CQdpFtdcQryInvestorFeeField_InstrumentID_set)
    __swig_setmethods__["HedgeFlag"] = _pyctp.CQdpFtdcQryInvestorFeeField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _pyctp.CQdpFtdcQryInvestorFeeField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_pyctp.CQdpFtdcQryInvestorFeeField_HedgeFlag_get, _pyctp.CQdpFtdcQryInvestorFeeField_HedgeFlag_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcQryInvestorFeeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcQryInvestorFeeField
    __del__ = lambda self: None
CQdpFtdcQryInvestorFeeField_swigregister = _pyctp.CQdpFtdcQryInvestorFeeField_swigregister
CQdpFtdcQryInvestorFeeField_swigregister(CQdpFtdcQryInvestorFeeField)

class CQdpFtdcInvestorFeeField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcInvestorFeeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcInvestorFeeField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CQdpFtdcInvestorFeeField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CQdpFtdcInvestorFeeField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CQdpFtdcInvestorFeeField_BrokerID_get, _pyctp.CQdpFtdcInvestorFeeField_BrokerID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CQdpFtdcInvestorFeeField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CQdpFtdcInvestorFeeField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CQdpFtdcInvestorFeeField_ExchangeID_get, _pyctp.CQdpFtdcInvestorFeeField_ExchangeID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CQdpFtdcInvestorFeeField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CQdpFtdcInvestorFeeField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CQdpFtdcInvestorFeeField_InvestorID_get, _pyctp.CQdpFtdcInvestorFeeField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CQdpFtdcInvestorFeeField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CQdpFtdcInvestorFeeField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CQdpFtdcInvestorFeeField_InstrumentID_get, _pyctp.CQdpFtdcInvestorFeeField_InstrumentID_set)
    __swig_setmethods__["HedgeFlag"] = _pyctp.CQdpFtdcInvestorFeeField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _pyctp.CQdpFtdcInvestorFeeField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_pyctp.CQdpFtdcInvestorFeeField_HedgeFlag_get, _pyctp.CQdpFtdcInvestorFeeField_HedgeFlag_set)
    __swig_setmethods__["OpenFeeRate"] = _pyctp.CQdpFtdcInvestorFeeField_OpenFeeRate_set
    __swig_getmethods__["OpenFeeRate"] = _pyctp.CQdpFtdcInvestorFeeField_OpenFeeRate_get
    if _newclass:
        OpenFeeRate = _swig_property(_pyctp.CQdpFtdcInvestorFeeField_OpenFeeRate_get, _pyctp.CQdpFtdcInvestorFeeField_OpenFeeRate_set)
    __swig_setmethods__["OpenFeeAmt"] = _pyctp.CQdpFtdcInvestorFeeField_OpenFeeAmt_set
    __swig_getmethods__["OpenFeeAmt"] = _pyctp.CQdpFtdcInvestorFeeField_OpenFeeAmt_get
    if _newclass:
        OpenFeeAmt = _swig_property(_pyctp.CQdpFtdcInvestorFeeField_OpenFeeAmt_get, _pyctp.CQdpFtdcInvestorFeeField_OpenFeeAmt_set)
    __swig_setmethods__["OffsetFeeRate"] = _pyctp.CQdpFtdcInvestorFeeField_OffsetFeeRate_set
    __swig_getmethods__["OffsetFeeRate"] = _pyctp.CQdpFtdcInvestorFeeField_OffsetFeeRate_get
    if _newclass:
        OffsetFeeRate = _swig_property(_pyctp.CQdpFtdcInvestorFeeField_OffsetFeeRate_get, _pyctp.CQdpFtdcInvestorFeeField_OffsetFeeRate_set)
    __swig_setmethods__["OffsetFeeAmt"] = _pyctp.CQdpFtdcInvestorFeeField_OffsetFeeAmt_set
    __swig_getmethods__["OffsetFeeAmt"] = _pyctp.CQdpFtdcInvestorFeeField_OffsetFeeAmt_get
    if _newclass:
        OffsetFeeAmt = _swig_property(_pyctp.CQdpFtdcInvestorFeeField_OffsetFeeAmt_get, _pyctp.CQdpFtdcInvestorFeeField_OffsetFeeAmt_set)
    __swig_setmethods__["OTFeeRate"] = _pyctp.CQdpFtdcInvestorFeeField_OTFeeRate_set
    __swig_getmethods__["OTFeeRate"] = _pyctp.CQdpFtdcInvestorFeeField_OTFeeRate_get
    if _newclass:
        OTFeeRate = _swig_property(_pyctp.CQdpFtdcInvestorFeeField_OTFeeRate_get, _pyctp.CQdpFtdcInvestorFeeField_OTFeeRate_set)
    __swig_setmethods__["OTFeeAmt"] = _pyctp.CQdpFtdcInvestorFeeField_OTFeeAmt_set
    __swig_getmethods__["OTFeeAmt"] = _pyctp.CQdpFtdcInvestorFeeField_OTFeeAmt_get
    if _newclass:
        OTFeeAmt = _swig_property(_pyctp.CQdpFtdcInvestorFeeField_OTFeeAmt_get, _pyctp.CQdpFtdcInvestorFeeField_OTFeeAmt_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcInvestorFeeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcInvestorFeeField
    __del__ = lambda self: None
CQdpFtdcInvestorFeeField_swigregister = _pyctp.CQdpFtdcInvestorFeeField_swigregister
CQdpFtdcInvestorFeeField_swigregister(CQdpFtdcInvestorFeeField)

class CQdpFtdcQryInvestorMarginField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcQryInvestorMarginField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcQryInvestorMarginField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CQdpFtdcQryInvestorMarginField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CQdpFtdcQryInvestorMarginField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CQdpFtdcQryInvestorMarginField_BrokerID_get, _pyctp.CQdpFtdcQryInvestorMarginField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CQdpFtdcQryInvestorMarginField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CQdpFtdcQryInvestorMarginField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CQdpFtdcQryInvestorMarginField_UserID_get, _pyctp.CQdpFtdcQryInvestorMarginField_UserID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CQdpFtdcQryInvestorMarginField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CQdpFtdcQryInvestorMarginField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CQdpFtdcQryInvestorMarginField_InvestorID_get, _pyctp.CQdpFtdcQryInvestorMarginField_InvestorID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CQdpFtdcQryInvestorMarginField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CQdpFtdcQryInvestorMarginField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CQdpFtdcQryInvestorMarginField_ExchangeID_get, _pyctp.CQdpFtdcQryInvestorMarginField_ExchangeID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CQdpFtdcQryInvestorMarginField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CQdpFtdcQryInvestorMarginField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CQdpFtdcQryInvestorMarginField_InstrumentID_get, _pyctp.CQdpFtdcQryInvestorMarginField_InstrumentID_set)
    __swig_setmethods__["HedgeFlag"] = _pyctp.CQdpFtdcQryInvestorMarginField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _pyctp.CQdpFtdcQryInvestorMarginField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_pyctp.CQdpFtdcQryInvestorMarginField_HedgeFlag_get, _pyctp.CQdpFtdcQryInvestorMarginField_HedgeFlag_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcQryInvestorMarginField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcQryInvestorMarginField
    __del__ = lambda self: None
CQdpFtdcQryInvestorMarginField_swigregister = _pyctp.CQdpFtdcQryInvestorMarginField_swigregister
CQdpFtdcQryInvestorMarginField_swigregister(CQdpFtdcQryInvestorMarginField)

class CQdpFtdcInvestorMarginField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcInvestorMarginField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcInvestorMarginField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CQdpFtdcInvestorMarginField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CQdpFtdcInvestorMarginField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CQdpFtdcInvestorMarginField_BrokerID_get, _pyctp.CQdpFtdcInvestorMarginField_BrokerID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CQdpFtdcInvestorMarginField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CQdpFtdcInvestorMarginField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CQdpFtdcInvestorMarginField_ExchangeID_get, _pyctp.CQdpFtdcInvestorMarginField_ExchangeID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CQdpFtdcInvestorMarginField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CQdpFtdcInvestorMarginField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CQdpFtdcInvestorMarginField_InvestorID_get, _pyctp.CQdpFtdcInvestorMarginField_InvestorID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CQdpFtdcInvestorMarginField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CQdpFtdcInvestorMarginField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CQdpFtdcInvestorMarginField_InstrumentID_get, _pyctp.CQdpFtdcInvestorMarginField_InstrumentID_set)
    __swig_setmethods__["HedgeFlag"] = _pyctp.CQdpFtdcInvestorMarginField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _pyctp.CQdpFtdcInvestorMarginField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_pyctp.CQdpFtdcInvestorMarginField_HedgeFlag_get, _pyctp.CQdpFtdcInvestorMarginField_HedgeFlag_set)
    __swig_setmethods__["LongMarginRate"] = _pyctp.CQdpFtdcInvestorMarginField_LongMarginRate_set
    __swig_getmethods__["LongMarginRate"] = _pyctp.CQdpFtdcInvestorMarginField_LongMarginRate_get
    if _newclass:
        LongMarginRate = _swig_property(_pyctp.CQdpFtdcInvestorMarginField_LongMarginRate_get, _pyctp.CQdpFtdcInvestorMarginField_LongMarginRate_set)
    __swig_setmethods__["LongMarginAmt"] = _pyctp.CQdpFtdcInvestorMarginField_LongMarginAmt_set
    __swig_getmethods__["LongMarginAmt"] = _pyctp.CQdpFtdcInvestorMarginField_LongMarginAmt_get
    if _newclass:
        LongMarginAmt = _swig_property(_pyctp.CQdpFtdcInvestorMarginField_LongMarginAmt_get, _pyctp.CQdpFtdcInvestorMarginField_LongMarginAmt_set)
    __swig_setmethods__["ShortMarginRate"] = _pyctp.CQdpFtdcInvestorMarginField_ShortMarginRate_set
    __swig_getmethods__["ShortMarginRate"] = _pyctp.CQdpFtdcInvestorMarginField_ShortMarginRate_get
    if _newclass:
        ShortMarginRate = _swig_property(_pyctp.CQdpFtdcInvestorMarginField_ShortMarginRate_get, _pyctp.CQdpFtdcInvestorMarginField_ShortMarginRate_set)
    __swig_setmethods__["ShortMarginAmt"] = _pyctp.CQdpFtdcInvestorMarginField_ShortMarginAmt_set
    __swig_getmethods__["ShortMarginAmt"] = _pyctp.CQdpFtdcInvestorMarginField_ShortMarginAmt_get
    if _newclass:
        ShortMarginAmt = _swig_property(_pyctp.CQdpFtdcInvestorMarginField_ShortMarginAmt_get, _pyctp.CQdpFtdcInvestorMarginField_ShortMarginAmt_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcInvestorMarginField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcInvestorMarginField
    __del__ = lambda self: None
CQdpFtdcInvestorMarginField_swigregister = _pyctp.CQdpFtdcInvestorMarginField_swigregister
CQdpFtdcInvestorMarginField_swigregister(CQdpFtdcInvestorMarginField)

class CQdpFtdcQryExchangeDiffTimeField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcQryExchangeDiffTimeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcQryExchangeDiffTimeField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ExchangeID"] = _pyctp.CQdpFtdcQryExchangeDiffTimeField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CQdpFtdcQryExchangeDiffTimeField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CQdpFtdcQryExchangeDiffTimeField_ExchangeID_get, _pyctp.CQdpFtdcQryExchangeDiffTimeField_ExchangeID_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcQryExchangeDiffTimeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcQryExchangeDiffTimeField
    __del__ = lambda self: None
CQdpFtdcQryExchangeDiffTimeField_swigregister = _pyctp.CQdpFtdcQryExchangeDiffTimeField_swigregister
CQdpFtdcQryExchangeDiffTimeField_swigregister(CQdpFtdcQryExchangeDiffTimeField)

class CQdpFtdcRspExchangeDiffTimeField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcRspExchangeDiffTimeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcRspExchangeDiffTimeField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradingDay"] = _pyctp.CQdpFtdcRspExchangeDiffTimeField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CQdpFtdcRspExchangeDiffTimeField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CQdpFtdcRspExchangeDiffTimeField_TradingDay_get, _pyctp.CQdpFtdcRspExchangeDiffTimeField_TradingDay_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CQdpFtdcRspExchangeDiffTimeField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CQdpFtdcRspExchangeDiffTimeField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CQdpFtdcRspExchangeDiffTimeField_ExchangeID_get, _pyctp.CQdpFtdcRspExchangeDiffTimeField_ExchangeID_set)
    __swig_setmethods__["ExchangeTime"] = _pyctp.CQdpFtdcRspExchangeDiffTimeField_ExchangeTime_set
    __swig_getmethods__["ExchangeTime"] = _pyctp.CQdpFtdcRspExchangeDiffTimeField_ExchangeTime_get
    if _newclass:
        ExchangeTime = _swig_property(_pyctp.CQdpFtdcRspExchangeDiffTimeField_ExchangeTime_get, _pyctp.CQdpFtdcRspExchangeDiffTimeField_ExchangeTime_set)
    __swig_setmethods__["DiffSnd"] = _pyctp.CQdpFtdcRspExchangeDiffTimeField_DiffSnd_set
    __swig_getmethods__["DiffSnd"] = _pyctp.CQdpFtdcRspExchangeDiffTimeField_DiffSnd_get
    if _newclass:
        DiffSnd = _swig_property(_pyctp.CQdpFtdcRspExchangeDiffTimeField_DiffSnd_get, _pyctp.CQdpFtdcRspExchangeDiffTimeField_DiffSnd_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcRspExchangeDiffTimeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcRspExchangeDiffTimeField
    __del__ = lambda self: None
CQdpFtdcRspExchangeDiffTimeField_swigregister = _pyctp.CQdpFtdcRspExchangeDiffTimeField_swigregister
CQdpFtdcRspExchangeDiffTimeField_swigregister(CQdpFtdcRspExchangeDiffTimeField)

class CQdpFtdcQryContractBankField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcQryContractBankField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcQryContractBankField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CQdpFtdcQryContractBankField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CQdpFtdcQryContractBankField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CQdpFtdcQryContractBankField_BrokerID_get, _pyctp.CQdpFtdcQryContractBankField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CQdpFtdcQryContractBankField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CQdpFtdcQryContractBankField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CQdpFtdcQryContractBankField_UserID_get, _pyctp.CQdpFtdcQryContractBankField_UserID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CQdpFtdcQryContractBankField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CQdpFtdcQryContractBankField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CQdpFtdcQryContractBankField_InvestorID_get, _pyctp.CQdpFtdcQryContractBankField_InvestorID_set)
    __swig_setmethods__["Currency"] = _pyctp.CQdpFtdcQryContractBankField_Currency_set
    __swig_getmethods__["Currency"] = _pyctp.CQdpFtdcQryContractBankField_Currency_get
    if _newclass:
        Currency = _swig_property(_pyctp.CQdpFtdcQryContractBankField_Currency_get, _pyctp.CQdpFtdcQryContractBankField_Currency_set)
    __swig_setmethods__["BankID"] = _pyctp.CQdpFtdcQryContractBankField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CQdpFtdcQryContractBankField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CQdpFtdcQryContractBankField_BankID_get, _pyctp.CQdpFtdcQryContractBankField_BankID_set)
    __swig_setmethods__["BankBrchID"] = _pyctp.CQdpFtdcQryContractBankField_BankBrchID_set
    __swig_getmethods__["BankBrchID"] = _pyctp.CQdpFtdcQryContractBankField_BankBrchID_get
    if _newclass:
        BankBrchID = _swig_property(_pyctp.CQdpFtdcQryContractBankField_BankBrchID_get, _pyctp.CQdpFtdcQryContractBankField_BankBrchID_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcQryContractBankField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcQryContractBankField
    __del__ = lambda self: None
CQdpFtdcQryContractBankField_swigregister = _pyctp.CQdpFtdcQryContractBankField_swigregister
CQdpFtdcQryContractBankField_swigregister(CQdpFtdcQryContractBankField)

class CQdpFtdcContractBankField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcContractBankField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcContractBankField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CQdpFtdcContractBankField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CQdpFtdcContractBankField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CQdpFtdcContractBankField_BrokerID_get, _pyctp.CQdpFtdcContractBankField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CQdpFtdcContractBankField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CQdpFtdcContractBankField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CQdpFtdcContractBankField_InvestorID_get, _pyctp.CQdpFtdcContractBankField_InvestorID_set)
    __swig_setmethods__["AccountID"] = _pyctp.CQdpFtdcContractBankField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CQdpFtdcContractBankField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CQdpFtdcContractBankField_AccountID_get, _pyctp.CQdpFtdcContractBankField_AccountID_set)
    __swig_setmethods__["Currency"] = _pyctp.CQdpFtdcContractBankField_Currency_set
    __swig_getmethods__["Currency"] = _pyctp.CQdpFtdcContractBankField_Currency_get
    if _newclass:
        Currency = _swig_property(_pyctp.CQdpFtdcContractBankField_Currency_get, _pyctp.CQdpFtdcContractBankField_Currency_set)
    __swig_setmethods__["BankID"] = _pyctp.CQdpFtdcContractBankField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CQdpFtdcContractBankField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CQdpFtdcContractBankField_BankID_get, _pyctp.CQdpFtdcContractBankField_BankID_set)
    __swig_setmethods__["BankBrchID"] = _pyctp.CQdpFtdcContractBankField_BankBrchID_set
    __swig_getmethods__["BankBrchID"] = _pyctp.CQdpFtdcContractBankField_BankBrchID_get
    if _newclass:
        BankBrchID = _swig_property(_pyctp.CQdpFtdcContractBankField_BankBrchID_get, _pyctp.CQdpFtdcContractBankField_BankBrchID_set)
    __swig_setmethods__["BankName"] = _pyctp.CQdpFtdcContractBankField_BankName_set
    __swig_getmethods__["BankName"] = _pyctp.CQdpFtdcContractBankField_BankName_get
    if _newclass:
        BankName = _swig_property(_pyctp.CQdpFtdcContractBankField_BankName_get, _pyctp.CQdpFtdcContractBankField_BankName_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcContractBankField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcContractBankField
    __del__ = lambda self: None
CQdpFtdcContractBankField_swigregister = _pyctp.CQdpFtdcContractBankField_swigregister
CQdpFtdcContractBankField_swigregister(CQdpFtdcContractBankField)

class CQdpFtdcReqQueryAccountField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcReqQueryAccountField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcReqQueryAccountField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradeCode"] = _pyctp.CQdpFtdcReqQueryAccountField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CQdpFtdcReqQueryAccountField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CQdpFtdcReqQueryAccountField_TradeCode_get, _pyctp.CQdpFtdcReqQueryAccountField_TradeCode_set)
    __swig_setmethods__["BankID"] = _pyctp.CQdpFtdcReqQueryAccountField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CQdpFtdcReqQueryAccountField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CQdpFtdcReqQueryAccountField_BankID_get, _pyctp.CQdpFtdcReqQueryAccountField_BankID_set)
    __swig_setmethods__["BankBrchID"] = _pyctp.CQdpFtdcReqQueryAccountField_BankBrchID_set
    __swig_getmethods__["BankBrchID"] = _pyctp.CQdpFtdcReqQueryAccountField_BankBrchID_get
    if _newclass:
        BankBrchID = _swig_property(_pyctp.CQdpFtdcReqQueryAccountField_BankBrchID_get, _pyctp.CQdpFtdcReqQueryAccountField_BankBrchID_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CQdpFtdcReqQueryAccountField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CQdpFtdcReqQueryAccountField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CQdpFtdcReqQueryAccountField_BrokerID_get, _pyctp.CQdpFtdcReqQueryAccountField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CQdpFtdcReqQueryAccountField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CQdpFtdcReqQueryAccountField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CQdpFtdcReqQueryAccountField_BrokerBranchID_get, _pyctp.CQdpFtdcReqQueryAccountField_BrokerBranchID_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CQdpFtdcReqQueryAccountField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CQdpFtdcReqQueryAccountField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CQdpFtdcReqQueryAccountField_TradeDate_get, _pyctp.CQdpFtdcReqQueryAccountField_TradeDate_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CQdpFtdcReqQueryAccountField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CQdpFtdcReqQueryAccountField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CQdpFtdcReqQueryAccountField_TradeTime_get, _pyctp.CQdpFtdcReqQueryAccountField_TradeTime_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CQdpFtdcReqQueryAccountField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CQdpFtdcReqQueryAccountField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CQdpFtdcReqQueryAccountField_BankSerial_get, _pyctp.CQdpFtdcReqQueryAccountField_BankSerial_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CQdpFtdcReqQueryAccountField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CQdpFtdcReqQueryAccountField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CQdpFtdcReqQueryAccountField_TradingDay_get, _pyctp.CQdpFtdcReqQueryAccountField_TradingDay_set)
    __swig_setmethods__["PlateSerial"] = _pyctp.CQdpFtdcReqQueryAccountField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CQdpFtdcReqQueryAccountField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CQdpFtdcReqQueryAccountField_PlateSerial_get, _pyctp.CQdpFtdcReqQueryAccountField_PlateSerial_set)
    __swig_setmethods__["LastFragment"] = _pyctp.CQdpFtdcReqQueryAccountField_LastFragment_set
    __swig_getmethods__["LastFragment"] = _pyctp.CQdpFtdcReqQueryAccountField_LastFragment_get
    if _newclass:
        LastFragment = _swig_property(_pyctp.CQdpFtdcReqQueryAccountField_LastFragment_get, _pyctp.CQdpFtdcReqQueryAccountField_LastFragment_set)
    __swig_setmethods__["SessionID"] = _pyctp.CQdpFtdcReqQueryAccountField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CQdpFtdcReqQueryAccountField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CQdpFtdcReqQueryAccountField_SessionID_get, _pyctp.CQdpFtdcReqQueryAccountField_SessionID_set)
    __swig_setmethods__["CustomerName"] = _pyctp.CQdpFtdcReqQueryAccountField_CustomerName_set
    __swig_getmethods__["CustomerName"] = _pyctp.CQdpFtdcReqQueryAccountField_CustomerName_get
    if _newclass:
        CustomerName = _swig_property(_pyctp.CQdpFtdcReqQueryAccountField_CustomerName_get, _pyctp.CQdpFtdcReqQueryAccountField_CustomerName_set)
    __swig_setmethods__["IdCardType"] = _pyctp.CQdpFtdcReqQueryAccountField_IdCardType_set
    __swig_getmethods__["IdCardType"] = _pyctp.CQdpFtdcReqQueryAccountField_IdCardType_get
    if _newclass:
        IdCardType = _swig_property(_pyctp.CQdpFtdcReqQueryAccountField_IdCardType_get, _pyctp.CQdpFtdcReqQueryAccountField_IdCardType_set)
    __swig_setmethods__["IdentifiedCardNo"] = _pyctp.CQdpFtdcReqQueryAccountField_IdentifiedCardNo_set
    __swig_getmethods__["IdentifiedCardNo"] = _pyctp.CQdpFtdcReqQueryAccountField_IdentifiedCardNo_get
    if _newclass:
        IdentifiedCardNo = _swig_property(_pyctp.CQdpFtdcReqQueryAccountField_IdentifiedCardNo_get, _pyctp.CQdpFtdcReqQueryAccountField_IdentifiedCardNo_set)
    __swig_setmethods__["CustType"] = _pyctp.CQdpFtdcReqQueryAccountField_CustType_set
    __swig_getmethods__["CustType"] = _pyctp.CQdpFtdcReqQueryAccountField_CustType_get
    if _newclass:
        CustType = _swig_property(_pyctp.CQdpFtdcReqQueryAccountField_CustType_get, _pyctp.CQdpFtdcReqQueryAccountField_CustType_set)
    __swig_setmethods__["BankAccount"] = _pyctp.CQdpFtdcReqQueryAccountField_BankAccount_set
    __swig_getmethods__["BankAccount"] = _pyctp.CQdpFtdcReqQueryAccountField_BankAccount_get
    if _newclass:
        BankAccount = _swig_property(_pyctp.CQdpFtdcReqQueryAccountField_BankAccount_get, _pyctp.CQdpFtdcReqQueryAccountField_BankAccount_set)
    __swig_setmethods__["BankPassWord"] = _pyctp.CQdpFtdcReqQueryAccountField_BankPassWord_set
    __swig_getmethods__["BankPassWord"] = _pyctp.CQdpFtdcReqQueryAccountField_BankPassWord_get
    if _newclass:
        BankPassWord = _swig_property(_pyctp.CQdpFtdcReqQueryAccountField_BankPassWord_get, _pyctp.CQdpFtdcReqQueryAccountField_BankPassWord_set)
    __swig_setmethods__["AccountID"] = _pyctp.CQdpFtdcReqQueryAccountField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CQdpFtdcReqQueryAccountField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CQdpFtdcReqQueryAccountField_AccountID_get, _pyctp.CQdpFtdcReqQueryAccountField_AccountID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CQdpFtdcReqQueryAccountField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CQdpFtdcReqQueryAccountField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CQdpFtdcReqQueryAccountField_InvestorID_get, _pyctp.CQdpFtdcReqQueryAccountField_InvestorID_set)
    __swig_setmethods__["Password"] = _pyctp.CQdpFtdcReqQueryAccountField_Password_set
    __swig_getmethods__["Password"] = _pyctp.CQdpFtdcReqQueryAccountField_Password_get
    if _newclass:
        Password = _swig_property(_pyctp.CQdpFtdcReqQueryAccountField_Password_get, _pyctp.CQdpFtdcReqQueryAccountField_Password_set)
    __swig_setmethods__["FutureSerial"] = _pyctp.CQdpFtdcReqQueryAccountField_FutureSerial_set
    __swig_getmethods__["FutureSerial"] = _pyctp.CQdpFtdcReqQueryAccountField_FutureSerial_get
    if _newclass:
        FutureSerial = _swig_property(_pyctp.CQdpFtdcReqQueryAccountField_FutureSerial_get, _pyctp.CQdpFtdcReqQueryAccountField_FutureSerial_set)
    __swig_setmethods__["InstallID"] = _pyctp.CQdpFtdcReqQueryAccountField_InstallID_set
    __swig_getmethods__["InstallID"] = _pyctp.CQdpFtdcReqQueryAccountField_InstallID_get
    if _newclass:
        InstallID = _swig_property(_pyctp.CQdpFtdcReqQueryAccountField_InstallID_get, _pyctp.CQdpFtdcReqQueryAccountField_InstallID_set)
    __swig_setmethods__["UserID"] = _pyctp.CQdpFtdcReqQueryAccountField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CQdpFtdcReqQueryAccountField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CQdpFtdcReqQueryAccountField_UserID_get, _pyctp.CQdpFtdcReqQueryAccountField_UserID_set)
    __swig_setmethods__["VerifyCertNoFlag"] = _pyctp.CQdpFtdcReqQueryAccountField_VerifyCertNoFlag_set
    __swig_getmethods__["VerifyCertNoFlag"] = _pyctp.CQdpFtdcReqQueryAccountField_VerifyCertNoFlag_get
    if _newclass:
        VerifyCertNoFlag = _swig_property(_pyctp.CQdpFtdcReqQueryAccountField_VerifyCertNoFlag_get, _pyctp.CQdpFtdcReqQueryAccountField_VerifyCertNoFlag_set)
    __swig_setmethods__["Currency"] = _pyctp.CQdpFtdcReqQueryAccountField_Currency_set
    __swig_getmethods__["Currency"] = _pyctp.CQdpFtdcReqQueryAccountField_Currency_get
    if _newclass:
        Currency = _swig_property(_pyctp.CQdpFtdcReqQueryAccountField_Currency_get, _pyctp.CQdpFtdcReqQueryAccountField_Currency_set)
    __swig_setmethods__["Digest"] = _pyctp.CQdpFtdcReqQueryAccountField_Digest_set
    __swig_getmethods__["Digest"] = _pyctp.CQdpFtdcReqQueryAccountField_Digest_get
    if _newclass:
        Digest = _swig_property(_pyctp.CQdpFtdcReqQueryAccountField_Digest_get, _pyctp.CQdpFtdcReqQueryAccountField_Digest_set)
    __swig_setmethods__["BankAccType"] = _pyctp.CQdpFtdcReqQueryAccountField_BankAccType_set
    __swig_getmethods__["BankAccType"] = _pyctp.CQdpFtdcReqQueryAccountField_BankAccType_get
    if _newclass:
        BankAccType = _swig_property(_pyctp.CQdpFtdcReqQueryAccountField_BankAccType_get, _pyctp.CQdpFtdcReqQueryAccountField_BankAccType_set)
    __swig_setmethods__["DeviceID"] = _pyctp.CQdpFtdcReqQueryAccountField_DeviceID_set
    __swig_getmethods__["DeviceID"] = _pyctp.CQdpFtdcReqQueryAccountField_DeviceID_get
    if _newclass:
        DeviceID = _swig_property(_pyctp.CQdpFtdcReqQueryAccountField_DeviceID_get, _pyctp.CQdpFtdcReqQueryAccountField_DeviceID_set)
    __swig_setmethods__["BankSecuAccType"] = _pyctp.CQdpFtdcReqQueryAccountField_BankSecuAccType_set
    __swig_getmethods__["BankSecuAccType"] = _pyctp.CQdpFtdcReqQueryAccountField_BankSecuAccType_get
    if _newclass:
        BankSecuAccType = _swig_property(_pyctp.CQdpFtdcReqQueryAccountField_BankSecuAccType_get, _pyctp.CQdpFtdcReqQueryAccountField_BankSecuAccType_set)
    __swig_setmethods__["BankCodingForFuture"] = _pyctp.CQdpFtdcReqQueryAccountField_BankCodingForFuture_set
    __swig_getmethods__["BankCodingForFuture"] = _pyctp.CQdpFtdcReqQueryAccountField_BankCodingForFuture_get
    if _newclass:
        BankCodingForFuture = _swig_property(_pyctp.CQdpFtdcReqQueryAccountField_BankCodingForFuture_get, _pyctp.CQdpFtdcReqQueryAccountField_BankCodingForFuture_set)
    __swig_setmethods__["BankSecuAcc"] = _pyctp.CQdpFtdcReqQueryAccountField_BankSecuAcc_set
    __swig_getmethods__["BankSecuAcc"] = _pyctp.CQdpFtdcReqQueryAccountField_BankSecuAcc_get
    if _newclass:
        BankSecuAcc = _swig_property(_pyctp.CQdpFtdcReqQueryAccountField_BankSecuAcc_get, _pyctp.CQdpFtdcReqQueryAccountField_BankSecuAcc_set)
    __swig_setmethods__["BankPwdFlag"] = _pyctp.CQdpFtdcReqQueryAccountField_BankPwdFlag_set
    __swig_getmethods__["BankPwdFlag"] = _pyctp.CQdpFtdcReqQueryAccountField_BankPwdFlag_get
    if _newclass:
        BankPwdFlag = _swig_property(_pyctp.CQdpFtdcReqQueryAccountField_BankPwdFlag_get, _pyctp.CQdpFtdcReqQueryAccountField_BankPwdFlag_set)
    __swig_setmethods__["SecuPwdFlag"] = _pyctp.CQdpFtdcReqQueryAccountField_SecuPwdFlag_set
    __swig_getmethods__["SecuPwdFlag"] = _pyctp.CQdpFtdcReqQueryAccountField_SecuPwdFlag_get
    if _newclass:
        SecuPwdFlag = _swig_property(_pyctp.CQdpFtdcReqQueryAccountField_SecuPwdFlag_get, _pyctp.CQdpFtdcReqQueryAccountField_SecuPwdFlag_set)
    __swig_setmethods__["OperNo"] = _pyctp.CQdpFtdcReqQueryAccountField_OperNo_set
    __swig_getmethods__["OperNo"] = _pyctp.CQdpFtdcReqQueryAccountField_OperNo_get
    if _newclass:
        OperNo = _swig_property(_pyctp.CQdpFtdcReqQueryAccountField_OperNo_get, _pyctp.CQdpFtdcReqQueryAccountField_OperNo_set)
    __swig_setmethods__["RequestID"] = _pyctp.CQdpFtdcReqQueryAccountField_RequestID_set
    __swig_getmethods__["RequestID"] = _pyctp.CQdpFtdcReqQueryAccountField_RequestID_get
    if _newclass:
        RequestID = _swig_property(_pyctp.CQdpFtdcReqQueryAccountField_RequestID_get, _pyctp.CQdpFtdcReqQueryAccountField_RequestID_set)
    __swig_setmethods__["TID"] = _pyctp.CQdpFtdcReqQueryAccountField_TID_set
    __swig_getmethods__["TID"] = _pyctp.CQdpFtdcReqQueryAccountField_TID_get
    if _newclass:
        TID = _swig_property(_pyctp.CQdpFtdcReqQueryAccountField_TID_get, _pyctp.CQdpFtdcReqQueryAccountField_TID_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcReqQueryAccountField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcReqQueryAccountField
    __del__ = lambda self: None
CQdpFtdcReqQueryAccountField_swigregister = _pyctp.CQdpFtdcReqQueryAccountField_swigregister
CQdpFtdcReqQueryAccountField_swigregister(CQdpFtdcReqQueryAccountField)

class CQdpFtdcQryTransferSerialField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcQryTransferSerialField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcQryTransferSerialField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CQdpFtdcQryTransferSerialField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CQdpFtdcQryTransferSerialField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CQdpFtdcQryTransferSerialField_BrokerID_get, _pyctp.CQdpFtdcQryTransferSerialField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CQdpFtdcQryTransferSerialField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CQdpFtdcQryTransferSerialField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CQdpFtdcQryTransferSerialField_UserID_get, _pyctp.CQdpFtdcQryTransferSerialField_UserID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CQdpFtdcQryTransferSerialField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CQdpFtdcQryTransferSerialField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CQdpFtdcQryTransferSerialField_InvestorID_get, _pyctp.CQdpFtdcQryTransferSerialField_InvestorID_set)
    __swig_setmethods__["AccountID"] = _pyctp.CQdpFtdcQryTransferSerialField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CQdpFtdcQryTransferSerialField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CQdpFtdcQryTransferSerialField_AccountID_get, _pyctp.CQdpFtdcQryTransferSerialField_AccountID_set)
    __swig_setmethods__["BankID"] = _pyctp.CQdpFtdcQryTransferSerialField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CQdpFtdcQryTransferSerialField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CQdpFtdcQryTransferSerialField_BankID_get, _pyctp.CQdpFtdcQryTransferSerialField_BankID_set)
    __swig_setmethods__["Currency"] = _pyctp.CQdpFtdcQryTransferSerialField_Currency_set
    __swig_getmethods__["Currency"] = _pyctp.CQdpFtdcQryTransferSerialField_Currency_get
    if _newclass:
        Currency = _swig_property(_pyctp.CQdpFtdcQryTransferSerialField_Currency_get, _pyctp.CQdpFtdcQryTransferSerialField_Currency_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcQryTransferSerialField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcQryTransferSerialField
    __del__ = lambda self: None
CQdpFtdcQryTransferSerialField_swigregister = _pyctp.CQdpFtdcQryTransferSerialField_swigregister
CQdpFtdcQryTransferSerialField_swigregister(CQdpFtdcQryTransferSerialField)

class CQdpFtdcTransferSerialField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcTransferSerialField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcTransferSerialField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["PlateSerial"] = _pyctp.CQdpFtdcTransferSerialField_PlateSerial_set
    __swig_getmethods__["PlateSerial"] = _pyctp.CQdpFtdcTransferSerialField_PlateSerial_get
    if _newclass:
        PlateSerial = _swig_property(_pyctp.CQdpFtdcTransferSerialField_PlateSerial_get, _pyctp.CQdpFtdcTransferSerialField_PlateSerial_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CQdpFtdcTransferSerialField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CQdpFtdcTransferSerialField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CQdpFtdcTransferSerialField_TradeDate_get, _pyctp.CQdpFtdcTransferSerialField_TradeDate_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CQdpFtdcTransferSerialField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CQdpFtdcTransferSerialField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CQdpFtdcTransferSerialField_TradingDay_get, _pyctp.CQdpFtdcTransferSerialField_TradingDay_set)
    __swig_setmethods__["TradingTime"] = _pyctp.CQdpFtdcTransferSerialField_TradingTime_set
    __swig_getmethods__["TradingTime"] = _pyctp.CQdpFtdcTransferSerialField_TradingTime_get
    if _newclass:
        TradingTime = _swig_property(_pyctp.CQdpFtdcTransferSerialField_TradingTime_get, _pyctp.CQdpFtdcTransferSerialField_TradingTime_set)
    __swig_setmethods__["TradeCode"] = _pyctp.CQdpFtdcTransferSerialField_TradeCode_set
    __swig_getmethods__["TradeCode"] = _pyctp.CQdpFtdcTransferSerialField_TradeCode_get
    if _newclass:
        TradeCode = _swig_property(_pyctp.CQdpFtdcTransferSerialField_TradeCode_get, _pyctp.CQdpFtdcTransferSerialField_TradeCode_set)
    __swig_setmethods__["SessionID"] = _pyctp.CQdpFtdcTransferSerialField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CQdpFtdcTransferSerialField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CQdpFtdcTransferSerialField_SessionID_get, _pyctp.CQdpFtdcTransferSerialField_SessionID_set)
    __swig_setmethods__["BankID"] = _pyctp.CQdpFtdcTransferSerialField_BankID_set
    __swig_getmethods__["BankID"] = _pyctp.CQdpFtdcTransferSerialField_BankID_get
    if _newclass:
        BankID = _swig_property(_pyctp.CQdpFtdcTransferSerialField_BankID_get, _pyctp.CQdpFtdcTransferSerialField_BankID_set)
    __swig_setmethods__["BankBrchID"] = _pyctp.CQdpFtdcTransferSerialField_BankBrchID_set
    __swig_getmethods__["BankBrchID"] = _pyctp.CQdpFtdcTransferSerialField_BankBrchID_get
    if _newclass:
        BankBrchID = _swig_property(_pyctp.CQdpFtdcTransferSerialField_BankBrchID_get, _pyctp.CQdpFtdcTransferSerialField_BankBrchID_set)
    __swig_setmethods__["BankAccType"] = _pyctp.CQdpFtdcTransferSerialField_BankAccType_set
    __swig_getmethods__["BankAccType"] = _pyctp.CQdpFtdcTransferSerialField_BankAccType_get
    if _newclass:
        BankAccType = _swig_property(_pyctp.CQdpFtdcTransferSerialField_BankAccType_get, _pyctp.CQdpFtdcTransferSerialField_BankAccType_set)
    __swig_setmethods__["BankAccount"] = _pyctp.CQdpFtdcTransferSerialField_BankAccount_set
    __swig_getmethods__["BankAccount"] = _pyctp.CQdpFtdcTransferSerialField_BankAccount_get
    if _newclass:
        BankAccount = _swig_property(_pyctp.CQdpFtdcTransferSerialField_BankAccount_get, _pyctp.CQdpFtdcTransferSerialField_BankAccount_set)
    __swig_setmethods__["Currency"] = _pyctp.CQdpFtdcTransferSerialField_Currency_set
    __swig_getmethods__["Currency"] = _pyctp.CQdpFtdcTransferSerialField_Currency_get
    if _newclass:
        Currency = _swig_property(_pyctp.CQdpFtdcTransferSerialField_Currency_get, _pyctp.CQdpFtdcTransferSerialField_Currency_set)
    __swig_setmethods__["BankSerial"] = _pyctp.CQdpFtdcTransferSerialField_BankSerial_set
    __swig_getmethods__["BankSerial"] = _pyctp.CQdpFtdcTransferSerialField_BankSerial_get
    if _newclass:
        BankSerial = _swig_property(_pyctp.CQdpFtdcTransferSerialField_BankSerial_get, _pyctp.CQdpFtdcTransferSerialField_BankSerial_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CQdpFtdcTransferSerialField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CQdpFtdcTransferSerialField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CQdpFtdcTransferSerialField_BrokerID_get, _pyctp.CQdpFtdcTransferSerialField_BrokerID_set)
    __swig_setmethods__["BrokerBranchID"] = _pyctp.CQdpFtdcTransferSerialField_BrokerBranchID_set
    __swig_getmethods__["BrokerBranchID"] = _pyctp.CQdpFtdcTransferSerialField_BrokerBranchID_get
    if _newclass:
        BrokerBranchID = _swig_property(_pyctp.CQdpFtdcTransferSerialField_BrokerBranchID_get, _pyctp.CQdpFtdcTransferSerialField_BrokerBranchID_set)
    __swig_setmethods__["FutureAccType"] = _pyctp.CQdpFtdcTransferSerialField_FutureAccType_set
    __swig_getmethods__["FutureAccType"] = _pyctp.CQdpFtdcTransferSerialField_FutureAccType_get
    if _newclass:
        FutureAccType = _swig_property(_pyctp.CQdpFtdcTransferSerialField_FutureAccType_get, _pyctp.CQdpFtdcTransferSerialField_FutureAccType_set)
    __swig_setmethods__["AccountID"] = _pyctp.CQdpFtdcTransferSerialField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CQdpFtdcTransferSerialField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CQdpFtdcTransferSerialField_AccountID_get, _pyctp.CQdpFtdcTransferSerialField_AccountID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CQdpFtdcTransferSerialField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CQdpFtdcTransferSerialField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CQdpFtdcTransferSerialField_InvestorID_get, _pyctp.CQdpFtdcTransferSerialField_InvestorID_set)
    __swig_setmethods__["FutureSerial"] = _pyctp.CQdpFtdcTransferSerialField_FutureSerial_set
    __swig_getmethods__["FutureSerial"] = _pyctp.CQdpFtdcTransferSerialField_FutureSerial_get
    if _newclass:
        FutureSerial = _swig_property(_pyctp.CQdpFtdcTransferSerialField_FutureSerial_get, _pyctp.CQdpFtdcTransferSerialField_FutureSerial_set)
    __swig_setmethods__["IdCardType"] = _pyctp.CQdpFtdcTransferSerialField_IdCardType_set
    __swig_getmethods__["IdCardType"] = _pyctp.CQdpFtdcTransferSerialField_IdCardType_get
    if _newclass:
        IdCardType = _swig_property(_pyctp.CQdpFtdcTransferSerialField_IdCardType_get, _pyctp.CQdpFtdcTransferSerialField_IdCardType_set)
    __swig_setmethods__["IdentifiedCardNo"] = _pyctp.CQdpFtdcTransferSerialField_IdentifiedCardNo_set
    __swig_getmethods__["IdentifiedCardNo"] = _pyctp.CQdpFtdcTransferSerialField_IdentifiedCardNo_get
    if _newclass:
        IdentifiedCardNo = _swig_property(_pyctp.CQdpFtdcTransferSerialField_IdentifiedCardNo_get, _pyctp.CQdpFtdcTransferSerialField_IdentifiedCardNo_set)
    __swig_setmethods__["TradeAmount"] = _pyctp.CQdpFtdcTransferSerialField_TradeAmount_set
    __swig_getmethods__["TradeAmount"] = _pyctp.CQdpFtdcTransferSerialField_TradeAmount_get
    if _newclass:
        TradeAmount = _swig_property(_pyctp.CQdpFtdcTransferSerialField_TradeAmount_get, _pyctp.CQdpFtdcTransferSerialField_TradeAmount_set)
    __swig_setmethods__["CustFee"] = _pyctp.CQdpFtdcTransferSerialField_CustFee_set
    __swig_getmethods__["CustFee"] = _pyctp.CQdpFtdcTransferSerialField_CustFee_get
    if _newclass:
        CustFee = _swig_property(_pyctp.CQdpFtdcTransferSerialField_CustFee_get, _pyctp.CQdpFtdcTransferSerialField_CustFee_set)
    __swig_setmethods__["BrokerFee"] = _pyctp.CQdpFtdcTransferSerialField_BrokerFee_set
    __swig_getmethods__["BrokerFee"] = _pyctp.CQdpFtdcTransferSerialField_BrokerFee_get
    if _newclass:
        BrokerFee = _swig_property(_pyctp.CQdpFtdcTransferSerialField_BrokerFee_get, _pyctp.CQdpFtdcTransferSerialField_BrokerFee_set)
    __swig_setmethods__["AvailabilityFlag"] = _pyctp.CQdpFtdcTransferSerialField_AvailabilityFlag_set
    __swig_getmethods__["AvailabilityFlag"] = _pyctp.CQdpFtdcTransferSerialField_AvailabilityFlag_get
    if _newclass:
        AvailabilityFlag = _swig_property(_pyctp.CQdpFtdcTransferSerialField_AvailabilityFlag_get, _pyctp.CQdpFtdcTransferSerialField_AvailabilityFlag_set)
    __swig_setmethods__["OperatorCode"] = _pyctp.CQdpFtdcTransferSerialField_OperatorCode_set
    __swig_getmethods__["OperatorCode"] = _pyctp.CQdpFtdcTransferSerialField_OperatorCode_get
    if _newclass:
        OperatorCode = _swig_property(_pyctp.CQdpFtdcTransferSerialField_OperatorCode_get, _pyctp.CQdpFtdcTransferSerialField_OperatorCode_set)
    __swig_setmethods__["BankNewAccount"] = _pyctp.CQdpFtdcTransferSerialField_BankNewAccount_set
    __swig_getmethods__["BankNewAccount"] = _pyctp.CQdpFtdcTransferSerialField_BankNewAccount_get
    if _newclass:
        BankNewAccount = _swig_property(_pyctp.CQdpFtdcTransferSerialField_BankNewAccount_get, _pyctp.CQdpFtdcTransferSerialField_BankNewAccount_set)
    __swig_setmethods__["ErrorID"] = _pyctp.CQdpFtdcTransferSerialField_ErrorID_set
    __swig_getmethods__["ErrorID"] = _pyctp.CQdpFtdcTransferSerialField_ErrorID_get
    if _newclass:
        ErrorID = _swig_property(_pyctp.CQdpFtdcTransferSerialField_ErrorID_get, _pyctp.CQdpFtdcTransferSerialField_ErrorID_set)
    __swig_setmethods__["ErrorMsg"] = _pyctp.CQdpFtdcTransferSerialField_ErrorMsg_set
    __swig_getmethods__["ErrorMsg"] = _pyctp.CQdpFtdcTransferSerialField_ErrorMsg_get
    if _newclass:
        ErrorMsg = _swig_property(_pyctp.CQdpFtdcTransferSerialField_ErrorMsg_get, _pyctp.CQdpFtdcTransferSerialField_ErrorMsg_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcTransferSerialField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcTransferSerialField
    __del__ = lambda self: None
CQdpFtdcTransferSerialField_swigregister = _pyctp.CQdpFtdcTransferSerialField_swigregister
CQdpFtdcTransferSerialField_swigregister(CQdpFtdcTransferSerialField)

class CQdpFtdcQryMarketDataField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcQryMarketDataField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcQryMarketDataField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ExchangeID"] = _pyctp.CQdpFtdcQryMarketDataField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CQdpFtdcQryMarketDataField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CQdpFtdcQryMarketDataField_ExchangeID_get, _pyctp.CQdpFtdcQryMarketDataField_ExchangeID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CQdpFtdcQryMarketDataField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CQdpFtdcQryMarketDataField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CQdpFtdcQryMarketDataField_InstrumentID_get, _pyctp.CQdpFtdcQryMarketDataField_InstrumentID_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcQryMarketDataField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcQryMarketDataField
    __del__ = lambda self: None
CQdpFtdcQryMarketDataField_swigregister = _pyctp.CQdpFtdcQryMarketDataField_swigregister
CQdpFtdcQryMarketDataField_swigregister(CQdpFtdcQryMarketDataField)

class CQdpFtdcMarketDataField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcMarketDataField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcMarketDataField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradingDay"] = _pyctp.CQdpFtdcMarketDataField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CQdpFtdcMarketDataField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CQdpFtdcMarketDataField_TradingDay_get, _pyctp.CQdpFtdcMarketDataField_TradingDay_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CQdpFtdcMarketDataField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CQdpFtdcMarketDataField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CQdpFtdcMarketDataField_ExchangeID_get, _pyctp.CQdpFtdcMarketDataField_ExchangeID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CQdpFtdcMarketDataField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CQdpFtdcMarketDataField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CQdpFtdcMarketDataField_InstrumentID_get, _pyctp.CQdpFtdcMarketDataField_InstrumentID_set)
    __swig_setmethods__["OpenPrice"] = _pyctp.CQdpFtdcMarketDataField_OpenPrice_set
    __swig_getmethods__["OpenPrice"] = _pyctp.CQdpFtdcMarketDataField_OpenPrice_get
    if _newclass:
        OpenPrice = _swig_property(_pyctp.CQdpFtdcMarketDataField_OpenPrice_get, _pyctp.CQdpFtdcMarketDataField_OpenPrice_set)
    __swig_setmethods__["HighestPrice"] = _pyctp.CQdpFtdcMarketDataField_HighestPrice_set
    __swig_getmethods__["HighestPrice"] = _pyctp.CQdpFtdcMarketDataField_HighestPrice_get
    if _newclass:
        HighestPrice = _swig_property(_pyctp.CQdpFtdcMarketDataField_HighestPrice_get, _pyctp.CQdpFtdcMarketDataField_HighestPrice_set)
    __swig_setmethods__["LowestPrice"] = _pyctp.CQdpFtdcMarketDataField_LowestPrice_set
    __swig_getmethods__["LowestPrice"] = _pyctp.CQdpFtdcMarketDataField_LowestPrice_get
    if _newclass:
        LowestPrice = _swig_property(_pyctp.CQdpFtdcMarketDataField_LowestPrice_get, _pyctp.CQdpFtdcMarketDataField_LowestPrice_set)
    __swig_setmethods__["LastPrice"] = _pyctp.CQdpFtdcMarketDataField_LastPrice_set
    __swig_getmethods__["LastPrice"] = _pyctp.CQdpFtdcMarketDataField_LastPrice_get
    if _newclass:
        LastPrice = _swig_property(_pyctp.CQdpFtdcMarketDataField_LastPrice_get, _pyctp.CQdpFtdcMarketDataField_LastPrice_set)
    __swig_setmethods__["Volume"] = _pyctp.CQdpFtdcMarketDataField_Volume_set
    __swig_getmethods__["Volume"] = _pyctp.CQdpFtdcMarketDataField_Volume_get
    if _newclass:
        Volume = _swig_property(_pyctp.CQdpFtdcMarketDataField_Volume_get, _pyctp.CQdpFtdcMarketDataField_Volume_set)
    __swig_setmethods__["Turnover"] = _pyctp.CQdpFtdcMarketDataField_Turnover_set
    __swig_getmethods__["Turnover"] = _pyctp.CQdpFtdcMarketDataField_Turnover_get
    if _newclass:
        Turnover = _swig_property(_pyctp.CQdpFtdcMarketDataField_Turnover_get, _pyctp.CQdpFtdcMarketDataField_Turnover_set)
    __swig_setmethods__["LowerLimitPrice"] = _pyctp.CQdpFtdcMarketDataField_LowerLimitPrice_set
    __swig_getmethods__["LowerLimitPrice"] = _pyctp.CQdpFtdcMarketDataField_LowerLimitPrice_get
    if _newclass:
        LowerLimitPrice = _swig_property(_pyctp.CQdpFtdcMarketDataField_LowerLimitPrice_get, _pyctp.CQdpFtdcMarketDataField_LowerLimitPrice_set)
    __swig_setmethods__["UpperLimitPrice"] = _pyctp.CQdpFtdcMarketDataField_UpperLimitPrice_set
    __swig_getmethods__["UpperLimitPrice"] = _pyctp.CQdpFtdcMarketDataField_UpperLimitPrice_get
    if _newclass:
        UpperLimitPrice = _swig_property(_pyctp.CQdpFtdcMarketDataField_UpperLimitPrice_get, _pyctp.CQdpFtdcMarketDataField_UpperLimitPrice_set)
    __swig_setmethods__["OpenInterest"] = _pyctp.CQdpFtdcMarketDataField_OpenInterest_set
    __swig_getmethods__["OpenInterest"] = _pyctp.CQdpFtdcMarketDataField_OpenInterest_get
    if _newclass:
        OpenInterest = _swig_property(_pyctp.CQdpFtdcMarketDataField_OpenInterest_get, _pyctp.CQdpFtdcMarketDataField_OpenInterest_set)
    __swig_setmethods__["PreClosePrice"] = _pyctp.CQdpFtdcMarketDataField_PreClosePrice_set
    __swig_getmethods__["PreClosePrice"] = _pyctp.CQdpFtdcMarketDataField_PreClosePrice_get
    if _newclass:
        PreClosePrice = _swig_property(_pyctp.CQdpFtdcMarketDataField_PreClosePrice_get, _pyctp.CQdpFtdcMarketDataField_PreClosePrice_set)
    __swig_setmethods__["PreOpenInterest"] = _pyctp.CQdpFtdcMarketDataField_PreOpenInterest_set
    __swig_getmethods__["PreOpenInterest"] = _pyctp.CQdpFtdcMarketDataField_PreOpenInterest_get
    if _newclass:
        PreOpenInterest = _swig_property(_pyctp.CQdpFtdcMarketDataField_PreOpenInterest_get, _pyctp.CQdpFtdcMarketDataField_PreOpenInterest_set)
    __swig_setmethods__["PreSettlementPrice"] = _pyctp.CQdpFtdcMarketDataField_PreSettlementPrice_set
    __swig_getmethods__["PreSettlementPrice"] = _pyctp.CQdpFtdcMarketDataField_PreSettlementPrice_get
    if _newclass:
        PreSettlementPrice = _swig_property(_pyctp.CQdpFtdcMarketDataField_PreSettlementPrice_get, _pyctp.CQdpFtdcMarketDataField_PreSettlementPrice_set)
    __swig_setmethods__["SettlementPrice"] = _pyctp.CQdpFtdcMarketDataField_SettlementPrice_set
    __swig_getmethods__["SettlementPrice"] = _pyctp.CQdpFtdcMarketDataField_SettlementPrice_get
    if _newclass:
        SettlementPrice = _swig_property(_pyctp.CQdpFtdcMarketDataField_SettlementPrice_get, _pyctp.CQdpFtdcMarketDataField_SettlementPrice_set)
    __swig_setmethods__["UpdateMillisec"] = _pyctp.CQdpFtdcMarketDataField_UpdateMillisec_set
    __swig_getmethods__["UpdateMillisec"] = _pyctp.CQdpFtdcMarketDataField_UpdateMillisec_get
    if _newclass:
        UpdateMillisec = _swig_property(_pyctp.CQdpFtdcMarketDataField_UpdateMillisec_get, _pyctp.CQdpFtdcMarketDataField_UpdateMillisec_set)
    __swig_setmethods__["UpdateTime"] = _pyctp.CQdpFtdcMarketDataField_UpdateTime_set
    __swig_getmethods__["UpdateTime"] = _pyctp.CQdpFtdcMarketDataField_UpdateTime_get
    if _newclass:
        UpdateTime = _swig_property(_pyctp.CQdpFtdcMarketDataField_UpdateTime_get, _pyctp.CQdpFtdcMarketDataField_UpdateTime_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcMarketDataField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcMarketDataField
    __del__ = lambda self: None
CQdpFtdcMarketDataField_swigregister = _pyctp.CQdpFtdcMarketDataField_swigregister
CQdpFtdcMarketDataField_swigregister(CQdpFtdcMarketDataField)

class CQdpFtdcRspMarketDataField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcRspMarketDataField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcRspMarketDataField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ExchangeID"] = _pyctp.CQdpFtdcRspMarketDataField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CQdpFtdcRspMarketDataField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CQdpFtdcRspMarketDataField_ExchangeID_get, _pyctp.CQdpFtdcRspMarketDataField_ExchangeID_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CQdpFtdcRspMarketDataField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CQdpFtdcRspMarketDataField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CQdpFtdcRspMarketDataField_TradingDay_get, _pyctp.CQdpFtdcRspMarketDataField_TradingDay_set)
    __swig_setmethods__["SettlementGroupID"] = _pyctp.CQdpFtdcRspMarketDataField_SettlementGroupID_set
    __swig_getmethods__["SettlementGroupID"] = _pyctp.CQdpFtdcRspMarketDataField_SettlementGroupID_get
    if _newclass:
        SettlementGroupID = _swig_property(_pyctp.CQdpFtdcRspMarketDataField_SettlementGroupID_get, _pyctp.CQdpFtdcRspMarketDataField_SettlementGroupID_set)
    __swig_setmethods__["SettlementID"] = _pyctp.CQdpFtdcRspMarketDataField_SettlementID_set
    __swig_getmethods__["SettlementID"] = _pyctp.CQdpFtdcRspMarketDataField_SettlementID_get
    if _newclass:
        SettlementID = _swig_property(_pyctp.CQdpFtdcRspMarketDataField_SettlementID_get, _pyctp.CQdpFtdcRspMarketDataField_SettlementID_set)
    __swig_setmethods__["PreSettlementPrice"] = _pyctp.CQdpFtdcRspMarketDataField_PreSettlementPrice_set
    __swig_getmethods__["PreSettlementPrice"] = _pyctp.CQdpFtdcRspMarketDataField_PreSettlementPrice_get
    if _newclass:
        PreSettlementPrice = _swig_property(_pyctp.CQdpFtdcRspMarketDataField_PreSettlementPrice_get, _pyctp.CQdpFtdcRspMarketDataField_PreSettlementPrice_set)
    __swig_setmethods__["PreClosePrice"] = _pyctp.CQdpFtdcRspMarketDataField_PreClosePrice_set
    __swig_getmethods__["PreClosePrice"] = _pyctp.CQdpFtdcRspMarketDataField_PreClosePrice_get
    if _newclass:
        PreClosePrice = _swig_property(_pyctp.CQdpFtdcRspMarketDataField_PreClosePrice_get, _pyctp.CQdpFtdcRspMarketDataField_PreClosePrice_set)
    __swig_setmethods__["PreOpenInterest"] = _pyctp.CQdpFtdcRspMarketDataField_PreOpenInterest_set
    __swig_getmethods__["PreOpenInterest"] = _pyctp.CQdpFtdcRspMarketDataField_PreOpenInterest_get
    if _newclass:
        PreOpenInterest = _swig_property(_pyctp.CQdpFtdcRspMarketDataField_PreOpenInterest_get, _pyctp.CQdpFtdcRspMarketDataField_PreOpenInterest_set)
    __swig_setmethods__["PreDelta"] = _pyctp.CQdpFtdcRspMarketDataField_PreDelta_set
    __swig_getmethods__["PreDelta"] = _pyctp.CQdpFtdcRspMarketDataField_PreDelta_get
    if _newclass:
        PreDelta = _swig_property(_pyctp.CQdpFtdcRspMarketDataField_PreDelta_get, _pyctp.CQdpFtdcRspMarketDataField_PreDelta_set)
    __swig_setmethods__["OpenPrice"] = _pyctp.CQdpFtdcRspMarketDataField_OpenPrice_set
    __swig_getmethods__["OpenPrice"] = _pyctp.CQdpFtdcRspMarketDataField_OpenPrice_get
    if _newclass:
        OpenPrice = _swig_property(_pyctp.CQdpFtdcRspMarketDataField_OpenPrice_get, _pyctp.CQdpFtdcRspMarketDataField_OpenPrice_set)
    __swig_setmethods__["HighestPrice"] = _pyctp.CQdpFtdcRspMarketDataField_HighestPrice_set
    __swig_getmethods__["HighestPrice"] = _pyctp.CQdpFtdcRspMarketDataField_HighestPrice_get
    if _newclass:
        HighestPrice = _swig_property(_pyctp.CQdpFtdcRspMarketDataField_HighestPrice_get, _pyctp.CQdpFtdcRspMarketDataField_HighestPrice_set)
    __swig_setmethods__["LowestPrice"] = _pyctp.CQdpFtdcRspMarketDataField_LowestPrice_set
    __swig_getmethods__["LowestPrice"] = _pyctp.CQdpFtdcRspMarketDataField_LowestPrice_get
    if _newclass:
        LowestPrice = _swig_property(_pyctp.CQdpFtdcRspMarketDataField_LowestPrice_get, _pyctp.CQdpFtdcRspMarketDataField_LowestPrice_set)
    __swig_setmethods__["ClosePrice"] = _pyctp.CQdpFtdcRspMarketDataField_ClosePrice_set
    __swig_getmethods__["ClosePrice"] = _pyctp.CQdpFtdcRspMarketDataField_ClosePrice_get
    if _newclass:
        ClosePrice = _swig_property(_pyctp.CQdpFtdcRspMarketDataField_ClosePrice_get, _pyctp.CQdpFtdcRspMarketDataField_ClosePrice_set)
    __swig_setmethods__["UpperLimitPrice"] = _pyctp.CQdpFtdcRspMarketDataField_UpperLimitPrice_set
    __swig_getmethods__["UpperLimitPrice"] = _pyctp.CQdpFtdcRspMarketDataField_UpperLimitPrice_get
    if _newclass:
        UpperLimitPrice = _swig_property(_pyctp.CQdpFtdcRspMarketDataField_UpperLimitPrice_get, _pyctp.CQdpFtdcRspMarketDataField_UpperLimitPrice_set)
    __swig_setmethods__["LowerLimitPrice"] = _pyctp.CQdpFtdcRspMarketDataField_LowerLimitPrice_set
    __swig_getmethods__["LowerLimitPrice"] = _pyctp.CQdpFtdcRspMarketDataField_LowerLimitPrice_get
    if _newclass:
        LowerLimitPrice = _swig_property(_pyctp.CQdpFtdcRspMarketDataField_LowerLimitPrice_get, _pyctp.CQdpFtdcRspMarketDataField_LowerLimitPrice_set)
    __swig_setmethods__["SettlementPrice"] = _pyctp.CQdpFtdcRspMarketDataField_SettlementPrice_set
    __swig_getmethods__["SettlementPrice"] = _pyctp.CQdpFtdcRspMarketDataField_SettlementPrice_get
    if _newclass:
        SettlementPrice = _swig_property(_pyctp.CQdpFtdcRspMarketDataField_SettlementPrice_get, _pyctp.CQdpFtdcRspMarketDataField_SettlementPrice_set)
    __swig_setmethods__["CurrDelta"] = _pyctp.CQdpFtdcRspMarketDataField_CurrDelta_set
    __swig_getmethods__["CurrDelta"] = _pyctp.CQdpFtdcRspMarketDataField_CurrDelta_get
    if _newclass:
        CurrDelta = _swig_property(_pyctp.CQdpFtdcRspMarketDataField_CurrDelta_get, _pyctp.CQdpFtdcRspMarketDataField_CurrDelta_set)
    __swig_setmethods__["LastPrice"] = _pyctp.CQdpFtdcRspMarketDataField_LastPrice_set
    __swig_getmethods__["LastPrice"] = _pyctp.CQdpFtdcRspMarketDataField_LastPrice_get
    if _newclass:
        LastPrice = _swig_property(_pyctp.CQdpFtdcRspMarketDataField_LastPrice_get, _pyctp.CQdpFtdcRspMarketDataField_LastPrice_set)
    __swig_setmethods__["Volume"] = _pyctp.CQdpFtdcRspMarketDataField_Volume_set
    __swig_getmethods__["Volume"] = _pyctp.CQdpFtdcRspMarketDataField_Volume_get
    if _newclass:
        Volume = _swig_property(_pyctp.CQdpFtdcRspMarketDataField_Volume_get, _pyctp.CQdpFtdcRspMarketDataField_Volume_set)
    __swig_setmethods__["Turnover"] = _pyctp.CQdpFtdcRspMarketDataField_Turnover_set
    __swig_getmethods__["Turnover"] = _pyctp.CQdpFtdcRspMarketDataField_Turnover_get
    if _newclass:
        Turnover = _swig_property(_pyctp.CQdpFtdcRspMarketDataField_Turnover_get, _pyctp.CQdpFtdcRspMarketDataField_Turnover_set)
    __swig_setmethods__["OpenInterest"] = _pyctp.CQdpFtdcRspMarketDataField_OpenInterest_set
    __swig_getmethods__["OpenInterest"] = _pyctp.CQdpFtdcRspMarketDataField_OpenInterest_get
    if _newclass:
        OpenInterest = _swig_property(_pyctp.CQdpFtdcRspMarketDataField_OpenInterest_get, _pyctp.CQdpFtdcRspMarketDataField_OpenInterest_set)
    __swig_setmethods__["BidPrice1"] = _pyctp.CQdpFtdcRspMarketDataField_BidPrice1_set
    __swig_getmethods__["BidPrice1"] = _pyctp.CQdpFtdcRspMarketDataField_BidPrice1_get
    if _newclass:
        BidPrice1 = _swig_property(_pyctp.CQdpFtdcRspMarketDataField_BidPrice1_get, _pyctp.CQdpFtdcRspMarketDataField_BidPrice1_set)
    __swig_setmethods__["BidVolume1"] = _pyctp.CQdpFtdcRspMarketDataField_BidVolume1_set
    __swig_getmethods__["BidVolume1"] = _pyctp.CQdpFtdcRspMarketDataField_BidVolume1_get
    if _newclass:
        BidVolume1 = _swig_property(_pyctp.CQdpFtdcRspMarketDataField_BidVolume1_get, _pyctp.CQdpFtdcRspMarketDataField_BidVolume1_set)
    __swig_setmethods__["AskPrice1"] = _pyctp.CQdpFtdcRspMarketDataField_AskPrice1_set
    __swig_getmethods__["AskPrice1"] = _pyctp.CQdpFtdcRspMarketDataField_AskPrice1_get
    if _newclass:
        AskPrice1 = _swig_property(_pyctp.CQdpFtdcRspMarketDataField_AskPrice1_get, _pyctp.CQdpFtdcRspMarketDataField_AskPrice1_set)
    __swig_setmethods__["AskVolume1"] = _pyctp.CQdpFtdcRspMarketDataField_AskVolume1_set
    __swig_getmethods__["AskVolume1"] = _pyctp.CQdpFtdcRspMarketDataField_AskVolume1_get
    if _newclass:
        AskVolume1 = _swig_property(_pyctp.CQdpFtdcRspMarketDataField_AskVolume1_get, _pyctp.CQdpFtdcRspMarketDataField_AskVolume1_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CQdpFtdcRspMarketDataField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CQdpFtdcRspMarketDataField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CQdpFtdcRspMarketDataField_InstrumentID_get, _pyctp.CQdpFtdcRspMarketDataField_InstrumentID_set)
    __swig_setmethods__["UpdateTime"] = _pyctp.CQdpFtdcRspMarketDataField_UpdateTime_set
    __swig_getmethods__["UpdateTime"] = _pyctp.CQdpFtdcRspMarketDataField_UpdateTime_get
    if _newclass:
        UpdateTime = _swig_property(_pyctp.CQdpFtdcRspMarketDataField_UpdateTime_get, _pyctp.CQdpFtdcRspMarketDataField_UpdateTime_set)
    __swig_setmethods__["UpdateMillisec"] = _pyctp.CQdpFtdcRspMarketDataField_UpdateMillisec_set
    __swig_getmethods__["UpdateMillisec"] = _pyctp.CQdpFtdcRspMarketDataField_UpdateMillisec_get
    if _newclass:
        UpdateMillisec = _swig_property(_pyctp.CQdpFtdcRspMarketDataField_UpdateMillisec_get, _pyctp.CQdpFtdcRspMarketDataField_UpdateMillisec_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcRspMarketDataField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcRspMarketDataField
    __del__ = lambda self: None
CQdpFtdcRspMarketDataField_swigregister = _pyctp.CQdpFtdcRspMarketDataField_swigregister
CQdpFtdcRspMarketDataField_swigregister(CQdpFtdcRspMarketDataField)

class CQdpFtdcQryInventoryField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcQryInventoryField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcQryInventoryField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["InvestorID"] = _pyctp.CQdpFtdcQryInventoryField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CQdpFtdcQryInventoryField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CQdpFtdcQryInventoryField_InvestorID_get, _pyctp.CQdpFtdcQryInventoryField_InvestorID_set)
    __swig_setmethods__["ProductID"] = _pyctp.CQdpFtdcQryInventoryField_ProductID_set
    __swig_getmethods__["ProductID"] = _pyctp.CQdpFtdcQryInventoryField_ProductID_get
    if _newclass:
        ProductID = _swig_property(_pyctp.CQdpFtdcQryInventoryField_ProductID_get, _pyctp.CQdpFtdcQryInventoryField_ProductID_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcQryInventoryField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcQryInventoryField
    __del__ = lambda self: None
CQdpFtdcQryInventoryField_swigregister = _pyctp.CQdpFtdcQryInventoryField_swigregister
CQdpFtdcQryInventoryField_swigregister(CQdpFtdcQryInventoryField)

class CQdpFtdcInventoryField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcInventoryField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcInventoryField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CQdpFtdcInventoryField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CQdpFtdcInventoryField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CQdpFtdcInventoryField_BrokerID_get, _pyctp.CQdpFtdcInventoryField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CQdpFtdcInventoryField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CQdpFtdcInventoryField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CQdpFtdcInventoryField_InvestorID_get, _pyctp.CQdpFtdcInventoryField_InvestorID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CQdpFtdcInventoryField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CQdpFtdcInventoryField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CQdpFtdcInventoryField_ExchangeID_get, _pyctp.CQdpFtdcInventoryField_ExchangeID_set)
    __swig_setmethods__["ProductID"] = _pyctp.CQdpFtdcInventoryField_ProductID_set
    __swig_getmethods__["ProductID"] = _pyctp.CQdpFtdcInventoryField_ProductID_get
    if _newclass:
        ProductID = _swig_property(_pyctp.CQdpFtdcInventoryField_ProductID_get, _pyctp.CQdpFtdcInventoryField_ProductID_set)
    __swig_setmethods__["TotalInventory"] = _pyctp.CQdpFtdcInventoryField_TotalInventory_set
    __swig_getmethods__["TotalInventory"] = _pyctp.CQdpFtdcInventoryField_TotalInventory_get
    if _newclass:
        TotalInventory = _swig_property(_pyctp.CQdpFtdcInventoryField_TotalInventory_get, _pyctp.CQdpFtdcInventoryField_TotalInventory_set)
    __swig_setmethods__["AvailInventory"] = _pyctp.CQdpFtdcInventoryField_AvailInventory_set
    __swig_getmethods__["AvailInventory"] = _pyctp.CQdpFtdcInventoryField_AvailInventory_get
    if _newclass:
        AvailInventory = _swig_property(_pyctp.CQdpFtdcInventoryField_AvailInventory_get, _pyctp.CQdpFtdcInventoryField_AvailInventory_set)
    __swig_setmethods__["FrozenInventory"] = _pyctp.CQdpFtdcInventoryField_FrozenInventory_set
    __swig_getmethods__["FrozenInventory"] = _pyctp.CQdpFtdcInventoryField_FrozenInventory_get
    if _newclass:
        FrozenInventory = _swig_property(_pyctp.CQdpFtdcInventoryField_FrozenInventory_get, _pyctp.CQdpFtdcInventoryField_FrozenInventory_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcInventoryField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcInventoryField
    __del__ = lambda self: None
CQdpFtdcInventoryField_swigregister = _pyctp.CQdpFtdcInventoryField_swigregister
CQdpFtdcInventoryField_swigregister(CQdpFtdcInventoryField)

class CQdpFtdcQrySGEDeferRateField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcQrySGEDeferRateField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcQrySGEDeferRateField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["InstrumentID"] = _pyctp.CQdpFtdcQrySGEDeferRateField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CQdpFtdcQrySGEDeferRateField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CQdpFtdcQrySGEDeferRateField_InstrumentID_get, _pyctp.CQdpFtdcQrySGEDeferRateField_InstrumentID_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcQrySGEDeferRateField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcQrySGEDeferRateField
    __del__ = lambda self: None
CQdpFtdcQrySGEDeferRateField_swigregister = _pyctp.CQdpFtdcQrySGEDeferRateField_swigregister
CQdpFtdcQrySGEDeferRateField_swigregister(CQdpFtdcQrySGEDeferRateField)

class CQdpFtdcSGEDeferRateField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcSGEDeferRateField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcSGEDeferRateField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["InstrumentID"] = _pyctp.CQdpFtdcSGEDeferRateField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CQdpFtdcSGEDeferRateField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CQdpFtdcSGEDeferRateField_InstrumentID_get, _pyctp.CQdpFtdcSGEDeferRateField_InstrumentID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CQdpFtdcSGEDeferRateField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CQdpFtdcSGEDeferRateField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CQdpFtdcSGEDeferRateField_ExchangeID_get, _pyctp.CQdpFtdcSGEDeferRateField_ExchangeID_set)
    __swig_setmethods__["TradeDate"] = _pyctp.CQdpFtdcSGEDeferRateField_TradeDate_set
    __swig_getmethods__["TradeDate"] = _pyctp.CQdpFtdcSGEDeferRateField_TradeDate_get
    if _newclass:
        TradeDate = _swig_property(_pyctp.CQdpFtdcSGEDeferRateField_TradeDate_get, _pyctp.CQdpFtdcSGEDeferRateField_TradeDate_set)
    __swig_setmethods__["Direction"] = _pyctp.CQdpFtdcSGEDeferRateField_Direction_set
    __swig_getmethods__["Direction"] = _pyctp.CQdpFtdcSGEDeferRateField_Direction_get
    if _newclass:
        Direction = _swig_property(_pyctp.CQdpFtdcSGEDeferRateField_Direction_get, _pyctp.CQdpFtdcSGEDeferRateField_Direction_set)
    __swig_setmethods__["DeferRate"] = _pyctp.CQdpFtdcSGEDeferRateField_DeferRate_set
    __swig_getmethods__["DeferRate"] = _pyctp.CQdpFtdcSGEDeferRateField_DeferRate_get
    if _newclass:
        DeferRate = _swig_property(_pyctp.CQdpFtdcSGEDeferRateField_DeferRate_get, _pyctp.CQdpFtdcSGEDeferRateField_DeferRate_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcSGEDeferRateField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcSGEDeferRateField
    __del__ = lambda self: None
CQdpFtdcSGEDeferRateField_swigregister = _pyctp.CQdpFtdcSGEDeferRateField_swigregister
CQdpFtdcSGEDeferRateField_swigregister(CQdpFtdcSGEDeferRateField)

class CQdpFtdcTradeField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcTradeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcTradeField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradingDay"] = _pyctp.CQdpFtdcTradeField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CQdpFtdcTradeField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CQdpFtdcTradeField_TradingDay_get, _pyctp.CQdpFtdcTradeField_TradingDay_set)
    __swig_setmethods__["BrokerID"] = _pyctp.CQdpFtdcTradeField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CQdpFtdcTradeField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CQdpFtdcTradeField_BrokerID_get, _pyctp.CQdpFtdcTradeField_BrokerID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CQdpFtdcTradeField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CQdpFtdcTradeField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CQdpFtdcTradeField_ExchangeID_get, _pyctp.CQdpFtdcTradeField_ExchangeID_set)
    __swig_setmethods__["ParticipantID"] = _pyctp.CQdpFtdcTradeField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CQdpFtdcTradeField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CQdpFtdcTradeField_ParticipantID_get, _pyctp.CQdpFtdcTradeField_ParticipantID_set)
    __swig_setmethods__["SeatID"] = _pyctp.CQdpFtdcTradeField_SeatID_set
    __swig_getmethods__["SeatID"] = _pyctp.CQdpFtdcTradeField_SeatID_get
    if _newclass:
        SeatID = _swig_property(_pyctp.CQdpFtdcTradeField_SeatID_get, _pyctp.CQdpFtdcTradeField_SeatID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CQdpFtdcTradeField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CQdpFtdcTradeField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CQdpFtdcTradeField_InvestorID_get, _pyctp.CQdpFtdcTradeField_InvestorID_set)
    __swig_setmethods__["ClientID"] = _pyctp.CQdpFtdcTradeField_ClientID_set
    __swig_getmethods__["ClientID"] = _pyctp.CQdpFtdcTradeField_ClientID_get
    if _newclass:
        ClientID = _swig_property(_pyctp.CQdpFtdcTradeField_ClientID_get, _pyctp.CQdpFtdcTradeField_ClientID_set)
    __swig_setmethods__["UserID"] = _pyctp.CQdpFtdcTradeField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CQdpFtdcTradeField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CQdpFtdcTradeField_UserID_get, _pyctp.CQdpFtdcTradeField_UserID_set)
    __swig_setmethods__["TradeID"] = _pyctp.CQdpFtdcTradeField_TradeID_set
    __swig_getmethods__["TradeID"] = _pyctp.CQdpFtdcTradeField_TradeID_get
    if _newclass:
        TradeID = _swig_property(_pyctp.CQdpFtdcTradeField_TradeID_get, _pyctp.CQdpFtdcTradeField_TradeID_set)
    __swig_setmethods__["OrderSysID"] = _pyctp.CQdpFtdcTradeField_OrderSysID_set
    __swig_getmethods__["OrderSysID"] = _pyctp.CQdpFtdcTradeField_OrderSysID_get
    if _newclass:
        OrderSysID = _swig_property(_pyctp.CQdpFtdcTradeField_OrderSysID_get, _pyctp.CQdpFtdcTradeField_OrderSysID_set)
    __swig_setmethods__["UserOrderLocalID"] = _pyctp.CQdpFtdcTradeField_UserOrderLocalID_set
    __swig_getmethods__["UserOrderLocalID"] = _pyctp.CQdpFtdcTradeField_UserOrderLocalID_get
    if _newclass:
        UserOrderLocalID = _swig_property(_pyctp.CQdpFtdcTradeField_UserOrderLocalID_get, _pyctp.CQdpFtdcTradeField_UserOrderLocalID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CQdpFtdcTradeField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CQdpFtdcTradeField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CQdpFtdcTradeField_InstrumentID_get, _pyctp.CQdpFtdcTradeField_InstrumentID_set)
    __swig_setmethods__["Direction"] = _pyctp.CQdpFtdcTradeField_Direction_set
    __swig_getmethods__["Direction"] = _pyctp.CQdpFtdcTradeField_Direction_get
    if _newclass:
        Direction = _swig_property(_pyctp.CQdpFtdcTradeField_Direction_get, _pyctp.CQdpFtdcTradeField_Direction_set)
    __swig_setmethods__["OffsetFlag"] = _pyctp.CQdpFtdcTradeField_OffsetFlag_set
    __swig_getmethods__["OffsetFlag"] = _pyctp.CQdpFtdcTradeField_OffsetFlag_get
    if _newclass:
        OffsetFlag = _swig_property(_pyctp.CQdpFtdcTradeField_OffsetFlag_get, _pyctp.CQdpFtdcTradeField_OffsetFlag_set)
    __swig_setmethods__["HedgeFlag"] = _pyctp.CQdpFtdcTradeField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _pyctp.CQdpFtdcTradeField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_pyctp.CQdpFtdcTradeField_HedgeFlag_get, _pyctp.CQdpFtdcTradeField_HedgeFlag_set)
    __swig_setmethods__["TradePrice"] = _pyctp.CQdpFtdcTradeField_TradePrice_set
    __swig_getmethods__["TradePrice"] = _pyctp.CQdpFtdcTradeField_TradePrice_get
    if _newclass:
        TradePrice = _swig_property(_pyctp.CQdpFtdcTradeField_TradePrice_get, _pyctp.CQdpFtdcTradeField_TradePrice_set)
    __swig_setmethods__["TradeVolume"] = _pyctp.CQdpFtdcTradeField_TradeVolume_set
    __swig_getmethods__["TradeVolume"] = _pyctp.CQdpFtdcTradeField_TradeVolume_get
    if _newclass:
        TradeVolume = _swig_property(_pyctp.CQdpFtdcTradeField_TradeVolume_get, _pyctp.CQdpFtdcTradeField_TradeVolume_set)
    __swig_setmethods__["TradeTime"] = _pyctp.CQdpFtdcTradeField_TradeTime_set
    __swig_getmethods__["TradeTime"] = _pyctp.CQdpFtdcTradeField_TradeTime_get
    if _newclass:
        TradeTime = _swig_property(_pyctp.CQdpFtdcTradeField_TradeTime_get, _pyctp.CQdpFtdcTradeField_TradeTime_set)
    __swig_setmethods__["ClearingPartID"] = _pyctp.CQdpFtdcTradeField_ClearingPartID_set
    __swig_getmethods__["ClearingPartID"] = _pyctp.CQdpFtdcTradeField_ClearingPartID_get
    if _newclass:
        ClearingPartID = _swig_property(_pyctp.CQdpFtdcTradeField_ClearingPartID_get, _pyctp.CQdpFtdcTradeField_ClearingPartID_set)
    __swig_setmethods__["TradeAmnt"] = _pyctp.CQdpFtdcTradeField_TradeAmnt_set
    __swig_getmethods__["TradeAmnt"] = _pyctp.CQdpFtdcTradeField_TradeAmnt_get
    if _newclass:
        TradeAmnt = _swig_property(_pyctp.CQdpFtdcTradeField_TradeAmnt_get, _pyctp.CQdpFtdcTradeField_TradeAmnt_set)
    __swig_setmethods__["RecNum"] = _pyctp.CQdpFtdcTradeField_RecNum_set
    __swig_getmethods__["RecNum"] = _pyctp.CQdpFtdcTradeField_RecNum_get
    if _newclass:
        RecNum = _swig_property(_pyctp.CQdpFtdcTradeField_RecNum_get, _pyctp.CQdpFtdcTradeField_RecNum_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcTradeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcTradeField
    __del__ = lambda self: None
CQdpFtdcTradeField_swigregister = _pyctp.CQdpFtdcTradeField_swigregister
CQdpFtdcTradeField_swigregister(CQdpFtdcTradeField)

class CQdpFtdcOrderField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcOrderField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcOrderField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CQdpFtdcOrderField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CQdpFtdcOrderField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CQdpFtdcOrderField_BrokerID_get, _pyctp.CQdpFtdcOrderField_BrokerID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CQdpFtdcOrderField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CQdpFtdcOrderField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CQdpFtdcOrderField_ExchangeID_get, _pyctp.CQdpFtdcOrderField_ExchangeID_set)
    __swig_setmethods__["OrderSysID"] = _pyctp.CQdpFtdcOrderField_OrderSysID_set
    __swig_getmethods__["OrderSysID"] = _pyctp.CQdpFtdcOrderField_OrderSysID_get
    if _newclass:
        OrderSysID = _swig_property(_pyctp.CQdpFtdcOrderField_OrderSysID_get, _pyctp.CQdpFtdcOrderField_OrderSysID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CQdpFtdcOrderField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CQdpFtdcOrderField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CQdpFtdcOrderField_InvestorID_get, _pyctp.CQdpFtdcOrderField_InvestorID_set)
    __swig_setmethods__["UserID"] = _pyctp.CQdpFtdcOrderField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CQdpFtdcOrderField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CQdpFtdcOrderField_UserID_get, _pyctp.CQdpFtdcOrderField_UserID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CQdpFtdcOrderField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CQdpFtdcOrderField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CQdpFtdcOrderField_InstrumentID_get, _pyctp.CQdpFtdcOrderField_InstrumentID_set)
    __swig_setmethods__["UserOrderLocalID"] = _pyctp.CQdpFtdcOrderField_UserOrderLocalID_set
    __swig_getmethods__["UserOrderLocalID"] = _pyctp.CQdpFtdcOrderField_UserOrderLocalID_get
    if _newclass:
        UserOrderLocalID = _swig_property(_pyctp.CQdpFtdcOrderField_UserOrderLocalID_get, _pyctp.CQdpFtdcOrderField_UserOrderLocalID_set)
    __swig_setmethods__["OrderPriceType"] = _pyctp.CQdpFtdcOrderField_OrderPriceType_set
    __swig_getmethods__["OrderPriceType"] = _pyctp.CQdpFtdcOrderField_OrderPriceType_get
    if _newclass:
        OrderPriceType = _swig_property(_pyctp.CQdpFtdcOrderField_OrderPriceType_get, _pyctp.CQdpFtdcOrderField_OrderPriceType_set)
    __swig_setmethods__["Direction"] = _pyctp.CQdpFtdcOrderField_Direction_set
    __swig_getmethods__["Direction"] = _pyctp.CQdpFtdcOrderField_Direction_get
    if _newclass:
        Direction = _swig_property(_pyctp.CQdpFtdcOrderField_Direction_get, _pyctp.CQdpFtdcOrderField_Direction_set)
    __swig_setmethods__["OffsetFlag"] = _pyctp.CQdpFtdcOrderField_OffsetFlag_set
    __swig_getmethods__["OffsetFlag"] = _pyctp.CQdpFtdcOrderField_OffsetFlag_get
    if _newclass:
        OffsetFlag = _swig_property(_pyctp.CQdpFtdcOrderField_OffsetFlag_get, _pyctp.CQdpFtdcOrderField_OffsetFlag_set)
    __swig_setmethods__["HedgeFlag"] = _pyctp.CQdpFtdcOrderField_HedgeFlag_set
    __swig_getmethods__["HedgeFlag"] = _pyctp.CQdpFtdcOrderField_HedgeFlag_get
    if _newclass:
        HedgeFlag = _swig_property(_pyctp.CQdpFtdcOrderField_HedgeFlag_get, _pyctp.CQdpFtdcOrderField_HedgeFlag_set)
    __swig_setmethods__["LimitPrice"] = _pyctp.CQdpFtdcOrderField_LimitPrice_set
    __swig_getmethods__["LimitPrice"] = _pyctp.CQdpFtdcOrderField_LimitPrice_get
    if _newclass:
        LimitPrice = _swig_property(_pyctp.CQdpFtdcOrderField_LimitPrice_get, _pyctp.CQdpFtdcOrderField_LimitPrice_set)
    __swig_setmethods__["Volume"] = _pyctp.CQdpFtdcOrderField_Volume_set
    __swig_getmethods__["Volume"] = _pyctp.CQdpFtdcOrderField_Volume_get
    if _newclass:
        Volume = _swig_property(_pyctp.CQdpFtdcOrderField_Volume_get, _pyctp.CQdpFtdcOrderField_Volume_set)
    __swig_setmethods__["TimeCondition"] = _pyctp.CQdpFtdcOrderField_TimeCondition_set
    __swig_getmethods__["TimeCondition"] = _pyctp.CQdpFtdcOrderField_TimeCondition_get
    if _newclass:
        TimeCondition = _swig_property(_pyctp.CQdpFtdcOrderField_TimeCondition_get, _pyctp.CQdpFtdcOrderField_TimeCondition_set)
    __swig_setmethods__["GTDDate"] = _pyctp.CQdpFtdcOrderField_GTDDate_set
    __swig_getmethods__["GTDDate"] = _pyctp.CQdpFtdcOrderField_GTDDate_get
    if _newclass:
        GTDDate = _swig_property(_pyctp.CQdpFtdcOrderField_GTDDate_get, _pyctp.CQdpFtdcOrderField_GTDDate_set)
    __swig_setmethods__["VolumeCondition"] = _pyctp.CQdpFtdcOrderField_VolumeCondition_set
    __swig_getmethods__["VolumeCondition"] = _pyctp.CQdpFtdcOrderField_VolumeCondition_get
    if _newclass:
        VolumeCondition = _swig_property(_pyctp.CQdpFtdcOrderField_VolumeCondition_get, _pyctp.CQdpFtdcOrderField_VolumeCondition_set)
    __swig_setmethods__["MinVolume"] = _pyctp.CQdpFtdcOrderField_MinVolume_set
    __swig_getmethods__["MinVolume"] = _pyctp.CQdpFtdcOrderField_MinVolume_get
    if _newclass:
        MinVolume = _swig_property(_pyctp.CQdpFtdcOrderField_MinVolume_get, _pyctp.CQdpFtdcOrderField_MinVolume_set)
    __swig_setmethods__["StopPrice"] = _pyctp.CQdpFtdcOrderField_StopPrice_set
    __swig_getmethods__["StopPrice"] = _pyctp.CQdpFtdcOrderField_StopPrice_get
    if _newclass:
        StopPrice = _swig_property(_pyctp.CQdpFtdcOrderField_StopPrice_get, _pyctp.CQdpFtdcOrderField_StopPrice_set)
    __swig_setmethods__["ForceCloseReason"] = _pyctp.CQdpFtdcOrderField_ForceCloseReason_set
    __swig_getmethods__["ForceCloseReason"] = _pyctp.CQdpFtdcOrderField_ForceCloseReason_get
    if _newclass:
        ForceCloseReason = _swig_property(_pyctp.CQdpFtdcOrderField_ForceCloseReason_get, _pyctp.CQdpFtdcOrderField_ForceCloseReason_set)
    __swig_setmethods__["IsAutoSuspend"] = _pyctp.CQdpFtdcOrderField_IsAutoSuspend_set
    __swig_getmethods__["IsAutoSuspend"] = _pyctp.CQdpFtdcOrderField_IsAutoSuspend_get
    if _newclass:
        IsAutoSuspend = _swig_property(_pyctp.CQdpFtdcOrderField_IsAutoSuspend_get, _pyctp.CQdpFtdcOrderField_IsAutoSuspend_set)
    __swig_setmethods__["BusinessUnit"] = _pyctp.CQdpFtdcOrderField_BusinessUnit_set
    __swig_getmethods__["BusinessUnit"] = _pyctp.CQdpFtdcOrderField_BusinessUnit_get
    if _newclass:
        BusinessUnit = _swig_property(_pyctp.CQdpFtdcOrderField_BusinessUnit_get, _pyctp.CQdpFtdcOrderField_BusinessUnit_set)
    __swig_setmethods__["UserCustom"] = _pyctp.CQdpFtdcOrderField_UserCustom_set
    __swig_getmethods__["UserCustom"] = _pyctp.CQdpFtdcOrderField_UserCustom_get
    if _newclass:
        UserCustom = _swig_property(_pyctp.CQdpFtdcOrderField_UserCustom_get, _pyctp.CQdpFtdcOrderField_UserCustom_set)
    __swig_setmethods__["BranchID"] = _pyctp.CQdpFtdcOrderField_BranchID_set
    __swig_getmethods__["BranchID"] = _pyctp.CQdpFtdcOrderField_BranchID_get
    if _newclass:
        BranchID = _swig_property(_pyctp.CQdpFtdcOrderField_BranchID_get, _pyctp.CQdpFtdcOrderField_BranchID_set)
    __swig_setmethods__["RecNum"] = _pyctp.CQdpFtdcOrderField_RecNum_set
    __swig_getmethods__["RecNum"] = _pyctp.CQdpFtdcOrderField_RecNum_get
    if _newclass:
        RecNum = _swig_property(_pyctp.CQdpFtdcOrderField_RecNum_get, _pyctp.CQdpFtdcOrderField_RecNum_set)
    __swig_setmethods__["BusinessType"] = _pyctp.CQdpFtdcOrderField_BusinessType_set
    __swig_getmethods__["BusinessType"] = _pyctp.CQdpFtdcOrderField_BusinessType_get
    if _newclass:
        BusinessType = _swig_property(_pyctp.CQdpFtdcOrderField_BusinessType_get, _pyctp.CQdpFtdcOrderField_BusinessType_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CQdpFtdcOrderField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CQdpFtdcOrderField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CQdpFtdcOrderField_TradingDay_get, _pyctp.CQdpFtdcOrderField_TradingDay_set)
    __swig_setmethods__["ParticipantID"] = _pyctp.CQdpFtdcOrderField_ParticipantID_set
    __swig_getmethods__["ParticipantID"] = _pyctp.CQdpFtdcOrderField_ParticipantID_get
    if _newclass:
        ParticipantID = _swig_property(_pyctp.CQdpFtdcOrderField_ParticipantID_get, _pyctp.CQdpFtdcOrderField_ParticipantID_set)
    __swig_setmethods__["ClientID"] = _pyctp.CQdpFtdcOrderField_ClientID_set
    __swig_getmethods__["ClientID"] = _pyctp.CQdpFtdcOrderField_ClientID_get
    if _newclass:
        ClientID = _swig_property(_pyctp.CQdpFtdcOrderField_ClientID_get, _pyctp.CQdpFtdcOrderField_ClientID_set)
    __swig_setmethods__["SeatID"] = _pyctp.CQdpFtdcOrderField_SeatID_set
    __swig_getmethods__["SeatID"] = _pyctp.CQdpFtdcOrderField_SeatID_get
    if _newclass:
        SeatID = _swig_property(_pyctp.CQdpFtdcOrderField_SeatID_get, _pyctp.CQdpFtdcOrderField_SeatID_set)
    __swig_setmethods__["InsertTime"] = _pyctp.CQdpFtdcOrderField_InsertTime_set
    __swig_getmethods__["InsertTime"] = _pyctp.CQdpFtdcOrderField_InsertTime_get
    if _newclass:
        InsertTime = _swig_property(_pyctp.CQdpFtdcOrderField_InsertTime_get, _pyctp.CQdpFtdcOrderField_InsertTime_set)
    __swig_setmethods__["OrderLocalID"] = _pyctp.CQdpFtdcOrderField_OrderLocalID_set
    __swig_getmethods__["OrderLocalID"] = _pyctp.CQdpFtdcOrderField_OrderLocalID_get
    if _newclass:
        OrderLocalID = _swig_property(_pyctp.CQdpFtdcOrderField_OrderLocalID_get, _pyctp.CQdpFtdcOrderField_OrderLocalID_set)
    __swig_setmethods__["OrderSource"] = _pyctp.CQdpFtdcOrderField_OrderSource_set
    __swig_getmethods__["OrderSource"] = _pyctp.CQdpFtdcOrderField_OrderSource_get
    if _newclass:
        OrderSource = _swig_property(_pyctp.CQdpFtdcOrderField_OrderSource_get, _pyctp.CQdpFtdcOrderField_OrderSource_set)
    __swig_setmethods__["OrderStatus"] = _pyctp.CQdpFtdcOrderField_OrderStatus_set
    __swig_getmethods__["OrderStatus"] = _pyctp.CQdpFtdcOrderField_OrderStatus_get
    if _newclass:
        OrderStatus = _swig_property(_pyctp.CQdpFtdcOrderField_OrderStatus_get, _pyctp.CQdpFtdcOrderField_OrderStatus_set)
    __swig_setmethods__["CancelTime"] = _pyctp.CQdpFtdcOrderField_CancelTime_set
    __swig_getmethods__["CancelTime"] = _pyctp.CQdpFtdcOrderField_CancelTime_get
    if _newclass:
        CancelTime = _swig_property(_pyctp.CQdpFtdcOrderField_CancelTime_get, _pyctp.CQdpFtdcOrderField_CancelTime_set)
    __swig_setmethods__["CancelUserID"] = _pyctp.CQdpFtdcOrderField_CancelUserID_set
    __swig_getmethods__["CancelUserID"] = _pyctp.CQdpFtdcOrderField_CancelUserID_get
    if _newclass:
        CancelUserID = _swig_property(_pyctp.CQdpFtdcOrderField_CancelUserID_get, _pyctp.CQdpFtdcOrderField_CancelUserID_set)
    __swig_setmethods__["VolumeTraded"] = _pyctp.CQdpFtdcOrderField_VolumeTraded_set
    __swig_getmethods__["VolumeTraded"] = _pyctp.CQdpFtdcOrderField_VolumeTraded_get
    if _newclass:
        VolumeTraded = _swig_property(_pyctp.CQdpFtdcOrderField_VolumeTraded_get, _pyctp.CQdpFtdcOrderField_VolumeTraded_set)
    __swig_setmethods__["VolumeRemain"] = _pyctp.CQdpFtdcOrderField_VolumeRemain_set
    __swig_getmethods__["VolumeRemain"] = _pyctp.CQdpFtdcOrderField_VolumeRemain_get
    if _newclass:
        VolumeRemain = _swig_property(_pyctp.CQdpFtdcOrderField_VolumeRemain_get, _pyctp.CQdpFtdcOrderField_VolumeRemain_set)
    __swig_setmethods__["FrontID"] = _pyctp.CQdpFtdcOrderField_FrontID_set
    __swig_getmethods__["FrontID"] = _pyctp.CQdpFtdcOrderField_FrontID_get
    if _newclass:
        FrontID = _swig_property(_pyctp.CQdpFtdcOrderField_FrontID_get, _pyctp.CQdpFtdcOrderField_FrontID_set)
    __swig_setmethods__["SessionID"] = _pyctp.CQdpFtdcOrderField_SessionID_set
    __swig_getmethods__["SessionID"] = _pyctp.CQdpFtdcOrderField_SessionID_get
    if _newclass:
        SessionID = _swig_property(_pyctp.CQdpFtdcOrderField_SessionID_get, _pyctp.CQdpFtdcOrderField_SessionID_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcOrderField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcOrderField
    __del__ = lambda self: None
CQdpFtdcOrderField_swigregister = _pyctp.CQdpFtdcOrderField_swigregister
CQdpFtdcOrderField_swigregister(CQdpFtdcOrderField)

class CQdpFtdcFlowMessageCancelField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcFlowMessageCancelField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcFlowMessageCancelField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["SequenceSeries"] = _pyctp.CQdpFtdcFlowMessageCancelField_SequenceSeries_set
    __swig_getmethods__["SequenceSeries"] = _pyctp.CQdpFtdcFlowMessageCancelField_SequenceSeries_get
    if _newclass:
        SequenceSeries = _swig_property(_pyctp.CQdpFtdcFlowMessageCancelField_SequenceSeries_get, _pyctp.CQdpFtdcFlowMessageCancelField_SequenceSeries_set)
    __swig_setmethods__["TradingDay"] = _pyctp.CQdpFtdcFlowMessageCancelField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CQdpFtdcFlowMessageCancelField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CQdpFtdcFlowMessageCancelField_TradingDay_get, _pyctp.CQdpFtdcFlowMessageCancelField_TradingDay_set)
    __swig_setmethods__["DataCenterID"] = _pyctp.CQdpFtdcFlowMessageCancelField_DataCenterID_set
    __swig_getmethods__["DataCenterID"] = _pyctp.CQdpFtdcFlowMessageCancelField_DataCenterID_get
    if _newclass:
        DataCenterID = _swig_property(_pyctp.CQdpFtdcFlowMessageCancelField_DataCenterID_get, _pyctp.CQdpFtdcFlowMessageCancelField_DataCenterID_set)
    __swig_setmethods__["StartSequenceNo"] = _pyctp.CQdpFtdcFlowMessageCancelField_StartSequenceNo_set
    __swig_getmethods__["StartSequenceNo"] = _pyctp.CQdpFtdcFlowMessageCancelField_StartSequenceNo_get
    if _newclass:
        StartSequenceNo = _swig_property(_pyctp.CQdpFtdcFlowMessageCancelField_StartSequenceNo_get, _pyctp.CQdpFtdcFlowMessageCancelField_StartSequenceNo_set)
    __swig_setmethods__["EndSequenceNo"] = _pyctp.CQdpFtdcFlowMessageCancelField_EndSequenceNo_set
    __swig_getmethods__["EndSequenceNo"] = _pyctp.CQdpFtdcFlowMessageCancelField_EndSequenceNo_get
    if _newclass:
        EndSequenceNo = _swig_property(_pyctp.CQdpFtdcFlowMessageCancelField_EndSequenceNo_get, _pyctp.CQdpFtdcFlowMessageCancelField_EndSequenceNo_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcFlowMessageCancelField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcFlowMessageCancelField
    __del__ = lambda self: None
CQdpFtdcFlowMessageCancelField_swigregister = _pyctp.CQdpFtdcFlowMessageCancelField_swigregister
CQdpFtdcFlowMessageCancelField_swigregister(CQdpFtdcFlowMessageCancelField)

class CQdpFtdcDisseminationField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcDisseminationField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcDisseminationField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["SequenceSeries"] = _pyctp.CQdpFtdcDisseminationField_SequenceSeries_set
    __swig_getmethods__["SequenceSeries"] = _pyctp.CQdpFtdcDisseminationField_SequenceSeries_get
    if _newclass:
        SequenceSeries = _swig_property(_pyctp.CQdpFtdcDisseminationField_SequenceSeries_get, _pyctp.CQdpFtdcDisseminationField_SequenceSeries_set)
    __swig_setmethods__["SequenceNo"] = _pyctp.CQdpFtdcDisseminationField_SequenceNo_set
    __swig_getmethods__["SequenceNo"] = _pyctp.CQdpFtdcDisseminationField_SequenceNo_get
    if _newclass:
        SequenceNo = _swig_property(_pyctp.CQdpFtdcDisseminationField_SequenceNo_get, _pyctp.CQdpFtdcDisseminationField_SequenceNo_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcDisseminationField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcDisseminationField
    __del__ = lambda self: None
CQdpFtdcDisseminationField_swigregister = _pyctp.CQdpFtdcDisseminationField_swigregister
CQdpFtdcDisseminationField_swigregister(CQdpFtdcDisseminationField)

class CQdpFtdcInvestorAccountDepositResField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcInvestorAccountDepositResField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcInvestorAccountDepositResField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CQdpFtdcInvestorAccountDepositResField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CQdpFtdcInvestorAccountDepositResField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CQdpFtdcInvestorAccountDepositResField_BrokerID_get, _pyctp.CQdpFtdcInvestorAccountDepositResField_BrokerID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CQdpFtdcInvestorAccountDepositResField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CQdpFtdcInvestorAccountDepositResField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CQdpFtdcInvestorAccountDepositResField_InvestorID_get, _pyctp.CQdpFtdcInvestorAccountDepositResField_InvestorID_set)
    __swig_setmethods__["AccountID"] = _pyctp.CQdpFtdcInvestorAccountDepositResField_AccountID_set
    __swig_getmethods__["AccountID"] = _pyctp.CQdpFtdcInvestorAccountDepositResField_AccountID_get
    if _newclass:
        AccountID = _swig_property(_pyctp.CQdpFtdcInvestorAccountDepositResField_AccountID_get, _pyctp.CQdpFtdcInvestorAccountDepositResField_AccountID_set)
    __swig_setmethods__["AccountSeqNo"] = _pyctp.CQdpFtdcInvestorAccountDepositResField_AccountSeqNo_set
    __swig_getmethods__["AccountSeqNo"] = _pyctp.CQdpFtdcInvestorAccountDepositResField_AccountSeqNo_get
    if _newclass:
        AccountSeqNo = _swig_property(_pyctp.CQdpFtdcInvestorAccountDepositResField_AccountSeqNo_get, _pyctp.CQdpFtdcInvestorAccountDepositResField_AccountSeqNo_set)
    __swig_setmethods__["AccountInsideSeqNo"] = _pyctp.CQdpFtdcInvestorAccountDepositResField_AccountInsideSeqNo_set
    __swig_getmethods__["AccountInsideSeqNo"] = _pyctp.CQdpFtdcInvestorAccountDepositResField_AccountInsideSeqNo_get
    if _newclass:
        AccountInsideSeqNo = _swig_property(_pyctp.CQdpFtdcInvestorAccountDepositResField_AccountInsideSeqNo_get, _pyctp.CQdpFtdcInvestorAccountDepositResField_AccountInsideSeqNo_set)
    __swig_setmethods__["Amount"] = _pyctp.CQdpFtdcInvestorAccountDepositResField_Amount_set
    __swig_getmethods__["Amount"] = _pyctp.CQdpFtdcInvestorAccountDepositResField_Amount_get
    if _newclass:
        Amount = _swig_property(_pyctp.CQdpFtdcInvestorAccountDepositResField_Amount_get, _pyctp.CQdpFtdcInvestorAccountDepositResField_Amount_set)
    __swig_setmethods__["AmountDirection"] = _pyctp.CQdpFtdcInvestorAccountDepositResField_AmountDirection_set
    __swig_getmethods__["AmountDirection"] = _pyctp.CQdpFtdcInvestorAccountDepositResField_AmountDirection_get
    if _newclass:
        AmountDirection = _swig_property(_pyctp.CQdpFtdcInvestorAccountDepositResField_AmountDirection_get, _pyctp.CQdpFtdcInvestorAccountDepositResField_AmountDirection_set)
    __swig_setmethods__["Available"] = _pyctp.CQdpFtdcInvestorAccountDepositResField_Available_set
    __swig_getmethods__["Available"] = _pyctp.CQdpFtdcInvestorAccountDepositResField_Available_get
    if _newclass:
        Available = _swig_property(_pyctp.CQdpFtdcInvestorAccountDepositResField_Available_get, _pyctp.CQdpFtdcInvestorAccountDepositResField_Available_set)
    __swig_setmethods__["Balance"] = _pyctp.CQdpFtdcInvestorAccountDepositResField_Balance_set
    __swig_getmethods__["Balance"] = _pyctp.CQdpFtdcInvestorAccountDepositResField_Balance_get
    if _newclass:
        Balance = _swig_property(_pyctp.CQdpFtdcInvestorAccountDepositResField_Balance_get, _pyctp.CQdpFtdcInvestorAccountDepositResField_Balance_set)
    __swig_setmethods__["UserID"] = _pyctp.CQdpFtdcInvestorAccountDepositResField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CQdpFtdcInvestorAccountDepositResField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CQdpFtdcInvestorAccountDepositResField_UserID_get, _pyctp.CQdpFtdcInvestorAccountDepositResField_UserID_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcInvestorAccountDepositResField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcInvestorAccountDepositResField
    __del__ = lambda self: None
CQdpFtdcInvestorAccountDepositResField_swigregister = _pyctp.CQdpFtdcInvestorAccountDepositResField_swigregister
CQdpFtdcInvestorAccountDepositResField_swigregister(CQdpFtdcInvestorAccountDepositResField)

class CQdpFtdcMessageNotifyInfoField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcMessageNotifyInfoField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcMessageNotifyInfoField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BrokerID"] = _pyctp.CQdpFtdcMessageNotifyInfoField_BrokerID_set
    __swig_getmethods__["BrokerID"] = _pyctp.CQdpFtdcMessageNotifyInfoField_BrokerID_get
    if _newclass:
        BrokerID = _swig_property(_pyctp.CQdpFtdcMessageNotifyInfoField_BrokerID_get, _pyctp.CQdpFtdcMessageNotifyInfoField_BrokerID_set)
    __swig_setmethods__["UserID"] = _pyctp.CQdpFtdcMessageNotifyInfoField_UserID_set
    __swig_getmethods__["UserID"] = _pyctp.CQdpFtdcMessageNotifyInfoField_UserID_get
    if _newclass:
        UserID = _swig_property(_pyctp.CQdpFtdcMessageNotifyInfoField_UserID_get, _pyctp.CQdpFtdcMessageNotifyInfoField_UserID_set)
    __swig_setmethods__["InvestorID"] = _pyctp.CQdpFtdcMessageNotifyInfoField_InvestorID_set
    __swig_getmethods__["InvestorID"] = _pyctp.CQdpFtdcMessageNotifyInfoField_InvestorID_get
    if _newclass:
        InvestorID = _swig_property(_pyctp.CQdpFtdcMessageNotifyInfoField_InvestorID_get, _pyctp.CQdpFtdcMessageNotifyInfoField_InvestorID_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CQdpFtdcMessageNotifyInfoField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CQdpFtdcMessageNotifyInfoField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CQdpFtdcMessageNotifyInfoField_ExchangeID_get, _pyctp.CQdpFtdcMessageNotifyInfoField_ExchangeID_set)
    __swig_setmethods__["Nums"] = _pyctp.CQdpFtdcMessageNotifyInfoField_Nums_set
    __swig_getmethods__["Nums"] = _pyctp.CQdpFtdcMessageNotifyInfoField_Nums_get
    if _newclass:
        Nums = _swig_property(_pyctp.CQdpFtdcMessageNotifyInfoField_Nums_get, _pyctp.CQdpFtdcMessageNotifyInfoField_Nums_set)
    __swig_setmethods__["BusinessType"] = _pyctp.CQdpFtdcMessageNotifyInfoField_BusinessType_set
    __swig_getmethods__["BusinessType"] = _pyctp.CQdpFtdcMessageNotifyInfoField_BusinessType_get
    if _newclass:
        BusinessType = _swig_property(_pyctp.CQdpFtdcMessageNotifyInfoField_BusinessType_get, _pyctp.CQdpFtdcMessageNotifyInfoField_BusinessType_set)
    __swig_setmethods__["WarnMsg"] = _pyctp.CQdpFtdcMessageNotifyInfoField_WarnMsg_set
    __swig_getmethods__["WarnMsg"] = _pyctp.CQdpFtdcMessageNotifyInfoField_WarnMsg_get
    if _newclass:
        WarnMsg = _swig_property(_pyctp.CQdpFtdcMessageNotifyInfoField_WarnMsg_get, _pyctp.CQdpFtdcMessageNotifyInfoField_WarnMsg_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcMessageNotifyInfoField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcMessageNotifyInfoField
    __del__ = lambda self: None
CQdpFtdcMessageNotifyInfoField_swigregister = _pyctp.CQdpFtdcMessageNotifyInfoField_swigregister
CQdpFtdcMessageNotifyInfoField_swigregister(CQdpFtdcMessageNotifyInfoField)

class CQdpFtdcMarketDataBaseField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcMarketDataBaseField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcMarketDataBaseField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradingDay"] = _pyctp.CQdpFtdcMarketDataBaseField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CQdpFtdcMarketDataBaseField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CQdpFtdcMarketDataBaseField_TradingDay_get, _pyctp.CQdpFtdcMarketDataBaseField_TradingDay_set)
    __swig_setmethods__["SettlementGroupID"] = _pyctp.CQdpFtdcMarketDataBaseField_SettlementGroupID_set
    __swig_getmethods__["SettlementGroupID"] = _pyctp.CQdpFtdcMarketDataBaseField_SettlementGroupID_get
    if _newclass:
        SettlementGroupID = _swig_property(_pyctp.CQdpFtdcMarketDataBaseField_SettlementGroupID_get, _pyctp.CQdpFtdcMarketDataBaseField_SettlementGroupID_set)
    __swig_setmethods__["SettlementID"] = _pyctp.CQdpFtdcMarketDataBaseField_SettlementID_set
    __swig_getmethods__["SettlementID"] = _pyctp.CQdpFtdcMarketDataBaseField_SettlementID_get
    if _newclass:
        SettlementID = _swig_property(_pyctp.CQdpFtdcMarketDataBaseField_SettlementID_get, _pyctp.CQdpFtdcMarketDataBaseField_SettlementID_set)
    __swig_setmethods__["PreSettlementPrice"] = _pyctp.CQdpFtdcMarketDataBaseField_PreSettlementPrice_set
    __swig_getmethods__["PreSettlementPrice"] = _pyctp.CQdpFtdcMarketDataBaseField_PreSettlementPrice_get
    if _newclass:
        PreSettlementPrice = _swig_property(_pyctp.CQdpFtdcMarketDataBaseField_PreSettlementPrice_get, _pyctp.CQdpFtdcMarketDataBaseField_PreSettlementPrice_set)
    __swig_setmethods__["PreClosePrice"] = _pyctp.CQdpFtdcMarketDataBaseField_PreClosePrice_set
    __swig_getmethods__["PreClosePrice"] = _pyctp.CQdpFtdcMarketDataBaseField_PreClosePrice_get
    if _newclass:
        PreClosePrice = _swig_property(_pyctp.CQdpFtdcMarketDataBaseField_PreClosePrice_get, _pyctp.CQdpFtdcMarketDataBaseField_PreClosePrice_set)
    __swig_setmethods__["PreOpenInterest"] = _pyctp.CQdpFtdcMarketDataBaseField_PreOpenInterest_set
    __swig_getmethods__["PreOpenInterest"] = _pyctp.CQdpFtdcMarketDataBaseField_PreOpenInterest_get
    if _newclass:
        PreOpenInterest = _swig_property(_pyctp.CQdpFtdcMarketDataBaseField_PreOpenInterest_get, _pyctp.CQdpFtdcMarketDataBaseField_PreOpenInterest_set)
    __swig_setmethods__["PreDelta"] = _pyctp.CQdpFtdcMarketDataBaseField_PreDelta_set
    __swig_getmethods__["PreDelta"] = _pyctp.CQdpFtdcMarketDataBaseField_PreDelta_get
    if _newclass:
        PreDelta = _swig_property(_pyctp.CQdpFtdcMarketDataBaseField_PreDelta_get, _pyctp.CQdpFtdcMarketDataBaseField_PreDelta_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcMarketDataBaseField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcMarketDataBaseField
    __del__ = lambda self: None
CQdpFtdcMarketDataBaseField_swigregister = _pyctp.CQdpFtdcMarketDataBaseField_swigregister
CQdpFtdcMarketDataBaseField_swigregister(CQdpFtdcMarketDataBaseField)

class CQdpFtdcMarketDataStaticField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcMarketDataStaticField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcMarketDataStaticField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["OpenPrice"] = _pyctp.CQdpFtdcMarketDataStaticField_OpenPrice_set
    __swig_getmethods__["OpenPrice"] = _pyctp.CQdpFtdcMarketDataStaticField_OpenPrice_get
    if _newclass:
        OpenPrice = _swig_property(_pyctp.CQdpFtdcMarketDataStaticField_OpenPrice_get, _pyctp.CQdpFtdcMarketDataStaticField_OpenPrice_set)
    __swig_setmethods__["HighestPrice"] = _pyctp.CQdpFtdcMarketDataStaticField_HighestPrice_set
    __swig_getmethods__["HighestPrice"] = _pyctp.CQdpFtdcMarketDataStaticField_HighestPrice_get
    if _newclass:
        HighestPrice = _swig_property(_pyctp.CQdpFtdcMarketDataStaticField_HighestPrice_get, _pyctp.CQdpFtdcMarketDataStaticField_HighestPrice_set)
    __swig_setmethods__["LowestPrice"] = _pyctp.CQdpFtdcMarketDataStaticField_LowestPrice_set
    __swig_getmethods__["LowestPrice"] = _pyctp.CQdpFtdcMarketDataStaticField_LowestPrice_get
    if _newclass:
        LowestPrice = _swig_property(_pyctp.CQdpFtdcMarketDataStaticField_LowestPrice_get, _pyctp.CQdpFtdcMarketDataStaticField_LowestPrice_set)
    __swig_setmethods__["ClosePrice"] = _pyctp.CQdpFtdcMarketDataStaticField_ClosePrice_set
    __swig_getmethods__["ClosePrice"] = _pyctp.CQdpFtdcMarketDataStaticField_ClosePrice_get
    if _newclass:
        ClosePrice = _swig_property(_pyctp.CQdpFtdcMarketDataStaticField_ClosePrice_get, _pyctp.CQdpFtdcMarketDataStaticField_ClosePrice_set)
    __swig_setmethods__["UpperLimitPrice"] = _pyctp.CQdpFtdcMarketDataStaticField_UpperLimitPrice_set
    __swig_getmethods__["UpperLimitPrice"] = _pyctp.CQdpFtdcMarketDataStaticField_UpperLimitPrice_get
    if _newclass:
        UpperLimitPrice = _swig_property(_pyctp.CQdpFtdcMarketDataStaticField_UpperLimitPrice_get, _pyctp.CQdpFtdcMarketDataStaticField_UpperLimitPrice_set)
    __swig_setmethods__["LowerLimitPrice"] = _pyctp.CQdpFtdcMarketDataStaticField_LowerLimitPrice_set
    __swig_getmethods__["LowerLimitPrice"] = _pyctp.CQdpFtdcMarketDataStaticField_LowerLimitPrice_get
    if _newclass:
        LowerLimitPrice = _swig_property(_pyctp.CQdpFtdcMarketDataStaticField_LowerLimitPrice_get, _pyctp.CQdpFtdcMarketDataStaticField_LowerLimitPrice_set)
    __swig_setmethods__["SettlementPrice"] = _pyctp.CQdpFtdcMarketDataStaticField_SettlementPrice_set
    __swig_getmethods__["SettlementPrice"] = _pyctp.CQdpFtdcMarketDataStaticField_SettlementPrice_get
    if _newclass:
        SettlementPrice = _swig_property(_pyctp.CQdpFtdcMarketDataStaticField_SettlementPrice_get, _pyctp.CQdpFtdcMarketDataStaticField_SettlementPrice_set)
    __swig_setmethods__["CurrDelta"] = _pyctp.CQdpFtdcMarketDataStaticField_CurrDelta_set
    __swig_getmethods__["CurrDelta"] = _pyctp.CQdpFtdcMarketDataStaticField_CurrDelta_get
    if _newclass:
        CurrDelta = _swig_property(_pyctp.CQdpFtdcMarketDataStaticField_CurrDelta_get, _pyctp.CQdpFtdcMarketDataStaticField_CurrDelta_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcMarketDataStaticField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcMarketDataStaticField
    __del__ = lambda self: None
CQdpFtdcMarketDataStaticField_swigregister = _pyctp.CQdpFtdcMarketDataStaticField_swigregister
CQdpFtdcMarketDataStaticField_swigregister(CQdpFtdcMarketDataStaticField)

class CQdpFtdcMarketDataLastMatchField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcMarketDataLastMatchField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcMarketDataLastMatchField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["LastPrice"] = _pyctp.CQdpFtdcMarketDataLastMatchField_LastPrice_set
    __swig_getmethods__["LastPrice"] = _pyctp.CQdpFtdcMarketDataLastMatchField_LastPrice_get
    if _newclass:
        LastPrice = _swig_property(_pyctp.CQdpFtdcMarketDataLastMatchField_LastPrice_get, _pyctp.CQdpFtdcMarketDataLastMatchField_LastPrice_set)
    __swig_setmethods__["Volume"] = _pyctp.CQdpFtdcMarketDataLastMatchField_Volume_set
    __swig_getmethods__["Volume"] = _pyctp.CQdpFtdcMarketDataLastMatchField_Volume_get
    if _newclass:
        Volume = _swig_property(_pyctp.CQdpFtdcMarketDataLastMatchField_Volume_get, _pyctp.CQdpFtdcMarketDataLastMatchField_Volume_set)
    __swig_setmethods__["Turnover"] = _pyctp.CQdpFtdcMarketDataLastMatchField_Turnover_set
    __swig_getmethods__["Turnover"] = _pyctp.CQdpFtdcMarketDataLastMatchField_Turnover_get
    if _newclass:
        Turnover = _swig_property(_pyctp.CQdpFtdcMarketDataLastMatchField_Turnover_get, _pyctp.CQdpFtdcMarketDataLastMatchField_Turnover_set)
    __swig_setmethods__["OpenInterest"] = _pyctp.CQdpFtdcMarketDataLastMatchField_OpenInterest_set
    __swig_getmethods__["OpenInterest"] = _pyctp.CQdpFtdcMarketDataLastMatchField_OpenInterest_get
    if _newclass:
        OpenInterest = _swig_property(_pyctp.CQdpFtdcMarketDataLastMatchField_OpenInterest_get, _pyctp.CQdpFtdcMarketDataLastMatchField_OpenInterest_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcMarketDataLastMatchField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcMarketDataLastMatchField
    __del__ = lambda self: None
CQdpFtdcMarketDataLastMatchField_swigregister = _pyctp.CQdpFtdcMarketDataLastMatchField_swigregister
CQdpFtdcMarketDataLastMatchField_swigregister(CQdpFtdcMarketDataLastMatchField)

class CQdpFtdcMarketDataBestPriceField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcMarketDataBestPriceField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcMarketDataBestPriceField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BidPrice1"] = _pyctp.CQdpFtdcMarketDataBestPriceField_BidPrice1_set
    __swig_getmethods__["BidPrice1"] = _pyctp.CQdpFtdcMarketDataBestPriceField_BidPrice1_get
    if _newclass:
        BidPrice1 = _swig_property(_pyctp.CQdpFtdcMarketDataBestPriceField_BidPrice1_get, _pyctp.CQdpFtdcMarketDataBestPriceField_BidPrice1_set)
    __swig_setmethods__["BidVolume1"] = _pyctp.CQdpFtdcMarketDataBestPriceField_BidVolume1_set
    __swig_getmethods__["BidVolume1"] = _pyctp.CQdpFtdcMarketDataBestPriceField_BidVolume1_get
    if _newclass:
        BidVolume1 = _swig_property(_pyctp.CQdpFtdcMarketDataBestPriceField_BidVolume1_get, _pyctp.CQdpFtdcMarketDataBestPriceField_BidVolume1_set)
    __swig_setmethods__["AskPrice1"] = _pyctp.CQdpFtdcMarketDataBestPriceField_AskPrice1_set
    __swig_getmethods__["AskPrice1"] = _pyctp.CQdpFtdcMarketDataBestPriceField_AskPrice1_get
    if _newclass:
        AskPrice1 = _swig_property(_pyctp.CQdpFtdcMarketDataBestPriceField_AskPrice1_get, _pyctp.CQdpFtdcMarketDataBestPriceField_AskPrice1_set)
    __swig_setmethods__["AskVolume1"] = _pyctp.CQdpFtdcMarketDataBestPriceField_AskVolume1_set
    __swig_getmethods__["AskVolume1"] = _pyctp.CQdpFtdcMarketDataBestPriceField_AskVolume1_get
    if _newclass:
        AskVolume1 = _swig_property(_pyctp.CQdpFtdcMarketDataBestPriceField_AskVolume1_get, _pyctp.CQdpFtdcMarketDataBestPriceField_AskVolume1_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcMarketDataBestPriceField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcMarketDataBestPriceField
    __del__ = lambda self: None
CQdpFtdcMarketDataBestPriceField_swigregister = _pyctp.CQdpFtdcMarketDataBestPriceField_swigregister
CQdpFtdcMarketDataBestPriceField_swigregister(CQdpFtdcMarketDataBestPriceField)

class CQdpFtdcMarketDataBid23Field(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcMarketDataBid23Field, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcMarketDataBid23Field, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BidPrice2"] = _pyctp.CQdpFtdcMarketDataBid23Field_BidPrice2_set
    __swig_getmethods__["BidPrice2"] = _pyctp.CQdpFtdcMarketDataBid23Field_BidPrice2_get
    if _newclass:
        BidPrice2 = _swig_property(_pyctp.CQdpFtdcMarketDataBid23Field_BidPrice2_get, _pyctp.CQdpFtdcMarketDataBid23Field_BidPrice2_set)
    __swig_setmethods__["BidVolume2"] = _pyctp.CQdpFtdcMarketDataBid23Field_BidVolume2_set
    __swig_getmethods__["BidVolume2"] = _pyctp.CQdpFtdcMarketDataBid23Field_BidVolume2_get
    if _newclass:
        BidVolume2 = _swig_property(_pyctp.CQdpFtdcMarketDataBid23Field_BidVolume2_get, _pyctp.CQdpFtdcMarketDataBid23Field_BidVolume2_set)
    __swig_setmethods__["BidPrice3"] = _pyctp.CQdpFtdcMarketDataBid23Field_BidPrice3_set
    __swig_getmethods__["BidPrice3"] = _pyctp.CQdpFtdcMarketDataBid23Field_BidPrice3_get
    if _newclass:
        BidPrice3 = _swig_property(_pyctp.CQdpFtdcMarketDataBid23Field_BidPrice3_get, _pyctp.CQdpFtdcMarketDataBid23Field_BidPrice3_set)
    __swig_setmethods__["BidVolume3"] = _pyctp.CQdpFtdcMarketDataBid23Field_BidVolume3_set
    __swig_getmethods__["BidVolume3"] = _pyctp.CQdpFtdcMarketDataBid23Field_BidVolume3_get
    if _newclass:
        BidVolume3 = _swig_property(_pyctp.CQdpFtdcMarketDataBid23Field_BidVolume3_get, _pyctp.CQdpFtdcMarketDataBid23Field_BidVolume3_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcMarketDataBid23Field()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcMarketDataBid23Field
    __del__ = lambda self: None
CQdpFtdcMarketDataBid23Field_swigregister = _pyctp.CQdpFtdcMarketDataBid23Field_swigregister
CQdpFtdcMarketDataBid23Field_swigregister(CQdpFtdcMarketDataBid23Field)

class CQdpFtdcMarketDataAsk23Field(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcMarketDataAsk23Field, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcMarketDataAsk23Field, name)
    __repr__ = _swig_repr
    __swig_setmethods__["AskPrice2"] = _pyctp.CQdpFtdcMarketDataAsk23Field_AskPrice2_set
    __swig_getmethods__["AskPrice2"] = _pyctp.CQdpFtdcMarketDataAsk23Field_AskPrice2_get
    if _newclass:
        AskPrice2 = _swig_property(_pyctp.CQdpFtdcMarketDataAsk23Field_AskPrice2_get, _pyctp.CQdpFtdcMarketDataAsk23Field_AskPrice2_set)
    __swig_setmethods__["AskVolume2"] = _pyctp.CQdpFtdcMarketDataAsk23Field_AskVolume2_set
    __swig_getmethods__["AskVolume2"] = _pyctp.CQdpFtdcMarketDataAsk23Field_AskVolume2_get
    if _newclass:
        AskVolume2 = _swig_property(_pyctp.CQdpFtdcMarketDataAsk23Field_AskVolume2_get, _pyctp.CQdpFtdcMarketDataAsk23Field_AskVolume2_set)
    __swig_setmethods__["AskPrice3"] = _pyctp.CQdpFtdcMarketDataAsk23Field_AskPrice3_set
    __swig_getmethods__["AskPrice3"] = _pyctp.CQdpFtdcMarketDataAsk23Field_AskPrice3_get
    if _newclass:
        AskPrice3 = _swig_property(_pyctp.CQdpFtdcMarketDataAsk23Field_AskPrice3_get, _pyctp.CQdpFtdcMarketDataAsk23Field_AskPrice3_set)
    __swig_setmethods__["AskVolume3"] = _pyctp.CQdpFtdcMarketDataAsk23Field_AskVolume3_set
    __swig_getmethods__["AskVolume3"] = _pyctp.CQdpFtdcMarketDataAsk23Field_AskVolume3_get
    if _newclass:
        AskVolume3 = _swig_property(_pyctp.CQdpFtdcMarketDataAsk23Field_AskVolume3_get, _pyctp.CQdpFtdcMarketDataAsk23Field_AskVolume3_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcMarketDataAsk23Field()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcMarketDataAsk23Field
    __del__ = lambda self: None
CQdpFtdcMarketDataAsk23Field_swigregister = _pyctp.CQdpFtdcMarketDataAsk23Field_swigregister
CQdpFtdcMarketDataAsk23Field_swigregister(CQdpFtdcMarketDataAsk23Field)

class CQdpFtdcMarketDataBid45Field(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcMarketDataBid45Field, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcMarketDataBid45Field, name)
    __repr__ = _swig_repr
    __swig_setmethods__["BidPrice4"] = _pyctp.CQdpFtdcMarketDataBid45Field_BidPrice4_set
    __swig_getmethods__["BidPrice4"] = _pyctp.CQdpFtdcMarketDataBid45Field_BidPrice4_get
    if _newclass:
        BidPrice4 = _swig_property(_pyctp.CQdpFtdcMarketDataBid45Field_BidPrice4_get, _pyctp.CQdpFtdcMarketDataBid45Field_BidPrice4_set)
    __swig_setmethods__["BidVolume4"] = _pyctp.CQdpFtdcMarketDataBid45Field_BidVolume4_set
    __swig_getmethods__["BidVolume4"] = _pyctp.CQdpFtdcMarketDataBid45Field_BidVolume4_get
    if _newclass:
        BidVolume4 = _swig_property(_pyctp.CQdpFtdcMarketDataBid45Field_BidVolume4_get, _pyctp.CQdpFtdcMarketDataBid45Field_BidVolume4_set)
    __swig_setmethods__["BidPrice5"] = _pyctp.CQdpFtdcMarketDataBid45Field_BidPrice5_set
    __swig_getmethods__["BidPrice5"] = _pyctp.CQdpFtdcMarketDataBid45Field_BidPrice5_get
    if _newclass:
        BidPrice5 = _swig_property(_pyctp.CQdpFtdcMarketDataBid45Field_BidPrice5_get, _pyctp.CQdpFtdcMarketDataBid45Field_BidPrice5_set)
    __swig_setmethods__["BidVolume5"] = _pyctp.CQdpFtdcMarketDataBid45Field_BidVolume5_set
    __swig_getmethods__["BidVolume5"] = _pyctp.CQdpFtdcMarketDataBid45Field_BidVolume5_get
    if _newclass:
        BidVolume5 = _swig_property(_pyctp.CQdpFtdcMarketDataBid45Field_BidVolume5_get, _pyctp.CQdpFtdcMarketDataBid45Field_BidVolume5_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcMarketDataBid45Field()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcMarketDataBid45Field
    __del__ = lambda self: None
CQdpFtdcMarketDataBid45Field_swigregister = _pyctp.CQdpFtdcMarketDataBid45Field_swigregister
CQdpFtdcMarketDataBid45Field_swigregister(CQdpFtdcMarketDataBid45Field)

class CQdpFtdcMarketDataAsk45Field(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcMarketDataAsk45Field, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcMarketDataAsk45Field, name)
    __repr__ = _swig_repr
    __swig_setmethods__["AskPrice4"] = _pyctp.CQdpFtdcMarketDataAsk45Field_AskPrice4_set
    __swig_getmethods__["AskPrice4"] = _pyctp.CQdpFtdcMarketDataAsk45Field_AskPrice4_get
    if _newclass:
        AskPrice4 = _swig_property(_pyctp.CQdpFtdcMarketDataAsk45Field_AskPrice4_get, _pyctp.CQdpFtdcMarketDataAsk45Field_AskPrice4_set)
    __swig_setmethods__["AskVolume4"] = _pyctp.CQdpFtdcMarketDataAsk45Field_AskVolume4_set
    __swig_getmethods__["AskVolume4"] = _pyctp.CQdpFtdcMarketDataAsk45Field_AskVolume4_get
    if _newclass:
        AskVolume4 = _swig_property(_pyctp.CQdpFtdcMarketDataAsk45Field_AskVolume4_get, _pyctp.CQdpFtdcMarketDataAsk45Field_AskVolume4_set)
    __swig_setmethods__["AskPrice5"] = _pyctp.CQdpFtdcMarketDataAsk45Field_AskPrice5_set
    __swig_getmethods__["AskPrice5"] = _pyctp.CQdpFtdcMarketDataAsk45Field_AskPrice5_get
    if _newclass:
        AskPrice5 = _swig_property(_pyctp.CQdpFtdcMarketDataAsk45Field_AskPrice5_get, _pyctp.CQdpFtdcMarketDataAsk45Field_AskPrice5_set)
    __swig_setmethods__["AskVolume5"] = _pyctp.CQdpFtdcMarketDataAsk45Field_AskVolume5_set
    __swig_getmethods__["AskVolume5"] = _pyctp.CQdpFtdcMarketDataAsk45Field_AskVolume5_get
    if _newclass:
        AskVolume5 = _swig_property(_pyctp.CQdpFtdcMarketDataAsk45Field_AskVolume5_get, _pyctp.CQdpFtdcMarketDataAsk45Field_AskVolume5_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcMarketDataAsk45Field()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcMarketDataAsk45Field
    __del__ = lambda self: None
CQdpFtdcMarketDataAsk45Field_swigregister = _pyctp.CQdpFtdcMarketDataAsk45Field_swigregister
CQdpFtdcMarketDataAsk45Field_swigregister(CQdpFtdcMarketDataAsk45Field)

class CQdpFtdcMarketDataUpdateTimeField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcMarketDataUpdateTimeField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcMarketDataUpdateTimeField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["InstrumentID"] = _pyctp.CQdpFtdcMarketDataUpdateTimeField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CQdpFtdcMarketDataUpdateTimeField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CQdpFtdcMarketDataUpdateTimeField_InstrumentID_get, _pyctp.CQdpFtdcMarketDataUpdateTimeField_InstrumentID_set)
    __swig_setmethods__["UpdateTime"] = _pyctp.CQdpFtdcMarketDataUpdateTimeField_UpdateTime_set
    __swig_getmethods__["UpdateTime"] = _pyctp.CQdpFtdcMarketDataUpdateTimeField_UpdateTime_get
    if _newclass:
        UpdateTime = _swig_property(_pyctp.CQdpFtdcMarketDataUpdateTimeField_UpdateTime_get, _pyctp.CQdpFtdcMarketDataUpdateTimeField_UpdateTime_set)
    __swig_setmethods__["UpdateMillisec"] = _pyctp.CQdpFtdcMarketDataUpdateTimeField_UpdateMillisec_set
    __swig_getmethods__["UpdateMillisec"] = _pyctp.CQdpFtdcMarketDataUpdateTimeField_UpdateMillisec_get
    if _newclass:
        UpdateMillisec = _swig_property(_pyctp.CQdpFtdcMarketDataUpdateTimeField_UpdateMillisec_get, _pyctp.CQdpFtdcMarketDataUpdateTimeField_UpdateMillisec_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcMarketDataUpdateTimeField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcMarketDataUpdateTimeField
    __del__ = lambda self: None
CQdpFtdcMarketDataUpdateTimeField_swigregister = _pyctp.CQdpFtdcMarketDataUpdateTimeField_swigregister
CQdpFtdcMarketDataUpdateTimeField_swigregister(CQdpFtdcMarketDataUpdateTimeField)

class CQdpFtdcDepthMarketDataField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcDepthMarketDataField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcDepthMarketDataField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TradingDay"] = _pyctp.CQdpFtdcDepthMarketDataField_TradingDay_set
    __swig_getmethods__["TradingDay"] = _pyctp.CQdpFtdcDepthMarketDataField_TradingDay_get
    if _newclass:
        TradingDay = _swig_property(_pyctp.CQdpFtdcDepthMarketDataField_TradingDay_get, _pyctp.CQdpFtdcDepthMarketDataField_TradingDay_set)
    __swig_setmethods__["SettlementGroupID"] = _pyctp.CQdpFtdcDepthMarketDataField_SettlementGroupID_set
    __swig_getmethods__["SettlementGroupID"] = _pyctp.CQdpFtdcDepthMarketDataField_SettlementGroupID_get
    if _newclass:
        SettlementGroupID = _swig_property(_pyctp.CQdpFtdcDepthMarketDataField_SettlementGroupID_get, _pyctp.CQdpFtdcDepthMarketDataField_SettlementGroupID_set)
    __swig_setmethods__["SettlementID"] = _pyctp.CQdpFtdcDepthMarketDataField_SettlementID_set
    __swig_getmethods__["SettlementID"] = _pyctp.CQdpFtdcDepthMarketDataField_SettlementID_get
    if _newclass:
        SettlementID = _swig_property(_pyctp.CQdpFtdcDepthMarketDataField_SettlementID_get, _pyctp.CQdpFtdcDepthMarketDataField_SettlementID_set)
    __swig_setmethods__["PreSettlementPrice"] = _pyctp.CQdpFtdcDepthMarketDataField_PreSettlementPrice_set
    __swig_getmethods__["PreSettlementPrice"] = _pyctp.CQdpFtdcDepthMarketDataField_PreSettlementPrice_get
    if _newclass:
        PreSettlementPrice = _swig_property(_pyctp.CQdpFtdcDepthMarketDataField_PreSettlementPrice_get, _pyctp.CQdpFtdcDepthMarketDataField_PreSettlementPrice_set)
    __swig_setmethods__["PreClosePrice"] = _pyctp.CQdpFtdcDepthMarketDataField_PreClosePrice_set
    __swig_getmethods__["PreClosePrice"] = _pyctp.CQdpFtdcDepthMarketDataField_PreClosePrice_get
    if _newclass:
        PreClosePrice = _swig_property(_pyctp.CQdpFtdcDepthMarketDataField_PreClosePrice_get, _pyctp.CQdpFtdcDepthMarketDataField_PreClosePrice_set)
    __swig_setmethods__["PreOpenInterest"] = _pyctp.CQdpFtdcDepthMarketDataField_PreOpenInterest_set
    __swig_getmethods__["PreOpenInterest"] = _pyctp.CQdpFtdcDepthMarketDataField_PreOpenInterest_get
    if _newclass:
        PreOpenInterest = _swig_property(_pyctp.CQdpFtdcDepthMarketDataField_PreOpenInterest_get, _pyctp.CQdpFtdcDepthMarketDataField_PreOpenInterest_set)
    __swig_setmethods__["PreDelta"] = _pyctp.CQdpFtdcDepthMarketDataField_PreDelta_set
    __swig_getmethods__["PreDelta"] = _pyctp.CQdpFtdcDepthMarketDataField_PreDelta_get
    if _newclass:
        PreDelta = _swig_property(_pyctp.CQdpFtdcDepthMarketDataField_PreDelta_get, _pyctp.CQdpFtdcDepthMarketDataField_PreDelta_set)
    __swig_setmethods__["OpenPrice"] = _pyctp.CQdpFtdcDepthMarketDataField_OpenPrice_set
    __swig_getmethods__["OpenPrice"] = _pyctp.CQdpFtdcDepthMarketDataField_OpenPrice_get
    if _newclass:
        OpenPrice = _swig_property(_pyctp.CQdpFtdcDepthMarketDataField_OpenPrice_get, _pyctp.CQdpFtdcDepthMarketDataField_OpenPrice_set)
    __swig_setmethods__["HighestPrice"] = _pyctp.CQdpFtdcDepthMarketDataField_HighestPrice_set
    __swig_getmethods__["HighestPrice"] = _pyctp.CQdpFtdcDepthMarketDataField_HighestPrice_get
    if _newclass:
        HighestPrice = _swig_property(_pyctp.CQdpFtdcDepthMarketDataField_HighestPrice_get, _pyctp.CQdpFtdcDepthMarketDataField_HighestPrice_set)
    __swig_setmethods__["LowestPrice"] = _pyctp.CQdpFtdcDepthMarketDataField_LowestPrice_set
    __swig_getmethods__["LowestPrice"] = _pyctp.CQdpFtdcDepthMarketDataField_LowestPrice_get
    if _newclass:
        LowestPrice = _swig_property(_pyctp.CQdpFtdcDepthMarketDataField_LowestPrice_get, _pyctp.CQdpFtdcDepthMarketDataField_LowestPrice_set)
    __swig_setmethods__["ClosePrice"] = _pyctp.CQdpFtdcDepthMarketDataField_ClosePrice_set
    __swig_getmethods__["ClosePrice"] = _pyctp.CQdpFtdcDepthMarketDataField_ClosePrice_get
    if _newclass:
        ClosePrice = _swig_property(_pyctp.CQdpFtdcDepthMarketDataField_ClosePrice_get, _pyctp.CQdpFtdcDepthMarketDataField_ClosePrice_set)
    __swig_setmethods__["UpperLimitPrice"] = _pyctp.CQdpFtdcDepthMarketDataField_UpperLimitPrice_set
    __swig_getmethods__["UpperLimitPrice"] = _pyctp.CQdpFtdcDepthMarketDataField_UpperLimitPrice_get
    if _newclass:
        UpperLimitPrice = _swig_property(_pyctp.CQdpFtdcDepthMarketDataField_UpperLimitPrice_get, _pyctp.CQdpFtdcDepthMarketDataField_UpperLimitPrice_set)
    __swig_setmethods__["LowerLimitPrice"] = _pyctp.CQdpFtdcDepthMarketDataField_LowerLimitPrice_set
    __swig_getmethods__["LowerLimitPrice"] = _pyctp.CQdpFtdcDepthMarketDataField_LowerLimitPrice_get
    if _newclass:
        LowerLimitPrice = _swig_property(_pyctp.CQdpFtdcDepthMarketDataField_LowerLimitPrice_get, _pyctp.CQdpFtdcDepthMarketDataField_LowerLimitPrice_set)
    __swig_setmethods__["SettlementPrice"] = _pyctp.CQdpFtdcDepthMarketDataField_SettlementPrice_set
    __swig_getmethods__["SettlementPrice"] = _pyctp.CQdpFtdcDepthMarketDataField_SettlementPrice_get
    if _newclass:
        SettlementPrice = _swig_property(_pyctp.CQdpFtdcDepthMarketDataField_SettlementPrice_get, _pyctp.CQdpFtdcDepthMarketDataField_SettlementPrice_set)
    __swig_setmethods__["CurrDelta"] = _pyctp.CQdpFtdcDepthMarketDataField_CurrDelta_set
    __swig_getmethods__["CurrDelta"] = _pyctp.CQdpFtdcDepthMarketDataField_CurrDelta_get
    if _newclass:
        CurrDelta = _swig_property(_pyctp.CQdpFtdcDepthMarketDataField_CurrDelta_get, _pyctp.CQdpFtdcDepthMarketDataField_CurrDelta_set)
    __swig_setmethods__["LastPrice"] = _pyctp.CQdpFtdcDepthMarketDataField_LastPrice_set
    __swig_getmethods__["LastPrice"] = _pyctp.CQdpFtdcDepthMarketDataField_LastPrice_get
    if _newclass:
        LastPrice = _swig_property(_pyctp.CQdpFtdcDepthMarketDataField_LastPrice_get, _pyctp.CQdpFtdcDepthMarketDataField_LastPrice_set)
    __swig_setmethods__["Volume"] = _pyctp.CQdpFtdcDepthMarketDataField_Volume_set
    __swig_getmethods__["Volume"] = _pyctp.CQdpFtdcDepthMarketDataField_Volume_get
    if _newclass:
        Volume = _swig_property(_pyctp.CQdpFtdcDepthMarketDataField_Volume_get, _pyctp.CQdpFtdcDepthMarketDataField_Volume_set)
    __swig_setmethods__["Turnover"] = _pyctp.CQdpFtdcDepthMarketDataField_Turnover_set
    __swig_getmethods__["Turnover"] = _pyctp.CQdpFtdcDepthMarketDataField_Turnover_get
    if _newclass:
        Turnover = _swig_property(_pyctp.CQdpFtdcDepthMarketDataField_Turnover_get, _pyctp.CQdpFtdcDepthMarketDataField_Turnover_set)
    __swig_setmethods__["OpenInterest"] = _pyctp.CQdpFtdcDepthMarketDataField_OpenInterest_set
    __swig_getmethods__["OpenInterest"] = _pyctp.CQdpFtdcDepthMarketDataField_OpenInterest_get
    if _newclass:
        OpenInterest = _swig_property(_pyctp.CQdpFtdcDepthMarketDataField_OpenInterest_get, _pyctp.CQdpFtdcDepthMarketDataField_OpenInterest_set)
    __swig_setmethods__["BidPrice1"] = _pyctp.CQdpFtdcDepthMarketDataField_BidPrice1_set
    __swig_getmethods__["BidPrice1"] = _pyctp.CQdpFtdcDepthMarketDataField_BidPrice1_get
    if _newclass:
        BidPrice1 = _swig_property(_pyctp.CQdpFtdcDepthMarketDataField_BidPrice1_get, _pyctp.CQdpFtdcDepthMarketDataField_BidPrice1_set)
    __swig_setmethods__["BidVolume1"] = _pyctp.CQdpFtdcDepthMarketDataField_BidVolume1_set
    __swig_getmethods__["BidVolume1"] = _pyctp.CQdpFtdcDepthMarketDataField_BidVolume1_get
    if _newclass:
        BidVolume1 = _swig_property(_pyctp.CQdpFtdcDepthMarketDataField_BidVolume1_get, _pyctp.CQdpFtdcDepthMarketDataField_BidVolume1_set)
    __swig_setmethods__["AskPrice1"] = _pyctp.CQdpFtdcDepthMarketDataField_AskPrice1_set
    __swig_getmethods__["AskPrice1"] = _pyctp.CQdpFtdcDepthMarketDataField_AskPrice1_get
    if _newclass:
        AskPrice1 = _swig_property(_pyctp.CQdpFtdcDepthMarketDataField_AskPrice1_get, _pyctp.CQdpFtdcDepthMarketDataField_AskPrice1_set)
    __swig_setmethods__["AskVolume1"] = _pyctp.CQdpFtdcDepthMarketDataField_AskVolume1_set
    __swig_getmethods__["AskVolume1"] = _pyctp.CQdpFtdcDepthMarketDataField_AskVolume1_get
    if _newclass:
        AskVolume1 = _swig_property(_pyctp.CQdpFtdcDepthMarketDataField_AskVolume1_get, _pyctp.CQdpFtdcDepthMarketDataField_AskVolume1_set)
    __swig_setmethods__["BidPrice2"] = _pyctp.CQdpFtdcDepthMarketDataField_BidPrice2_set
    __swig_getmethods__["BidPrice2"] = _pyctp.CQdpFtdcDepthMarketDataField_BidPrice2_get
    if _newclass:
        BidPrice2 = _swig_property(_pyctp.CQdpFtdcDepthMarketDataField_BidPrice2_get, _pyctp.CQdpFtdcDepthMarketDataField_BidPrice2_set)
    __swig_setmethods__["BidVolume2"] = _pyctp.CQdpFtdcDepthMarketDataField_BidVolume2_set
    __swig_getmethods__["BidVolume2"] = _pyctp.CQdpFtdcDepthMarketDataField_BidVolume2_get
    if _newclass:
        BidVolume2 = _swig_property(_pyctp.CQdpFtdcDepthMarketDataField_BidVolume2_get, _pyctp.CQdpFtdcDepthMarketDataField_BidVolume2_set)
    __swig_setmethods__["BidPrice3"] = _pyctp.CQdpFtdcDepthMarketDataField_BidPrice3_set
    __swig_getmethods__["BidPrice3"] = _pyctp.CQdpFtdcDepthMarketDataField_BidPrice3_get
    if _newclass:
        BidPrice3 = _swig_property(_pyctp.CQdpFtdcDepthMarketDataField_BidPrice3_get, _pyctp.CQdpFtdcDepthMarketDataField_BidPrice3_set)
    __swig_setmethods__["BidVolume3"] = _pyctp.CQdpFtdcDepthMarketDataField_BidVolume3_set
    __swig_getmethods__["BidVolume3"] = _pyctp.CQdpFtdcDepthMarketDataField_BidVolume3_get
    if _newclass:
        BidVolume3 = _swig_property(_pyctp.CQdpFtdcDepthMarketDataField_BidVolume3_get, _pyctp.CQdpFtdcDepthMarketDataField_BidVolume3_set)
    __swig_setmethods__["AskPrice2"] = _pyctp.CQdpFtdcDepthMarketDataField_AskPrice2_set
    __swig_getmethods__["AskPrice2"] = _pyctp.CQdpFtdcDepthMarketDataField_AskPrice2_get
    if _newclass:
        AskPrice2 = _swig_property(_pyctp.CQdpFtdcDepthMarketDataField_AskPrice2_get, _pyctp.CQdpFtdcDepthMarketDataField_AskPrice2_set)
    __swig_setmethods__["AskVolume2"] = _pyctp.CQdpFtdcDepthMarketDataField_AskVolume2_set
    __swig_getmethods__["AskVolume2"] = _pyctp.CQdpFtdcDepthMarketDataField_AskVolume2_get
    if _newclass:
        AskVolume2 = _swig_property(_pyctp.CQdpFtdcDepthMarketDataField_AskVolume2_get, _pyctp.CQdpFtdcDepthMarketDataField_AskVolume2_set)
    __swig_setmethods__["AskPrice3"] = _pyctp.CQdpFtdcDepthMarketDataField_AskPrice3_set
    __swig_getmethods__["AskPrice3"] = _pyctp.CQdpFtdcDepthMarketDataField_AskPrice3_get
    if _newclass:
        AskPrice3 = _swig_property(_pyctp.CQdpFtdcDepthMarketDataField_AskPrice3_get, _pyctp.CQdpFtdcDepthMarketDataField_AskPrice3_set)
    __swig_setmethods__["AskVolume3"] = _pyctp.CQdpFtdcDepthMarketDataField_AskVolume3_set
    __swig_getmethods__["AskVolume3"] = _pyctp.CQdpFtdcDepthMarketDataField_AskVolume3_get
    if _newclass:
        AskVolume3 = _swig_property(_pyctp.CQdpFtdcDepthMarketDataField_AskVolume3_get, _pyctp.CQdpFtdcDepthMarketDataField_AskVolume3_set)
    __swig_setmethods__["BidPrice4"] = _pyctp.CQdpFtdcDepthMarketDataField_BidPrice4_set
    __swig_getmethods__["BidPrice4"] = _pyctp.CQdpFtdcDepthMarketDataField_BidPrice4_get
    if _newclass:
        BidPrice4 = _swig_property(_pyctp.CQdpFtdcDepthMarketDataField_BidPrice4_get, _pyctp.CQdpFtdcDepthMarketDataField_BidPrice4_set)
    __swig_setmethods__["BidVolume4"] = _pyctp.CQdpFtdcDepthMarketDataField_BidVolume4_set
    __swig_getmethods__["BidVolume4"] = _pyctp.CQdpFtdcDepthMarketDataField_BidVolume4_get
    if _newclass:
        BidVolume4 = _swig_property(_pyctp.CQdpFtdcDepthMarketDataField_BidVolume4_get, _pyctp.CQdpFtdcDepthMarketDataField_BidVolume4_set)
    __swig_setmethods__["BidPrice5"] = _pyctp.CQdpFtdcDepthMarketDataField_BidPrice5_set
    __swig_getmethods__["BidPrice5"] = _pyctp.CQdpFtdcDepthMarketDataField_BidPrice5_get
    if _newclass:
        BidPrice5 = _swig_property(_pyctp.CQdpFtdcDepthMarketDataField_BidPrice5_get, _pyctp.CQdpFtdcDepthMarketDataField_BidPrice5_set)
    __swig_setmethods__["BidVolume5"] = _pyctp.CQdpFtdcDepthMarketDataField_BidVolume5_set
    __swig_getmethods__["BidVolume5"] = _pyctp.CQdpFtdcDepthMarketDataField_BidVolume5_get
    if _newclass:
        BidVolume5 = _swig_property(_pyctp.CQdpFtdcDepthMarketDataField_BidVolume5_get, _pyctp.CQdpFtdcDepthMarketDataField_BidVolume5_set)
    __swig_setmethods__["AskPrice4"] = _pyctp.CQdpFtdcDepthMarketDataField_AskPrice4_set
    __swig_getmethods__["AskPrice4"] = _pyctp.CQdpFtdcDepthMarketDataField_AskPrice4_get
    if _newclass:
        AskPrice4 = _swig_property(_pyctp.CQdpFtdcDepthMarketDataField_AskPrice4_get, _pyctp.CQdpFtdcDepthMarketDataField_AskPrice4_set)
    __swig_setmethods__["AskVolume4"] = _pyctp.CQdpFtdcDepthMarketDataField_AskVolume4_set
    __swig_getmethods__["AskVolume4"] = _pyctp.CQdpFtdcDepthMarketDataField_AskVolume4_get
    if _newclass:
        AskVolume4 = _swig_property(_pyctp.CQdpFtdcDepthMarketDataField_AskVolume4_get, _pyctp.CQdpFtdcDepthMarketDataField_AskVolume4_set)
    __swig_setmethods__["AskPrice5"] = _pyctp.CQdpFtdcDepthMarketDataField_AskPrice5_set
    __swig_getmethods__["AskPrice5"] = _pyctp.CQdpFtdcDepthMarketDataField_AskPrice5_get
    if _newclass:
        AskPrice5 = _swig_property(_pyctp.CQdpFtdcDepthMarketDataField_AskPrice5_get, _pyctp.CQdpFtdcDepthMarketDataField_AskPrice5_set)
    __swig_setmethods__["AskVolume5"] = _pyctp.CQdpFtdcDepthMarketDataField_AskVolume5_set
    __swig_getmethods__["AskVolume5"] = _pyctp.CQdpFtdcDepthMarketDataField_AskVolume5_get
    if _newclass:
        AskVolume5 = _swig_property(_pyctp.CQdpFtdcDepthMarketDataField_AskVolume5_get, _pyctp.CQdpFtdcDepthMarketDataField_AskVolume5_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CQdpFtdcDepthMarketDataField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CQdpFtdcDepthMarketDataField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CQdpFtdcDepthMarketDataField_InstrumentID_get, _pyctp.CQdpFtdcDepthMarketDataField_InstrumentID_set)
    __swig_setmethods__["UpdateTime"] = _pyctp.CQdpFtdcDepthMarketDataField_UpdateTime_set
    __swig_getmethods__["UpdateTime"] = _pyctp.CQdpFtdcDepthMarketDataField_UpdateTime_get
    if _newclass:
        UpdateTime = _swig_property(_pyctp.CQdpFtdcDepthMarketDataField_UpdateTime_get, _pyctp.CQdpFtdcDepthMarketDataField_UpdateTime_set)
    __swig_setmethods__["UpdateMillisec"] = _pyctp.CQdpFtdcDepthMarketDataField_UpdateMillisec_set
    __swig_getmethods__["UpdateMillisec"] = _pyctp.CQdpFtdcDepthMarketDataField_UpdateMillisec_get
    if _newclass:
        UpdateMillisec = _swig_property(_pyctp.CQdpFtdcDepthMarketDataField_UpdateMillisec_get, _pyctp.CQdpFtdcDepthMarketDataField_UpdateMillisec_set)
    __swig_setmethods__["ExchangeID"] = _pyctp.CQdpFtdcDepthMarketDataField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CQdpFtdcDepthMarketDataField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CQdpFtdcDepthMarketDataField_ExchangeID_get, _pyctp.CQdpFtdcDepthMarketDataField_ExchangeID_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcDepthMarketDataField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcDepthMarketDataField
    __del__ = lambda self: None
CQdpFtdcDepthMarketDataField_swigregister = _pyctp.CQdpFtdcDepthMarketDataField_swigregister
CQdpFtdcDepthMarketDataField_swigregister(CQdpFtdcDepthMarketDataField)

class CQdpFtdcSpecificInstrumentField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcSpecificInstrumentField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcSpecificInstrumentField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["InstrumentID"] = _pyctp.CQdpFtdcSpecificInstrumentField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CQdpFtdcSpecificInstrumentField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CQdpFtdcSpecificInstrumentField_InstrumentID_get, _pyctp.CQdpFtdcSpecificInstrumentField_InstrumentID_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcSpecificInstrumentField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcSpecificInstrumentField
    __del__ = lambda self: None
CQdpFtdcSpecificInstrumentField_swigregister = _pyctp.CQdpFtdcSpecificInstrumentField_swigregister
CQdpFtdcSpecificInstrumentField_swigregister(CQdpFtdcSpecificInstrumentField)

class CQdpFtdcShmDepthMarketDataField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcShmDepthMarketDataField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcShmDepthMarketDataField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["InstrumentID"] = _pyctp.CQdpFtdcShmDepthMarketDataField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CQdpFtdcShmDepthMarketDataField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CQdpFtdcShmDepthMarketDataField_InstrumentID_get, _pyctp.CQdpFtdcShmDepthMarketDataField_InstrumentID_set)
    __swig_setmethods__["IPAddress"] = _pyctp.CQdpFtdcShmDepthMarketDataField_IPAddress_set
    __swig_getmethods__["IPAddress"] = _pyctp.CQdpFtdcShmDepthMarketDataField_IPAddress_get
    if _newclass:
        IPAddress = _swig_property(_pyctp.CQdpFtdcShmDepthMarketDataField_IPAddress_get, _pyctp.CQdpFtdcShmDepthMarketDataField_IPAddress_set)
    __swig_setmethods__["TopicID"] = _pyctp.CQdpFtdcShmDepthMarketDataField_TopicID_set
    __swig_getmethods__["TopicID"] = _pyctp.CQdpFtdcShmDepthMarketDataField_TopicID_get
    if _newclass:
        TopicID = _swig_property(_pyctp.CQdpFtdcShmDepthMarketDataField_TopicID_get, _pyctp.CQdpFtdcShmDepthMarketDataField_TopicID_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcShmDepthMarketDataField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcShmDepthMarketDataField
    __del__ = lambda self: None
CQdpFtdcShmDepthMarketDataField_swigregister = _pyctp.CQdpFtdcShmDepthMarketDataField_swigregister
CQdpFtdcShmDepthMarketDataField_swigregister(CQdpFtdcShmDepthMarketDataField)

class CQdpFtdcMarketDataExchangeIDField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcMarketDataExchangeIDField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcMarketDataExchangeIDField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ExchangeID"] = _pyctp.CQdpFtdcMarketDataExchangeIDField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CQdpFtdcMarketDataExchangeIDField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CQdpFtdcMarketDataExchangeIDField_ExchangeID_get, _pyctp.CQdpFtdcMarketDataExchangeIDField_ExchangeID_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcMarketDataExchangeIDField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcMarketDataExchangeIDField
    __del__ = lambda self: None
CQdpFtdcMarketDataExchangeIDField_swigregister = _pyctp.CQdpFtdcMarketDataExchangeIDField_swigregister
CQdpFtdcMarketDataExchangeIDField_swigregister(CQdpFtdcMarketDataExchangeIDField)

class CQdpFtdcTopicSearchField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcTopicSearchField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcTopicSearchField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["TopicID"] = _pyctp.CQdpFtdcTopicSearchField_TopicID_set
    __swig_getmethods__["TopicID"] = _pyctp.CQdpFtdcTopicSearchField_TopicID_get
    if _newclass:
        TopicID = _swig_property(_pyctp.CQdpFtdcTopicSearchField_TopicID_get, _pyctp.CQdpFtdcTopicSearchField_TopicID_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcTopicSearchField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcTopicSearchField
    __del__ = lambda self: None
CQdpFtdcTopicSearchField_swigregister = _pyctp.CQdpFtdcTopicSearchField_swigregister
CQdpFtdcTopicSearchField_swigregister(CQdpFtdcTopicSearchField)

class CQdpFtdcQmdInstrumentStateField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcQmdInstrumentStateField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcQmdInstrumentStateField, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ExchangeID"] = _pyctp.CQdpFtdcQmdInstrumentStateField_ExchangeID_set
    __swig_getmethods__["ExchangeID"] = _pyctp.CQdpFtdcQmdInstrumentStateField_ExchangeID_get
    if _newclass:
        ExchangeID = _swig_property(_pyctp.CQdpFtdcQmdInstrumentStateField_ExchangeID_get, _pyctp.CQdpFtdcQmdInstrumentStateField_ExchangeID_set)
    __swig_setmethods__["InstrumentID"] = _pyctp.CQdpFtdcQmdInstrumentStateField_InstrumentID_set
    __swig_getmethods__["InstrumentID"] = _pyctp.CQdpFtdcQmdInstrumentStateField_InstrumentID_get
    if _newclass:
        InstrumentID = _swig_property(_pyctp.CQdpFtdcQmdInstrumentStateField_InstrumentID_get, _pyctp.CQdpFtdcQmdInstrumentStateField_InstrumentID_set)
    __swig_setmethods__["InstrumentStatus"] = _pyctp.CQdpFtdcQmdInstrumentStateField_InstrumentStatus_set
    __swig_getmethods__["InstrumentStatus"] = _pyctp.CQdpFtdcQmdInstrumentStateField_InstrumentStatus_get
    if _newclass:
        InstrumentStatus = _swig_property(_pyctp.CQdpFtdcQmdInstrumentStateField_InstrumentStatus_get, _pyctp.CQdpFtdcQmdInstrumentStateField_InstrumentStatus_set)

    def __init__(self):
        this = _pyctp.new_CQdpFtdcQmdInstrumentStateField()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcQmdInstrumentStateField
    __del__ = lambda self: None
CQdpFtdcQmdInstrumentStateField_swigregister = _pyctp.CQdpFtdcQmdInstrumentStateField_swigregister
CQdpFtdcQmdInstrumentStateField_swigregister(CQdpFtdcQmdInstrumentStateField)

class CQdpFtdcMduserSpi(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcMduserSpi, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcMduserSpi, name)
    __repr__ = _swig_repr

    def OnFrontConnected(self):
        return _pyctp.CQdpFtdcMduserSpi_OnFrontConnected(self)

    def OnFrontDisconnected(self, nReason):
        return _pyctp.CQdpFtdcMduserSpi_OnFrontDisconnected(self, nReason)

    def OnHeartBeatWarning(self, nTimeLapse):
        return _pyctp.CQdpFtdcMduserSpi_OnHeartBeatWarning(self, nTimeLapse)

    def OnPackageStart(self, nTopicID, nSequenceNo):
        return _pyctp.CQdpFtdcMduserSpi_OnPackageStart(self, nTopicID, nSequenceNo)

    def OnPackageEnd(self, nTopicID, nSequenceNo):
        return _pyctp.CQdpFtdcMduserSpi_OnPackageEnd(self, nTopicID, nSequenceNo)

    def OnMultiHeartbeat(self, CurrTime, MultiCastIP):
        return _pyctp.CQdpFtdcMduserSpi_OnMultiHeartbeat(self, CurrTime, MultiCastIP)

    def UdpMarketData(self, qmdata):
        return _pyctp.CQdpFtdcMduserSpi_UdpMarketData(self, qmdata)

    def OnRspError(self, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CQdpFtdcMduserSpi_OnRspError(self, pRspInfo, nRequestID, bIsLast)

    def OnRspUserLogin(self, pRspUserLogin, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CQdpFtdcMduserSpi_OnRspUserLogin(self, pRspUserLogin, pRspInfo, nRequestID, bIsLast)

    def OnRspUserLogout(self, pRspUserLogout, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CQdpFtdcMduserSpi_OnRspUserLogout(self, pRspUserLogout, pRspInfo, nRequestID, bIsLast)

    def OnRtnQmdInstrumentStatu(self, pQmdInstrumentState):
        return _pyctp.CQdpFtdcMduserSpi_OnRtnQmdInstrumentStatu(self, pQmdInstrumentState)

    def OnRspSubscribeTopic(self, pDissemination, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CQdpFtdcMduserSpi_OnRspSubscribeTopic(self, pDissemination, pRspInfo, nRequestID, bIsLast)

    def OnRspQryTopic(self, pDissemination, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CQdpFtdcMduserSpi_OnRspQryTopic(self, pDissemination, pRspInfo, nRequestID, bIsLast)

    def OnRtnDepthMarketData(self, pDepthMarketData):
        return _pyctp.CQdpFtdcMduserSpi_OnRtnDepthMarketData(self, pDepthMarketData)

    def OnRspSubMarketData(self, pSpecificInstrument, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CQdpFtdcMduserSpi_OnRspSubMarketData(self, pSpecificInstrument, pRspInfo, nRequestID, bIsLast)

    def OnRspUnSubMarketData(self, pSpecificInstrument, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CQdpFtdcMduserSpi_OnRspUnSubMarketData(self, pSpecificInstrument, pRspInfo, nRequestID, bIsLast)

    def OnRspQryDepthMarketData(self, pRspMarketData, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CQdpFtdcMduserSpi_OnRspQryDepthMarketData(self, pRspMarketData, pRspInfo, nRequestID, bIsLast)

    def __init__(self):
        if self.__class__ == CQdpFtdcMduserSpi:
            _self = None
        else:
            _self = self
        this = _pyctp.new_CQdpFtdcMduserSpi(_self, )
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcMduserSpi
    __del__ = lambda self: None
    def __disown__(self):
        self.this.disown()
        _pyctp.disown_CQdpFtdcMduserSpi(self)
        return weakref_proxy(self)
CQdpFtdcMduserSpi_swigregister = _pyctp.CQdpFtdcMduserSpi_swigregister
CQdpFtdcMduserSpi_swigregister(CQdpFtdcMduserSpi)

class CQdpFtdcMduserApi(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcMduserApi, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcMduserApi, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    if _newclass:
        CreateFtdcMduserApi = staticmethod(_pyctp.CQdpFtdcMduserApi_CreateFtdcMduserApi)
    else:
        CreateFtdcMduserApi = _pyctp.CQdpFtdcMduserApi_CreateFtdcMduserApi
    if _newclass:
        GetVersion = staticmethod(_pyctp.CQdpFtdcMduserApi_GetVersion)
    else:
        GetVersion = _pyctp.CQdpFtdcMduserApi_GetVersion

    def Release(self):
        return _pyctp.CQdpFtdcMduserApi_Release(self)

    def SetMultiCast(self, bMultiCast=False):
        return _pyctp.CQdpFtdcMduserApi_SetMultiCast(self, bMultiCast)

    def RegTopicMultiAddr(self, pMultiAddr):
        return _pyctp.CQdpFtdcMduserApi_RegTopicMultiAddr(self, pMultiAddr)

    def Init(self):
        return _pyctp.CQdpFtdcMduserApi_Init(self)

    def Join(self):
        return _pyctp.CQdpFtdcMduserApi_Join(self)

    def GetTradingDay(self):
        return _pyctp.CQdpFtdcMduserApi_GetTradingDay(self)

    def RegisterFront(self, pszFrontAddress):
        return _pyctp.CQdpFtdcMduserApi_RegisterFront(self, pszFrontAddress)

    def RegisterNameServer(self, pszNsAddress):
        return _pyctp.CQdpFtdcMduserApi_RegisterNameServer(self, pszNsAddress)

    def RegisterSpi(self, pSpi):
        return _pyctp.CQdpFtdcMduserApi_RegisterSpi(self, pSpi)

    def SubscribeMarketDataTopic(self, nTopicID, nResumeType):
        return _pyctp.CQdpFtdcMduserApi_SubscribeMarketDataTopic(self, nTopicID, nResumeType)

    def SubMarketData(self, ppInstrumentID, nCount):
        return _pyctp.CQdpFtdcMduserApi_SubMarketData(self, ppInstrumentID, nCount)

    def UnSubMarketData(self, ppInstrumentID, nCount):
        return _pyctp.CQdpFtdcMduserApi_UnSubMarketData(self, ppInstrumentID, nCount)

    def SetHeartbeatTimeout(self, timeout):
        return _pyctp.CQdpFtdcMduserApi_SetHeartbeatTimeout(self, timeout)

    def ShmMarketData(self, reqfield, defdata):
        return _pyctp.CQdpFtdcMduserApi_ShmMarketData(self, reqfield, defdata)

    def setudpchannel(self, udpip):
        return _pyctp.CQdpFtdcMduserApi_setudpchannel(self, udpip)

    def ReqUserLogin(self, pReqUserLogin, nRequestID):
        return _pyctp.CQdpFtdcMduserApi_ReqUserLogin(self, pReqUserLogin, nRequestID)

    def ReqUserLogout(self, pReqUserLogout, nRequestID):
        return _pyctp.CQdpFtdcMduserApi_ReqUserLogout(self, pReqUserLogout, nRequestID)

    def ReqSubscribeTopic(self, pDissemination, nRequestID):
        return _pyctp.CQdpFtdcMduserApi_ReqSubscribeTopic(self, pDissemination, nRequestID)

    def ReqQryTopic(self, pDissemination, nRequestID):
        return _pyctp.CQdpFtdcMduserApi_ReqQryTopic(self, pDissemination, nRequestID)

    def ReqSubMarketData(self, pSpecificInstrument, nRequestID):
        return _pyctp.CQdpFtdcMduserApi_ReqSubMarketData(self, pSpecificInstrument, nRequestID)

    def ReqUnSubMarketData(self, pSpecificInstrument, nRequestID):
        return _pyctp.CQdpFtdcMduserApi_ReqUnSubMarketData(self, pSpecificInstrument, nRequestID)

    def ReqQryDepthMarketData(self, pQryMarketData, nRequestID):
        return _pyctp.CQdpFtdcMduserApi_ReqQryDepthMarketData(self, pQryMarketData, nRequestID)

    def ActiveMultiMarketData(self, TradingDay):
        return _pyctp.CQdpFtdcMduserApi_ActiveMultiMarketData(self, TradingDay)
CQdpFtdcMduserApi_swigregister = _pyctp.CQdpFtdcMduserApi_swigregister
CQdpFtdcMduserApi_swigregister(CQdpFtdcMduserApi)

def CQdpFtdcMduserApi_CreateFtdcMduserApi(*args):
    return _pyctp.CQdpFtdcMduserApi_CreateFtdcMduserApi(*args)
CQdpFtdcMduserApi_CreateFtdcMduserApi = _pyctp.CQdpFtdcMduserApi_CreateFtdcMduserApi

def CQdpFtdcMduserApi_GetVersion(nMajorVersion, nMinorVersion):
    return _pyctp.CQdpFtdcMduserApi_GetVersion(nMajorVersion, nMinorVersion)
CQdpFtdcMduserApi_GetVersion = _pyctp.CQdpFtdcMduserApi_GetVersion

class CQdpFtdcTraderSpi(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcTraderSpi, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcTraderSpi, name)
    __repr__ = _swig_repr

    def OnFrontConnected(self):
        return _pyctp.CQdpFtdcTraderSpi_OnFrontConnected(self)

    def OnFrontDisconnected(self, nReason):
        return _pyctp.CQdpFtdcTraderSpi_OnFrontDisconnected(self, nReason)

    def OnHeartBeatWarning(self, nTimeLapse):
        return _pyctp.CQdpFtdcTraderSpi_OnHeartBeatWarning(self, nTimeLapse)

    def OnPackageStart(self, nTopicID, nSequenceNo):
        return _pyctp.CQdpFtdcTraderSpi_OnPackageStart(self, nTopicID, nSequenceNo)

    def OnPackageEnd(self, nTopicID, nSequenceNo):
        return _pyctp.CQdpFtdcTraderSpi_OnPackageEnd(self, nTopicID, nSequenceNo)

    def OnRspError(self, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CQdpFtdcTraderSpi_OnRspError(self, pRspInfo, nRequestID, bIsLast)

    def OnRspUserLogin(self, pRspUserLogin, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CQdpFtdcTraderSpi_OnRspUserLogin(self, pRspUserLogin, pRspInfo, nRequestID, bIsLast)

    def OnRspUserLogout(self, pRspUserLogout, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CQdpFtdcTraderSpi_OnRspUserLogout(self, pRspUserLogout, pRspInfo, nRequestID, bIsLast)

    def OnRspUserPasswordUpdate(self, pUserPasswordUpdate, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CQdpFtdcTraderSpi_OnRspUserPasswordUpdate(self, pUserPasswordUpdate, pRspInfo, nRequestID, bIsLast)

    def OnRspOrderInsert(self, pInputOrder, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CQdpFtdcTraderSpi_OnRspOrderInsert(self, pInputOrder, pRspInfo, nRequestID, bIsLast)

    def OnRspOrderAction(self, pOrderAction, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CQdpFtdcTraderSpi_OnRspOrderAction(self, pOrderAction, pRspInfo, nRequestID, bIsLast)

    def OnRspFromBankToFutureByFuture(self, pReqTransfer, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CQdpFtdcTraderSpi_OnRspFromBankToFutureByFuture(self, pReqTransfer, pRspInfo, nRequestID, bIsLast)

    def OnRspFromFutureToBankByFuture(self, pReqTransfer, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CQdpFtdcTraderSpi_OnRspFromFutureToBankByFuture(self, pReqTransfer, pRspInfo, nRequestID, bIsLast)

    def OnRtnFlowMessageCancel(self, pFlowMessageCancel):
        return _pyctp.CQdpFtdcTraderSpi_OnRtnFlowMessageCancel(self, pFlowMessageCancel)

    def OnRtnTrade(self, pTrade):
        return _pyctp.CQdpFtdcTraderSpi_OnRtnTrade(self, pTrade)

    def OnRtnOrder(self, pOrder):
        return _pyctp.CQdpFtdcTraderSpi_OnRtnOrder(self, pOrder)

    def OnErrRtnOrderInsert(self, pInputOrder, pRspInfo):
        return _pyctp.CQdpFtdcTraderSpi_OnErrRtnOrderInsert(self, pInputOrder, pRspInfo)

    def OnErrRtnOrderAction(self, pOrderAction, pRspInfo):
        return _pyctp.CQdpFtdcTraderSpi_OnErrRtnOrderAction(self, pOrderAction, pRspInfo)

    def OnRtnInstrumentStatus(self, pInstrumentStatus):
        return _pyctp.CQdpFtdcTraderSpi_OnRtnInstrumentStatus(self, pInstrumentStatus)

    def OnRtnInvestorAccountDeposit(self, pInvestorAccountDepositRes):
        return _pyctp.CQdpFtdcTraderSpi_OnRtnInvestorAccountDeposit(self, pInvestorAccountDepositRes)

    def OnRtnMessageNotify(self, pMessageNotifyInfo):
        return _pyctp.CQdpFtdcTraderSpi_OnRtnMessageNotify(self, pMessageNotifyInfo)

    def OnErrRtnQueryBankBalanceByFuture(self, pReqQueryAccount, pRspInfo):
        return _pyctp.CQdpFtdcTraderSpi_OnErrRtnQueryBankBalanceByFuture(self, pReqQueryAccount, pRspInfo)

    def OnErrRtnBankToFutureByFuture(self, pReqTransfer, pRspInfo):
        return _pyctp.CQdpFtdcTraderSpi_OnErrRtnBankToFutureByFuture(self, pReqTransfer, pRspInfo)

    def OnErrRtnFutureToBankByFuture(self, pReqTransfer, pRspInfo):
        return _pyctp.CQdpFtdcTraderSpi_OnErrRtnFutureToBankByFuture(self, pReqTransfer, pRspInfo)

    def OnRtnQueryBankBalanceByFuture(self, pNotifyQueryAccount):
        return _pyctp.CQdpFtdcTraderSpi_OnRtnQueryBankBalanceByFuture(self, pNotifyQueryAccount)

    def OnRtnFromBankToFutureByFuture(self, pRspTransfer):
        return _pyctp.CQdpFtdcTraderSpi_OnRtnFromBankToFutureByFuture(self, pRspTransfer)

    def OnRtnFromFutureToBankByFuture(self, pRspTransfer):
        return _pyctp.CQdpFtdcTraderSpi_OnRtnFromFutureToBankByFuture(self, pRspTransfer)

    def OnRtnSGEDeferRate(self, pSGEDeferRate):
        return _pyctp.CQdpFtdcTraderSpi_OnRtnSGEDeferRate(self, pSGEDeferRate)

    def OnRspQryOrder(self, pOrder, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CQdpFtdcTraderSpi_OnRspQryOrder(self, pOrder, pRspInfo, nRequestID, bIsLast)

    def OnRspQryTrade(self, pTrade, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CQdpFtdcTraderSpi_OnRspQryTrade(self, pTrade, pRspInfo, nRequestID, bIsLast)

    def OnRspQryUserInvestor(self, pRspUserInvestor, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CQdpFtdcTraderSpi_OnRspQryUserInvestor(self, pRspUserInvestor, pRspInfo, nRequestID, bIsLast)

    def OnRspQryInvestorAccount(self, pRspInvestorAccount, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CQdpFtdcTraderSpi_OnRspQryInvestorAccount(self, pRspInvestorAccount, pRspInfo, nRequestID, bIsLast)

    def OnRspQryInstrument(self, pRspInstrument, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CQdpFtdcTraderSpi_OnRspQryInstrument(self, pRspInstrument, pRspInfo, nRequestID, bIsLast)

    def OnRspQryExchange(self, pRspExchange, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CQdpFtdcTraderSpi_OnRspQryExchange(self, pRspExchange, pRspInfo, nRequestID, bIsLast)

    def OnRspQryInvestorPosition(self, pRspInvestorPosition, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CQdpFtdcTraderSpi_OnRspQryInvestorPosition(self, pRspInvestorPosition, pRspInfo, nRequestID, bIsLast)

    def OnRspSubscribeTopic(self, pDissemination, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CQdpFtdcTraderSpi_OnRspSubscribeTopic(self, pDissemination, pRspInfo, nRequestID, bIsLast)

    def OnRspQryTopic(self, pDissemination, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CQdpFtdcTraderSpi_OnRspQryTopic(self, pDissemination, pRspInfo, nRequestID, bIsLast)

    def OnRspQryInvestorFee(self, pInvestorFee, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CQdpFtdcTraderSpi_OnRspQryInvestorFee(self, pInvestorFee, pRspInfo, nRequestID, bIsLast)

    def OnRspQryInvestorMargin(self, pInvestorMargin, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CQdpFtdcTraderSpi_OnRspQryInvestorMargin(self, pInvestorMargin, pRspInfo, nRequestID, bIsLast)

    def OnRspQryExchangeDiffTime(self, pRspExchangeDiffTime, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CQdpFtdcTraderSpi_OnRspQryExchangeDiffTime(self, pRspExchangeDiffTime, pRspInfo, nRequestID, bIsLast)

    def OnRspQryContractBank(self, pContractBank, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CQdpFtdcTraderSpi_OnRspQryContractBank(self, pContractBank, pRspInfo, nRequestID, bIsLast)

    def OnRspQueryBankAccountMoneyByFuture(self, pReqQueryAccount, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CQdpFtdcTraderSpi_OnRspQueryBankAccountMoneyByFuture(self, pReqQueryAccount, pRspInfo, nRequestID, bIsLast)

    def OnRspQryTransferSerial(self, pTransferSerial, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CQdpFtdcTraderSpi_OnRspQryTransferSerial(self, pTransferSerial, pRspInfo, nRequestID, bIsLast)

    def OnRspQrySGEDeferRate(self, pSGEDeferRate, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CQdpFtdcTraderSpi_OnRspQrySGEDeferRate(self, pSGEDeferRate, pRspInfo, nRequestID, bIsLast)

    def OnRspQryMarketData(self, pMarketData, pRspInfo, nRequestID, bIsLast):
        return _pyctp.CQdpFtdcTraderSpi_OnRspQryMarketData(self, pMarketData, pRspInfo, nRequestID, bIsLast)

    def __init__(self):
        if self.__class__ == CQdpFtdcTraderSpi:
            _self = None
        else:
            _self = self
        this = _pyctp.new_CQdpFtdcTraderSpi(_self, )
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _pyctp.delete_CQdpFtdcTraderSpi
    __del__ = lambda self: None
    def __disown__(self):
        self.this.disown()
        _pyctp.disown_CQdpFtdcTraderSpi(self)
        return weakref_proxy(self)
CQdpFtdcTraderSpi_swigregister = _pyctp.CQdpFtdcTraderSpi_swigregister
CQdpFtdcTraderSpi_swigregister(CQdpFtdcTraderSpi)

class CQdpFtdcTraderApi(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CQdpFtdcTraderApi, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CQdpFtdcTraderApi, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    if _newclass:
        CreateFtdcTraderApi = staticmethod(_pyctp.CQdpFtdcTraderApi_CreateFtdcTraderApi)
    else:
        CreateFtdcTraderApi = _pyctp.CQdpFtdcTraderApi_CreateFtdcTraderApi
    if _newclass:
        GetVersion = staticmethod(_pyctp.CQdpFtdcTraderApi_GetVersion)
    else:
        GetVersion = _pyctp.CQdpFtdcTraderApi_GetVersion

    def Release(self):
        return _pyctp.CQdpFtdcTraderApi_Release(self)

    def Init(self):
        return _pyctp.CQdpFtdcTraderApi_Init(self)

    def Join(self):
        return _pyctp.CQdpFtdcTraderApi_Join(self)

    def GetTradingDay(self):
        return _pyctp.CQdpFtdcTraderApi_GetTradingDay(self)

    def RegisterFront(self, pszFrontAddress):
        return _pyctp.CQdpFtdcTraderApi_RegisterFront(self, pszFrontAddress)

    def RegisterNameServer(self, pszNsAddress):
        return _pyctp.CQdpFtdcTraderApi_RegisterNameServer(self, pszNsAddress)

    def RegisterSpi(self, pSpi):
        return _pyctp.CQdpFtdcTraderApi_RegisterSpi(self, pSpi)

    def SubscribePrivateTopic(self, nResumeType):
        return _pyctp.CQdpFtdcTraderApi_SubscribePrivateTopic(self, nResumeType)

    def SubscribePublicTopic(self, nResumeType):
        return _pyctp.CQdpFtdcTraderApi_SubscribePublicTopic(self, nResumeType)

    def SubscribeUserTopic(self, nResumeType):
        return _pyctp.CQdpFtdcTraderApi_SubscribeUserTopic(self, nResumeType)

    def SetHeartbeatTimeout(self, timeout):
        return _pyctp.CQdpFtdcTraderApi_SetHeartbeatTimeout(self, timeout)

    def OpenRequestLog(self, pszReqLogFileName):
        return _pyctp.CQdpFtdcTraderApi_OpenRequestLog(self, pszReqLogFileName)

    def OpenResponseLog(self, pszRspLogFileName):
        return _pyctp.CQdpFtdcTraderApi_OpenResponseLog(self, pszRspLogFileName)

    def ReqUserLogin(self, pReqUserLogin, nRequestID):
        return _pyctp.CQdpFtdcTraderApi_ReqUserLogin(self, pReqUserLogin, nRequestID)

    def ReqUserLogout(self, pReqUserLogout, nRequestID):
        return _pyctp.CQdpFtdcTraderApi_ReqUserLogout(self, pReqUserLogout, nRequestID)

    def ReqUserPasswordUpdate(self, pUserPasswordUpdate, nRequestID):
        return _pyctp.CQdpFtdcTraderApi_ReqUserPasswordUpdate(self, pUserPasswordUpdate, nRequestID)

    def ReqOrderInsert(self, pInputOrder, nRequestID):
        return _pyctp.CQdpFtdcTraderApi_ReqOrderInsert(self, pInputOrder, nRequestID)

    def ReqOrderAction(self, pOrderAction, nRequestID):
        return _pyctp.CQdpFtdcTraderApi_ReqOrderAction(self, pOrderAction, nRequestID)

    def ReqFromBankToFutureByFuture(self, pReqTransfer, nRequestID):
        return _pyctp.CQdpFtdcTraderApi_ReqFromBankToFutureByFuture(self, pReqTransfer, nRequestID)

    def ReqFromFutureToBankByFuture(self, pReqTransfer, nRequestID):
        return _pyctp.CQdpFtdcTraderApi_ReqFromFutureToBankByFuture(self, pReqTransfer, nRequestID)

    def ReqQryOrder(self, pQryOrder, nRequestID):
        return _pyctp.CQdpFtdcTraderApi_ReqQryOrder(self, pQryOrder, nRequestID)

    def ReqQryTrade(self, pQryTrade, nRequestID):
        return _pyctp.CQdpFtdcTraderApi_ReqQryTrade(self, pQryTrade, nRequestID)

    def ReqQryUserInvestor(self, pQryUserInvestor, nRequestID):
        return _pyctp.CQdpFtdcTraderApi_ReqQryUserInvestor(self, pQryUserInvestor, nRequestID)

    def ReqQryInvestorAccount(self, pQryInvestorAccount, nRequestID):
        return _pyctp.CQdpFtdcTraderApi_ReqQryInvestorAccount(self, pQryInvestorAccount, nRequestID)

    def ReqQryInstrument(self, pQryInstrument, nRequestID):
        return _pyctp.CQdpFtdcTraderApi_ReqQryInstrument(self, pQryInstrument, nRequestID)

    def ReqQryExchange(self, pQryExchange, nRequestID):
        return _pyctp.CQdpFtdcTraderApi_ReqQryExchange(self, pQryExchange, nRequestID)

    def ReqQryInvestorPosition(self, pQryInvestorPosition, nRequestID):
        return _pyctp.CQdpFtdcTraderApi_ReqQryInvestorPosition(self, pQryInvestorPosition, nRequestID)

    def ReqSubscribeTopic(self, pDissemination, nRequestID):
        return _pyctp.CQdpFtdcTraderApi_ReqSubscribeTopic(self, pDissemination, nRequestID)

    def ReqQryTopic(self, pDissemination, nRequestID):
        return _pyctp.CQdpFtdcTraderApi_ReqQryTopic(self, pDissemination, nRequestID)

    def ReqQryInvestorFee(self, pQryInvestorFee, nRequestID):
        return _pyctp.CQdpFtdcTraderApi_ReqQryInvestorFee(self, pQryInvestorFee, nRequestID)

    def ReqQryInvestorMargin(self, pQryInvestorMargin, nRequestID):
        return _pyctp.CQdpFtdcTraderApi_ReqQryInvestorMargin(self, pQryInvestorMargin, nRequestID)

    def ReqQryExchangeDiffTime(self, pQryExchangeDiffTime, nRequestID):
        return _pyctp.CQdpFtdcTraderApi_ReqQryExchangeDiffTime(self, pQryExchangeDiffTime, nRequestID)

    def ReqQryContractBank(self, pQryContractBank, nRequestID):
        return _pyctp.CQdpFtdcTraderApi_ReqQryContractBank(self, pQryContractBank, nRequestID)

    def ReqQueryBankAccountMoneyByFuture(self, pReqQueryAccount, nRequestID):
        return _pyctp.CQdpFtdcTraderApi_ReqQueryBankAccountMoneyByFuture(self, pReqQueryAccount, nRequestID)

    def ReqQryTransferSerial(self, pQryTransferSerial, nRequestID):
        return _pyctp.CQdpFtdcTraderApi_ReqQryTransferSerial(self, pQryTransferSerial, nRequestID)

    def ReqQrySGEDeferRate(self, pQrySGEDeferRate, nRequestID):
        return _pyctp.CQdpFtdcTraderApi_ReqQrySGEDeferRate(self, pQrySGEDeferRate, nRequestID)

    def ReqQryMarketData(self, pQryMarketData, nRequestID):
        return _pyctp.CQdpFtdcTraderApi_ReqQryMarketData(self, pQryMarketData, nRequestID)
CQdpFtdcTraderApi_swigregister = _pyctp.CQdpFtdcTraderApi_swigregister
CQdpFtdcTraderApi_swigregister(CQdpFtdcTraderApi)

def CQdpFtdcTraderApi_CreateFtdcTraderApi(*args):
    return _pyctp.CQdpFtdcTraderApi_CreateFtdcTraderApi(*args)
CQdpFtdcTraderApi_CreateFtdcTraderApi = _pyctp.CQdpFtdcTraderApi_CreateFtdcTraderApi

def CQdpFtdcTraderApi_GetVersion(nMajorVersion, nMinorVersion):
    return _pyctp.CQdpFtdcTraderApi_GetVersion(nMajorVersion, nMinorVersion)
CQdpFtdcTraderApi_GetVersion = _pyctp.CQdpFtdcTraderApi_GetVersion

# This file is compatible with both classic and new-style classes.


